{
  "pipes": [
    {
      "name": "CapitalizePipe",
      "id": "pipe-CapitalizePipe-ac87bdf4959de9118ec998f0193d0b0935e5a1214c5751d83daf910a925b66e5c4a2b883b31b26ddafa9b840810d4f4d747daca8fbc4232a3e1822c2ad8d3dcd",
      "file": "src/pipes/capitalize/capitalize.pipe.ts",
      "type": "pipe",
      "deprecated": false,
      "deprecationMessage": "",
      "description": "",
      "rawdescription": "\n",
      "properties": [],
      "methods": [
        {
          "name": "transform",
          "args": [
            {
              "name": "value",
              "type": "string | null",
              "deprecated": false,
              "deprecationMessage": "",
              "optional": true
            }
          ],
          "optional": false,
          "returnType": "string",
          "typeParameters": [],
          "line": 8,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "value",
              "type": "string | null",
              "deprecated": false,
              "deprecationMessage": "",
              "optional": true,
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "standalone": true,
      "ngname": "capitalize",
      "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'capitalize',\n  standalone: true\n})\nexport class CapitalizePipe implements PipeTransform {\n  transform(value?: string | null): string {\n    if (!value) {\n      return '';\n    }\n\n    let isMatch = false;\n\n    return String(value).replace(/\\b[a-z]/g, function ($1) {\n      if (!isMatch) {\n        isMatch = true;\n        return $1.toUpperCase();\n      }\n      return $1;\n    });\n  }\n}\n"
    },
    {
      "name": "DefaultValuePipe",
      "id": "pipe-DefaultValuePipe-0102c19349bd50d47cf221d208763cb99ec196f25a570a44d641c7e68d7ad938c443964829bf7e0f04c95ff21eecebe60918010ca0e3fb43f97ea24a9a72aeac",
      "file": "src/pipes/default-value/default-value.pipe.ts",
      "type": "pipe",
      "deprecated": false,
      "deprecationMessage": "",
      "description": "",
      "rawdescription": "\n",
      "properties": [],
      "methods": [
        {
          "name": "transform",
          "args": [
            {
              "name": "value",
              "type": "T",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "defaultValue",
              "type": "K",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "T | K",
          "typeParameters": [],
          "line": 10,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "value",
              "type": "T",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "defaultValue",
              "type": "K",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "standalone": true,
      "ngname": "defaultValue",
      "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'defaultValue',\n  standalone: true\n})\nexport class DefaultValuePipe<T, K>\n  implements PipeTransform\n{\n  transform(value: T, defaultValue: K): T | K {\n    if (value === undefined || value === null) {\n      return defaultValue;\n    }\n\n    return value;\n  }\n}\n"
    },
    {
      "name": "EllipsisPipe",
      "id": "pipe-EllipsisPipe-de04dd17f6f1942e4a0a51a3bda0dfb43b309e967547d5f4477a5bfbd7d1ed085008bfc9735fd574312e0e3f1dac59343ef2a369d73881ee380e46a4865c209a",
      "file": "src/pipes/ellipsis/ellipsis.pipe.ts",
      "type": "pipe",
      "deprecated": false,
      "deprecationMessage": "",
      "description": "",
      "rawdescription": "\n",
      "properties": [],
      "methods": [
        {
          "name": "transform",
          "args": [
            {
              "name": "value",
              "type": "string | null | undefined",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "length",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "suffix",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": "",
              "defaultValue": "'...'"
            }
          ],
          "optional": false,
          "returnType": "string",
          "typeParameters": [],
          "line": 8,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "value",
              "type": "string | null | undefined",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "length",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "suffix",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": "",
              "defaultValue": "'...'",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "standalone": true,
      "ngname": "ellipsis",
      "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'ellipsis',\n  standalone: true\n})\nexport class EllipsisPipe implements PipeTransform {\n  transform(\n    value: string | null | undefined,\n    length: number,\n    suffix = '...'\n  ): string {\n    if (!value || length <= 0) {\n      return '';\n    }\n\n    if (value.length > length) {\n      return value.slice(0, length) + suffix;\n    }\n\n    return value;\n  }\n}\n"
    },
    {
      "name": "EnumPropertyPipe",
      "id": "pipe-EnumPropertyPipe-7cb6bf461fc35034efc22ead4fe665850c5d4bc34dfac39b3ec2b882090162ea7add3d8fddbfa5ced9d67f4e385237621dc7c106d68b3eb35dde6fe35e1404b7",
      "file": "src/pipes/enum-property/enum-property.pipe.ts",
      "type": "pipe",
      "deprecated": false,
      "deprecationMessage": "",
      "description": "",
      "rawdescription": "\n",
      "properties": [],
      "methods": [
        {
          "name": "transform",
          "args": [
            {
              "name": "property",
              "type": " | undefined | null",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "map",
              "type": "T | undefined",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": " | null",
          "typeParameters": [],
          "line": 10,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "property",
              "type": " | undefined | null",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "map",
              "type": "T | undefined",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "standalone": true,
      "ngname": "enumProperty",
      "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'enumProperty',\n  standalone: true\n})\nexport class EnumPropertyPipe<T extends object>\n  implements PipeTransform\n{\n  transform(\n    property: keyof T | undefined | null,\n    map: T | undefined\n  ): T[keyof T] | null {\n    if (!property || !map || !(property in map)) {\n      return null;\n    }\n\n    return map[property];\n  }\n}\n"
    },
    {
      "name": "FirstPipe",
      "id": "pipe-FirstPipe-33dfbb557c8d4f19639517f3cbbf9f8f569f19675796dfec246f2c03f4527c5c54664231fc19410dab36f1c692ac7ebf8d6436486c4c78ff9b25deec461e2e4a",
      "file": "src/pipes/first/first.pipe.ts",
      "type": "pipe",
      "deprecated": false,
      "deprecationMessage": "",
      "description": "",
      "rawdescription": "\n",
      "properties": [],
      "methods": [
        {
          "name": "transform",
          "args": [
            {
              "name": "list",
              "type": "Array<T> | null",
              "deprecated": false,
              "deprecationMessage": "",
              "optional": true
            }
          ],
          "optional": false,
          "returnType": "T | null",
          "typeParameters": [],
          "line": 8,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "list",
              "type": "Array<T> | null",
              "deprecated": false,
              "deprecationMessage": "",
              "optional": true,
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "standalone": true,
      "ngname": "first",
      "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'first',\n  standalone: true\n})\nexport class FirstPipe<T> implements PipeTransform {\n  transform(list?: Array<T> | null): T | null {\n    if (!list || !list.length || !Array.isArray(list)) {\n      return null;\n    }\n\n    return list[0] ?? null;\n  }\n}\n"
    },
    {
      "name": "FormatBytesPipe",
      "id": "pipe-FormatBytesPipe-425e994bdc9c0f4cb1957d6f29eb82334cc4fefd0efbbb165f9b5e11140a5a54e16e8a280825d8d6e0d61f3f462a1a209c37b3f93589a9880658ec96850ac1f8",
      "file": "src/pipes/format-bytes/format-bytes.pipe.ts",
      "type": "pipe",
      "deprecated": false,
      "deprecationMessage": "",
      "description": "",
      "rawdescription": "\n",
      "properties": [],
      "methods": [
        {
          "name": "transform",
          "args": [
            {
              "name": "value",
              "type": "number | null",
              "deprecated": false,
              "deprecationMessage": "",
              "optional": true
            },
            {
              "name": "decimals",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": "",
              "defaultValue": "2"
            }
          ],
          "optional": false,
          "returnType": "string | null",
          "typeParameters": [],
          "line": 11,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "value",
              "type": "number | null",
              "deprecated": false,
              "deprecationMessage": "",
              "optional": true,
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "decimals",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": "",
              "defaultValue": "2",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "standalone": true,
      "ngname": "formatBytes",
      "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\n\nconst k = 1024;\nconst sizes = ['b', 'Kb', 'Mb', 'Gb', 'Tb'];\n\n@Pipe({\n  name: 'formatBytes',\n  standalone: true\n})\nexport class FormatBytesPipe implements PipeTransform {\n  transform(\n    value?: number | null,\n    decimals = 2\n  ): string | null {\n    if (value === null || value === undefined) {\n      return null;\n    }\n\n    if (value === 0) {\n      return '0 b';\n    }\n    const i = Math.floor(Math.log(value) / Math.log(k));\n\n    const dm = decimals < 0 ? 0 : decimals;\n    return (\n      parseFloat((value / Math.pow(k, i)).toFixed(dm)) +\n      ' ' +\n      sizes[i]\n    );\n  }\n}\n"
    },
    {
      "name": "HighlightPipe",
      "id": "pipe-HighlightPipe-bd37e18a74f9f4dfff0818bae851ef623f9b4fdb02bd35da140e4680b732ae9f7c61055d1ce2fdea769a0a3c5de3652d3080a57ac39d8f04283d18d38f5990d7",
      "file": "src/pipes/highlight/highlight.pipe.ts",
      "type": "pipe",
      "deprecated": false,
      "deprecationMessage": "",
      "description": "",
      "rawdescription": "\n",
      "properties": [],
      "methods": [
        {
          "name": "transform",
          "args": [
            {
              "name": "value",
              "type": "string | null",
              "deprecated": false,
              "deprecationMessage": "",
              "optional": true
            },
            {
              "name": "searchTerm",
              "type": "string | null",
              "deprecated": false,
              "deprecationMessage": "",
              "optional": true
            }
          ],
          "optional": false,
          "returnType": "string | null | undefined",
          "typeParameters": [],
          "line": 8,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "value",
              "type": "string | null",
              "deprecated": false,
              "deprecationMessage": "",
              "optional": true,
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "searchTerm",
              "type": "string | null",
              "deprecated": false,
              "deprecationMessage": "",
              "optional": true,
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "standalone": true,
      "ngname": "highlight",
      "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'highlight',\n  standalone: true\n})\nexport class HighlightPipe implements PipeTransform {\n  transform(\n    value?: string | null,\n    searchTerm?: string | null\n  ): string | null | undefined {\n    if (!value || !searchTerm) {\n      return value;\n    }\n\n    const regex = new RegExp(searchTerm, 'gi');\n\n    return value.replace(\n      regex,\n      (match) => `<span class=\"highlighted\">${match}</span>`\n    );\n  }\n}\n"
    },
    {
      "name": "IdToValuePipe",
      "id": "pipe-IdToValuePipe-7f5b09c2b210e4af1cfe56e2e538b0bd4370226cb7a792f311c69e406bb721029f5107a4a78c74b28041f6d08ad07bd3379061253a08231e03f7245dd85752b7",
      "file": "src/pipes/IdToValue/id-to-value.pipe.ts",
      "type": "pipe",
      "deprecated": false,
      "deprecationMessage": "",
      "description": "",
      "rawdescription": "\n",
      "properties": [],
      "methods": [
        {
          "name": "transform",
          "args": [
            {
              "name": "id",
              "type": " | null",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "dictionary",
              "type": "T",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": " | null",
          "typeParameters": [],
          "line": 10,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "id",
              "type": " | null",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "dictionary",
              "type": "T",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "standalone": true,
      "ngname": "idToValue",
      "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'idToValue',\n  standalone: true\n})\nexport class IdToValuePipe<T extends object>\n  implements PipeTransform\n{\n  transform(\n    id: keyof T | null,\n    dictionary: T\n  ): T[keyof T] | null {\n    if (!dictionary || id == null) {\n      return null;\n    }\n\n    return dictionary[id] ?? null;\n  }\n}\n"
    },
    {
      "name": "JoinPipe",
      "id": "pipe-JoinPipe-5e08c70156b0b1e7b704ce8547bcdd4c0fa3938f7dd13015343c6a2837d0ebea80ba6cfa4608d6305c83dc7a0de7bed5b1fd34ec65e2c14564c56cb00309381d",
      "file": "src/pipes/join/join.pipe.ts",
      "type": "pipe",
      "deprecated": false,
      "deprecationMessage": "",
      "description": "",
      "rawdescription": "\n",
      "properties": [],
      "methods": [
        {
          "name": "transform",
          "args": [
            {
              "name": "collection",
              "type": "T[] | null",
              "deprecated": false,
              "deprecationMessage": "",
              "optional": true
            },
            {
              "name": "separator",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": "",
              "optional": true
            }
          ],
          "optional": false,
          "returnType": "string | null",
          "typeParameters": [],
          "line": 8,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "collection",
              "type": "T[] | null",
              "deprecated": false,
              "deprecationMessage": "",
              "optional": true,
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "separator",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": "",
              "optional": true,
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "standalone": true,
      "ngname": "join",
      "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'join',\n  standalone: true\n})\nexport class JoinPipe<T> implements PipeTransform {\n  transform(\n    collection?: T[] | null,\n    separator?: string\n  ): string | null {\n    if (!collection || collection.length === 0) {\n      return null;\n    }\n\n    return collection.join(separator);\n  }\n}\n"
    },
    {
      "name": "LastPipe",
      "id": "pipe-LastPipe-116c93d535a51e6598c4b86abc0ae7eabf8d006e40f5210ff1749875c720c107421944cea311fc6f9df05d662f5888a4834c9706e34d132d2e8e74ce9592f376",
      "file": "src/pipes/last/last.pipe.ts",
      "type": "pipe",
      "deprecated": false,
      "deprecationMessage": "",
      "description": "",
      "rawdescription": "\n",
      "properties": [],
      "methods": [
        {
          "name": "transform",
          "args": [
            {
              "name": "list",
              "type": "Array<T> | null",
              "deprecated": false,
              "deprecationMessage": "",
              "optional": true
            }
          ],
          "optional": false,
          "returnType": "T | null",
          "typeParameters": [],
          "line": 8,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "list",
              "type": "Array<T> | null",
              "deprecated": false,
              "deprecationMessage": "",
              "optional": true,
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "standalone": true,
      "ngname": "last",
      "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'last',\n  standalone: true\n})\nexport class LastPipe<T> implements PipeTransform {\n  transform(list?: Array<T> | null): T | null {\n    if (!list || !list.length || !Array.isArray(list)) {\n      return null;\n    }\n\n    return list[list.length - 1] ?? null;\n  }\n}\n"
    },
    {
      "name": "MemoPipe",
      "id": "pipe-MemoPipe-42da42a664df920c9c3d3b73ec78a76a4eb006d450c8c75ed8c163183ac0ffce226fb2c0be6bdbe83305323b277dba73adb2742ced2c13bfed40735a0dd38525",
      "file": "src/pipes/memo/memo.pipe.ts",
      "type": "pipe",
      "deprecated": false,
      "deprecationMessage": "",
      "description": "",
      "rawdescription": "\n",
      "properties": [],
      "methods": [
        {
          "name": "transform",
          "args": [
            {
              "name": "value",
              "type": "T",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "handler",
              "type": "function",
              "deprecated": false,
              "deprecationMessage": "",
              "function": [
                {
                  "name": "value",
                  "type": "T",
                  "deprecated": false,
                  "deprecationMessage": ""
                },
                {
                  "name": "args",
                  "type": "K[]",
                  "deprecated": false,
                  "deprecationMessage": "",
                  "dotDotDotToken": true
                }
              ]
            },
            {
              "name": "context",
              "type": "Q",
              "deprecated": false,
              "deprecationMessage": "",
              "optional": true
            },
            {
              "name": "args",
              "type": "Array<K>",
              "deprecated": false,
              "deprecationMessage": "",
              "dotDotDotToken": true
            }
          ],
          "optional": false,
          "returnType": "Z",
          "typeParameters": [],
          "line": 8,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "value",
              "type": "T",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "handler",
              "type": "function",
              "deprecated": false,
              "deprecationMessage": "",
              "function": [
                {
                  "name": "value",
                  "type": "T",
                  "deprecated": false,
                  "deprecationMessage": ""
                },
                {
                  "name": "args",
                  "type": "K[]",
                  "deprecated": false,
                  "deprecationMessage": "",
                  "dotDotDotToken": true
                }
              ],
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "context",
              "type": "Q",
              "deprecated": false,
              "deprecationMessage": "",
              "optional": true,
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "args",
              "type": "Array<K>",
              "deprecated": false,
              "deprecationMessage": "",
              "dotDotDotToken": true,
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "standalone": true,
      "ngname": "memo",
      "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'memo',\n  standalone: true\n})\nexport class MemoPipe<T, K, Z, Q> implements PipeTransform {\n  transform(\n    value: T,\n    handler: (value: T, ...args: K[]) => Z,\n    context?: Q,\n    ...args: Array<K>\n  ): Z {\n    if (context && handler) {\n      return handler.apply(context, [value, ...args]);\n    }\n\n    return handler(value, ...args);\n  }\n}\n"
    },
    {
      "name": "SplitPipe",
      "id": "pipe-SplitPipe-4ff4d9d5b88f7a8e65e68102b0a1026a0e3f9de29f65a7e26cb342983553f84cc74d33f7b92b5256d29099dcecd3581fab6413ab7a739a550aefb69712e91452",
      "file": "src/pipes/split/split.pipe.ts",
      "type": "pipe",
      "deprecated": false,
      "deprecationMessage": "",
      "description": "",
      "rawdescription": "\n",
      "properties": [],
      "methods": [
        {
          "name": "transform",
          "args": [
            {
              "name": "value",
              "type": "string | null",
              "deprecated": false,
              "deprecationMessage": "",
              "optional": true
            },
            {
              "name": "splitter",
              "type": "string | RegExp | null",
              "deprecated": false,
              "deprecationMessage": "",
              "optional": true
            }
          ],
          "optional": false,
          "returnType": "[] | null",
          "typeParameters": [],
          "line": 8,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "value",
              "type": "string | null",
              "deprecated": false,
              "deprecationMessage": "",
              "optional": true,
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "splitter",
              "type": "string | RegExp | null",
              "deprecated": false,
              "deprecationMessage": "",
              "optional": true,
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "standalone": true,
      "ngname": "split",
      "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'split',\n  standalone: true\n})\nexport class SplitPipe implements PipeTransform {\n  transform(\n    value?: string | null,\n    splitter?: string | RegExp | null\n  ): string[] | null {\n    if (!value || !splitter) {\n      return null;\n    }\n\n    return value.split(splitter);\n  }\n}\n"
    },
    {
      "name": "TruncatePipe",
      "id": "pipe-TruncatePipe-efa3a122103cd410a8d204cb4eeee548c3d3e3bcbaeb9332db9704d78992e9b29fb4e3b55e4f91e89205ca6ac6c28c697e86c8809690847b152fb946c649ccc1",
      "file": "src/pipes/truncate/truncate.pipe.ts",
      "type": "pipe",
      "deprecated": false,
      "deprecationMessage": "",
      "description": "",
      "rawdescription": "\n",
      "properties": [],
      "methods": [
        {
          "name": "transform",
          "args": [
            {
              "name": "value",
              "type": "string | null",
              "deprecated": false,
              "deprecationMessage": "",
              "optional": true
            },
            {
              "name": "length",
              "type": "number | null",
              "deprecated": false,
              "deprecationMessage": "",
              "optional": true
            }
          ],
          "optional": false,
          "returnType": "string",
          "typeParameters": [],
          "line": 8,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "value",
              "type": "string | null",
              "deprecated": false,
              "deprecationMessage": "",
              "optional": true,
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "length",
              "type": "number | null",
              "deprecated": false,
              "deprecationMessage": "",
              "optional": true,
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "standalone": true,
      "ngname": "truncate",
      "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'truncate',\n  standalone: true\n})\nexport class TruncatePipe implements PipeTransform {\n  transform(\n    value?: string | null,\n    length?: number | null\n  ): string {\n    if (!value || !length) {\n      return '';\n    }\n\n    if (value.length <= length) {\n      return value;\n    }\n\n    return value.slice(0, length);\n  }\n}\n"
    },
    {
      "name": "UniquePipe",
      "id": "pipe-UniquePipe-c4d190ab72b2c1b3d0acfb0b1da0d46b2bf0b0b181c7f6c2e484464c6a10500c7c6fb3fe6f144ff7986ebcacbf4cb30799877ac57fbad41de80bcf0bade7de47",
      "file": "src/pipes/unique/unique.pipe.ts",
      "type": "pipe",
      "deprecated": false,
      "deprecationMessage": "",
      "description": "",
      "rawdescription": "\n",
      "properties": [],
      "methods": [
        {
          "name": "transform",
          "args": [
            {
              "name": "collection",
              "type": "T[] | null",
              "deprecated": false,
              "deprecationMessage": "",
              "optional": true
            },
            {
              "name": "identifier",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "optional": true
            }
          ],
          "optional": false,
          "returnType": "T[]",
          "typeParameters": [],
          "line": 8,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "collection",
              "type": "T[] | null",
              "deprecated": false,
              "deprecationMessage": "",
              "optional": true,
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "identifier",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "optional": true,
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "standalone": true,
      "ngname": "unique",
      "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'unique',\n  standalone: true\n})\nexport class UniquePipe<T> implements PipeTransform {\n  transform(\n    collection?: T[] | null,\n    identifier?: keyof T\n  ): T[] {\n    if (!collection || collection.length === 0) {\n      return [];\n    }\n\n    if (!identifier) {\n      return [...new Set(collection)];\n    }\n\n    const ids = collection.map((item) => item[identifier]);\n    const uniqueIds = [...new Set(ids)];\n    return uniqueIds.reduce((acc, id) => {\n      const item = collection.find(\n        (item) => item[identifier] === id\n      );\n\n      if (!item) {\n        return acc;\n      }\n\n      acc.push(item);\n\n      return acc.filter(Boolean);\n    }, [] as T[]);\n  }\n}\n"
    },
    {
      "name": "UserNamePipe",
      "id": "pipe-UserNamePipe-ce665fb1c30627fb1192afb5fff22b18d851b6203064da857f6c1191ad66dff4ec0301fdfe0d803e7be4a4c65f424044cefe89f0f11460b445666b6c4bc24f2b",
      "file": "src/pipes/user-name/user-name.pipe.ts",
      "type": "pipe",
      "deprecated": false,
      "deprecationMessage": "",
      "description": "",
      "rawdescription": "\n",
      "properties": [],
      "methods": [
        {
          "name": "transform",
          "args": [
            {
              "name": "user",
              "type": "T | null",
              "deprecated": false,
              "deprecationMessage": "",
              "optional": true
            }
          ],
          "optional": false,
          "returnType": "string | null",
          "typeParameters": [],
          "line": 14,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "user",
              "type": "T | null",
              "deprecated": false,
              "deprecationMessage": "",
              "optional": true,
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "standalone": true,
      "ngname": "userName",
      "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'userName',\n  standalone: true\n})\nexport class UserNamePipe<\n  T extends {\n    firstName?: string | null;\n    lastName?: string | null;\n  }\n> implements PipeTransform\n{\n  transform(user?: T | null): string | null {\n    if (!user) {\n      return null;\n    }\n\n    const { firstName, lastName } = user;\n    return [firstName, lastName]\n      .map((item) => item?.trimStart()?.trimEnd())\n      .filter(Boolean)\n      .join(' ');\n  }\n}\n"
    }
  ],
  "interfaces": [
    {
      "name": "CacheOptions",
      "id": "interface-CacheOptions-6cfb79041f7795205005445d99345f09974efd85c9d2cca7e05d7160a33b2d0cb66064a40a29045cff86ff6ca85c2609db307b6dcefabc1335b975da34fd2021",
      "file": "src/decorators/cache/cache.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "interface",
      "sourceCode": "import { Observable, race, ReplaySubject } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\nexport interface CacheOptions {\n  ttl: number;\n}\n\n/**\n * This decorator assumes that the function being decorated returns an Observable\n * and that the same arguments will produce the same result within the specified TTL\n *\n * @typescript\n * class ExampleService {\n *   @Cache({ ttl: 5000 }) // Caching for 5 seconds\n *   fetchData(id: number): Observable<any> {\n *     return someAsyncFunctionReturningObservable(id);\n *   }\n * }\n *\n */\nexport function Cache(options: CacheOptions) {\n  const cacheMap: Map<\n    string,\n    ReplaySubject<any>\n  > = new Map();\n\n  return (\n    target: any,\n    propertyKey: string,\n    descriptor: PropertyDescriptor\n  ) => {\n    const originalFunction = descriptor.value;\n\n    descriptor.value = function (...args: any[]) {\n      const key = `${propertyKey}_${args.toString()}`;\n\n      if (!cacheMap.has(key)) {\n        cacheMap.set(\n          key,\n          new ReplaySubject<any>(1, options.ttl)\n        );\n      }\n\n      const cachedSubject = cacheMap.get(\n        key\n      ) as ReplaySubject<any>;\n\n      const req: Observable<any> = originalFunction\n        .apply(this, args)\n        ?.pipe(\n          tap(\n            (response) => {\n              cachedSubject.next(response);\n            },\n            (error) => {\n              // Forward errors to the ReplaySubject\n              cachedSubject.error(error);\n            }\n          )\n        );\n\n      return race(cachedSubject, req);\n    };\n\n    return descriptor;\n  };\n}\n",
      "properties": [
        {
          "name": "ttl",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 7
        }
      ],
      "indexSignatures": [],
      "kind": 171,
      "methods": [],
      "extends": []
    }
  ],
  "injectables": [
    {
      "name": "AlertService",
      "id": "injectable-AlertService-20ebd6bcc45c8f9e4252a297513b18c942d836b571fc21bc894d66a88b88bec737e8b60aae7827df60b230904bd5e451e336946b9a5fe341d10300ec27d2ec10",
      "file": "src/components/alert/alert.service.ts",
      "properties": [
        {
          "name": "_alerts$",
          "defaultValue": "new BehaviorSubject<Alerts>([])",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 20,
          "modifierKind": [
            123
          ]
        },
        {
          "name": "alerts$",
          "defaultValue": "this._alerts$.asObservable()",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 21,
          "modifierKind": [
            125
          ]
        },
        {
          "name": "alertsMap",
          "defaultValue": "{}",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Record<string | Alert>",
          "optional": false,
          "description": "",
          "line": 18,
          "modifierKind": [
            123
          ]
        }
      ],
      "methods": [
        {
          "name": "destroy",
          "args": [
            {
              "name": "id",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 58,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "id",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "emitMessage",
          "args": [
            {
              "name": "alert",
              "type": "Omit<Alert | id>",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 29,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "alert",
              "type": "Omit<Alert | id>",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "info",
          "args": [
            {
              "name": "message",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 54,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "message",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "success",
          "args": [
            {
              "name": "message",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 46,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "message",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "warning",
          "args": [
            {
              "name": "message",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 50,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "message",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "description": "",
      "rawdescription": "\n",
      "sourceCode": "import {\n  Inject,\n  Injectable,\n  Optional\n} from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { Alert, AlertConfig, Alerts } from './types';\nimport { generateID } from './utils';\nimport {\n  ALERTS_CONFIG,\n  DEFAULT_ALERTS_CONFIG\n} from './constants';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AlertService {\n  private alertsMap: Record<string, Alert> = {};\n\n  private _alerts$ = new BehaviorSubject<Alerts>([]);\n  public alerts$ = this._alerts$.asObservable();\n\n  constructor(\n    @Optional()\n    @Inject(ALERTS_CONFIG)\n    private alertConfig: AlertConfig\n  ) {}\n\n  emitMessage(alert: Omit<Alert, 'id'>): void {\n    const tempAlert = { ...alert, id: generateID() };\n\n    tempAlert.timeOutID = setTimeout(\n      this.destroy.bind(this, tempAlert.id),\n      this.alertConfig?.timeout ??\n        DEFAULT_ALERTS_CONFIG.timeout\n    ) as unknown as number;\n\n    this.alertsMap[tempAlert.id] = tempAlert;\n\n    this._alerts$.next([\n      { ...tempAlert },\n      ...this._alerts$.value\n    ]);\n  }\n\n  success(message: string): void {\n    this.emitMessage({ type: 'success', message });\n  }\n\n  warning(message: string): void {\n    this.emitMessage({ type: 'warning', message });\n  }\n\n  info(message: string): void {\n    this.emitMessage({ type: 'info', message });\n  }\n\n  destroy(id: string) {\n    if (\n      !Object.prototype.hasOwnProperty.call(\n        this.alertsMap,\n        id\n      )\n    )\n      return;\n\n    this.alertsMap[id].timeOutID &&\n      clearTimeout(this.alertsMap[id].timeOutID);\n\n    delete this.alertsMap[id];\n\n    this._alerts$.next([\n      ...this._alerts$.value.filter(\n        (item) => item.id !== id\n      )\n    ]);\n  }\n}\n",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "alertConfig",
            "type": "AlertConfig",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 21,
        "jsdoctags": [
          {
            "name": "alertConfig",
            "type": "AlertConfig",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "extends": [],
      "type": "injectable"
    }
  ],
  "guards": [],
  "interceptors": [],
  "classes": [],
  "directives": [
    {
      "name": "ErrorDirective",
      "id": "directive-ErrorDirective-0fb10afa398be75eeb19ac6e15b4cce23f5be972ddcf811803bb1cb2b3439bf8653e8048f7c6022ee9f6ab8fd32972f279580bcb96a8a55e3521b17d2123cb2d",
      "file": "src/directives/error/error.directive.ts",
      "type": "directive",
      "description": "",
      "rawdescription": "\n",
      "sourceCode": "import { Directive } from '@angular/core';\n\n@Directive({\n  selector: 'ks-error, [ksError]',\n  standalone: true,\n  host: {\n    class: 'ks-form-field-error',\n    'aria-atomic': 'true'\n  }\n})\nexport class ErrorDirective {\n  constructor() {}\n}\n",
      "selector": "ks-error, [ksError]",
      "providers": [],
      "hostDirectives": [],
      "standalone": true,
      "inputsClass": [],
      "outputsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "propertiesClass": [],
      "methodsClass": [],
      "extends": [],
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [],
        "line": 11
      }
    },
    {
      "name": "KsCardBodyDirective",
      "id": "directive-KsCardBodyDirective-0c247330d8fa3384a9304422d77281b023f7acfb0e23af58005d3e5a3f94b42d1c416b2b7658a4bcfe953d5d825f0948054b6e657688ce29e7c958a4552e3afd",
      "file": "src/components/card/card-body.directive.ts",
      "type": "directive",
      "description": "",
      "rawdescription": "\n",
      "sourceCode": "import { Directive } from '@angular/core';\n\n@Directive({\n  selector: '[ksCardBody]',\n  standalone: true\n})\nexport class KsCardBodyDirective {\n  constructor() {}\n}\n",
      "selector": "[ksCardBody]",
      "providers": [],
      "hostDirectives": [],
      "standalone": true,
      "inputsClass": [],
      "outputsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "propertiesClass": [],
      "methodsClass": [],
      "extends": [],
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [],
        "line": 7
      }
    },
    {
      "name": "KsCardFooterDirective",
      "id": "directive-KsCardFooterDirective-0f2b813a24aef3a620c1df6237705878f23cc42c07a2741636d84cf642af54ae101dc7871ae62df876a65b822d4ce002cd9510307256c87605f5b9edfc2a81ea",
      "file": "src/components/card/card-footer.directive.ts",
      "type": "directive",
      "description": "",
      "rawdescription": "\n",
      "sourceCode": "import { Directive } from '@angular/core';\n\n@Directive({\n  selector: '[ksCardFooter]',\n  standalone: true\n})\nexport class KsCardFooterDirective {\n  constructor() {}\n}\n",
      "selector": "[ksCardFooter]",
      "providers": [],
      "hostDirectives": [],
      "standalone": true,
      "inputsClass": [],
      "outputsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "propertiesClass": [],
      "methodsClass": [],
      "extends": [],
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [],
        "line": 7
      }
    },
    {
      "name": "KsCardHeaderDirective",
      "id": "directive-KsCardHeaderDirective-d25534fa08201b23437ca8049c64dcdcc6bdd41cea2f62abc4313b0e7a541538aa35202fd9c3a484e78f7ee5ee2231e381a6be904de62dea30dc7d8de801699d",
      "file": "src/components/card/card-header.directive.ts",
      "type": "directive",
      "description": "",
      "rawdescription": "\n",
      "sourceCode": "import { Directive } from '@angular/core';\n\n@Directive({\n  selector: '[ksCardHeader]',\n  standalone: true\n})\nexport class KsCardHeaderDirective {\n  constructor() {}\n}\n",
      "selector": "[ksCardHeader]",
      "providers": [],
      "hostDirectives": [],
      "standalone": true,
      "inputsClass": [],
      "outputsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "propertiesClass": [],
      "methodsClass": [],
      "extends": [],
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [],
        "line": 7
      }
    },
    {
      "name": "KsFormFieldControl",
      "id": "directive-KsFormFieldControl-c3f2609c42f23e0708ef894b7cbaa6e529ecb5836f5493922af5f269c0e0f104fd6c0f689b101a94c412aa579c704ab5a6bf5d4d722d92a77eb6bf2282c0878a",
      "file": "src/directives/form-field-control/form-field-control.directive.ts",
      "type": "directive",
      "description": "",
      "rawdescription": "\n",
      "sourceCode": "import {\n  AbstractControlDirective,\n  NgControl\n} from '@angular/forms';\nimport { Directive } from '@angular/core';\n\n@Directive()\nexport abstract class KsFormFieldControl {\n  // @ts-expect-error abstract directive field\n  readonly ngControl:\n    | NgControl\n    | AbstractControlDirective\n    | null;\n  // @ts-expect-error abstract directive field\n  readonly required: boolean;\n  // @ts-expect-error abstract directive field\n  readonly disabled: boolean;\n}\n",
      "providers": [],
      "hostDirectives": [],
      "standalone": false,
      "inputsClass": [],
      "outputsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "propertiesClass": [
        {
          "name": "disabled",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 17,
          "modifierKind": [
            148
          ]
        },
        {
          "name": "ngControl",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "NgControl | AbstractControlDirective | null",
          "optional": false,
          "description": "",
          "line": 10,
          "modifierKind": [
            148
          ]
        },
        {
          "name": "required",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 15,
          "modifierKind": [
            148
          ]
        }
      ],
      "methodsClass": [],
      "extends": []
    },
    {
      "name": "KsLabel",
      "id": "directive-KsLabel-ea069492a9c7428f6cf1550fc7c6d70dbb110e66fc83ff2fd00bfff0319e9e2d62957835ecc57c1c9e0433e5343f6360dce676fb792bc25515df23e9a839367d",
      "file": "src/directives/label/label.directive.ts",
      "type": "directive",
      "description": "",
      "rawdescription": "\n",
      "sourceCode": "import { Directive } from '@angular/core';\n\n@Directive({\n  selector: 'ks-label, [ksLabel]',\n  standalone: true\n})\nexport class KsLabel {}\n",
      "selector": "ks-label, [ksLabel]",
      "providers": [],
      "hostDirectives": [],
      "standalone": true,
      "inputsClass": [],
      "outputsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "propertiesClass": [],
      "methodsClass": [],
      "extends": []
    }
  ],
  "components": [
    {
      "name": "AlertComponent",
      "id": "component-AlertComponent-1d6866afb20f366a2c227a6a4d08ad8a85f529493cb6e00ab62fbcd6285f4842dbc3ec8f55e70187890bfb63e6f5750314ae4d3163b0be5531d296440a601fe3",
      "file": "src/components/alert/alert.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": [
        "ViewEncapsulation.None"
      ],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "ks-alert",
      "styleUrls": [],
      "styles": [],
      "templateUrl": [
        "./alert.component.html"
      ],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "alerts$",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Observable<Alerts>",
          "optional": false,
          "description": "",
          "line": 22
        }
      ],
      "methodsClass": [
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 26,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "trackByFn",
          "args": [
            {
              "name": "i",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "notice",
              "type": "Alert",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "any",
          "typeParameters": [],
          "line": 30,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "i",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "notice",
              "type": "Alert",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "CommonModule",
          "type": "module"
        },
        {
          "name": "NgFor"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {\n  ChangeDetectionStrategy,\n  Component,\n  OnInit,\n  ViewEncapsulation\n} from '@angular/core';\nimport { CommonModule, NgFor } from '@angular/common';\nimport { Observable } from 'rxjs';\nimport { Alert, Alerts } from './types';\nimport { AlertService } from './alert.service';\n\n@Component({\n  selector: 'ks-alert',\n  standalone: true,\n  imports: [CommonModule, NgFor],\n  templateUrl: './alert.component.html',\n  styleUrl: './alert.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None\n})\nexport class AlertComponent implements OnInit {\n  alerts$!: Observable<Alerts>;\n\n  constructor(private alertService: AlertService) {}\n\n  ngOnInit() {\n    this.alerts$ = this.alertService.alerts$;\n  }\n\n  trackByFn(i: number, notice: Alert) {\n    return notice.id;\n  }\n}\n",
      "styleUrl": "./alert.component.scss",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "alertService",
            "type": "AlertService",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 22,
        "jsdoctags": [
          {
            "name": "alertService",
            "type": "AlertService",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "extends": [],
      "implements": [
        "OnInit"
      ],
      "templateData": "<div class=\"ks-alert__container\">\n  <div\n    *ngFor=\"let alert of alerts$ | async; trackBy: trackByFn\"\n    [ngClass]=\"{\n      warning: alert.type === 'warning',\n      info: alert.type === 'info',\n      success: alert.type === 'success'\n    }\"\n    class=\"ks-alert\"\n  >\n    <div class=\"message\">\n      {{ alert.message }}\n    </div>\n  </div>\n</div>\n"
    },
    {
      "name": "AlertsComponent",
      "id": "component-AlertsComponent-f3b61bd4d438dbe259a376428fbaccf2e16dc361e2bb4ba877df7355b31c279fc439733d357c200daca4f6315e60841c8742d2dfb515b29a5aa3d0ac87312f69",
      "file": "src/app/features/alerts/alerts.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "ks-alerts",
      "styleUrls": [],
      "styles": [],
      "templateUrl": [
        "./alerts.component.html"
      ],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "messageCntr",
          "defaultValue": "new FormControl('')",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 31
        }
      ],
      "methodsClass": [
        {
          "name": "showAlert",
          "args": [
            {
              "name": "alertType",
              "type": "AlertType",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 35,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "alertType",
              "type": "AlertType",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "AlertComponent",
          "type": "component"
        },
        {
          "name": "KsButton"
        },
        {
          "name": "KsInput"
        },
        {
          "name": "ReactiveFormsModule",
          "type": "module"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {\n  ChangeDetectionStrategy,\n  Component\n} from '@angular/core';\nimport {\n  AlertComponent,\n  AlertService,\n  AlertType\n} from '@ngx-ks/alert';\nimport { KsButton } from '@ngx-ks/button';\nimport { KsInput } from '@ngx-ks/input';\nimport {\n  FormControl,\n  ReactiveFormsModule\n} from '@angular/forms';\n\n@Component({\n  selector: 'ks-alerts',\n  standalone: true,\n  imports: [\n    AlertComponent,\n    KsButton,\n    KsInput,\n    ReactiveFormsModule\n  ],\n  templateUrl: './alerts.component.html',\n  styleUrl: './alerts.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AlertsComponent {\n  messageCntr = new FormControl('');\n\n  constructor(private alertService: AlertService) {}\n\n  showAlert(alertType: AlertType): void {\n    this.alertService[alertType](\n      this.messageCntr.value ?? ''\n    );\n  }\n}\n",
      "styleUrl": "./alerts.component.scss",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "alertService",
            "type": "AlertService",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 31,
        "jsdoctags": [
          {
            "name": "alertService",
            "type": "AlertService",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "extends": [],
      "templateData": "<ks-alert></ks-alert>\n\n<input [formControl]=\"messageCntr\" ks-input placeholder=\"type message text\" />\n\n<div class=\"alert-buttons-container\">\n  <button (click)=\"showAlert('success')\" ks-button>Success</button>\n  <button (click)=\"showAlert('warning')\" ks-button>Warning</button>\n  <button (click)=\"showAlert('info')\" ks-button>Info</button>\n</div>\n"
    },
    {
      "name": "AppComponent",
      "id": "component-AppComponent-62d84ddefdc10c1abdcfc8ee64bd2fbb3a23b2fcd15d8ff271a33eb25c868f83a2140a7607f337741bb06bd3195fad2bcf944cc732830a369d60b92271f9463e",
      "file": "src/app/app.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-root",
      "styleUrls": [],
      "styles": [
        "\n      .app-content {\n        max-width: 500px;\n        padding: 20px;\n      }\n\n      .navigation {\n        padding-left: 30px;\n        display: flex;\n        gap: 20px;\n      }\n    "
      ],
      "template": "<div class=\"app-container\">\n  <h1>ks UI-kit <code>14.08-16.669</code></h1>\n  <div class=\"navigation\">\n    <a [routerLink]=\"'/inputs'\">Form Controls</a>\n    <a [routerLink]=\"'/buttons'\">Buttons</a>\n    <a [routerLink]=\"'/alerts'\">Alerts</a>\n    <a [routerLink]=\"'/layout'\">Layout</a>\n    <a [routerLink]=\"'/indicators'\">Indicators</a>\n    <a [routerLink]=\"'/pipes'\">Pipes</a>\n    <a [routerLink]=\"'/common-pages'\">Common Pages</a>\n  </div>\n  <hr />\n  <div class=\"app-content\">\n    <router-outlet></router-outlet>\n  </div>\n</div>\n",
      "templateUrl": [],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "KsInput"
        },
        {
          "name": "KsButton"
        },
        {
          "name": "RouterOutlet"
        },
        {
          "name": "RouterLink"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Component } from '@angular/core';\nimport { RouterLink, RouterOutlet } from '@angular/router';\nimport { KsInput } from '@ngx-ks/input';\nimport { KsButton } from '@ngx-ks/button';\n\n@Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [KsInput, KsButton, RouterOutlet, RouterLink],\n  template: `\n    <div class=\"app-container\">\n      <h1>ks UI-kit <code>14.08-16.669</code></h1>\n      <div class=\"navigation\">\n        <a [routerLink]=\"'/inputs'\">Form Controls</a>\n        <a [routerLink]=\"'/buttons'\">Buttons</a>\n        <a [routerLink]=\"'/alerts'\">Alerts</a>\n        <a [routerLink]=\"'/layout'\">Layout</a>\n        <a [routerLink]=\"'/indicators'\">Indicators</a>\n        <a [routerLink]=\"'/pipes'\">Pipes</a>\n        <a [routerLink]=\"'/common-pages'\">Common Pages</a>\n      </div>\n      <hr />\n      <div class=\"app-content\">\n        <router-outlet></router-outlet>\n      </div>\n    </div>\n  `,\n  styles: [\n    `\n      .app-content {\n        max-width: 500px;\n        padding: 20px;\n      }\n\n      .navigation {\n        padding-left: 30px;\n        display: flex;\n        gap: 20px;\n      }\n    `\n  ]\n})\nexport class AppComponent {}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "\n      .app-content {\n        max-width: 500px;\n        padding: 20px;\n      }\n\n      .navigation {\n        padding-left: 30px;\n        display: flex;\n        gap: 20px;\n      }\n    \n",
      "extends": []
    },
    {
      "name": "AvatarComponent",
      "id": "component-AvatarComponent-b3cdd72bf929d71b2afb1aa8748d0e38037781bed64833ae2ce470d19b4f9998334ebf9e1eee6db285596fc43da9738a49627cf45f0f90a2d969cf3c203f5fea",
      "file": "src/components/avatar/avatar.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "ks-avatar",
      "styleUrls": [],
      "styles": [],
      "templateUrl": [
        "./avatar.component.html"
      ],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "name": "size",
          "defaultValue": "100",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 13,
          "required": false
        }
      ],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "imageUrl",
          "defaultValue": "input('assets/placeholder.png')",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 12
        },
        {
          "name": "size",
          "defaultValue": "100",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 13,
          "required": false
        }
      ],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "NgOptimizedImage"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Component, input } from '@angular/core';\nimport { NgOptimizedImage } from '@angular/common';\n\n@Component({\n  selector: 'ks-avatar',\n  standalone: true,\n  imports: [NgOptimizedImage],\n  templateUrl: './avatar.component.html',\n  styleUrl: './avatar.component.scss'\n})\nexport class AvatarComponent {\n  imageUrl = input('assets/placeholder.png');\n  size = input(100);\n}\n",
      "styleUrl": "./avatar.component.scss",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": [],
      "templateData": "<div [style.height.px]=\"size()\" [style.width.px]=\"size()\" class=\"ks-avatar\">\n  <img [alt]=\"'Avatar'\" [src]=\"imageUrl()\" [style.height.px]=\"size()\" [style.width.px]=\"size()\" />\n</div>\n"
    },
    {
      "name": "AvatarStoryComponent",
      "id": "component-AvatarStoryComponent-3300a934aad6c2e22aa9f5c9796310beb179f7c6060b851ea0d8908b783b8a5904b404a63304fa9796474477f0f25cceba12951a46700dcbd4c39ff0e2c9dc93",
      "file": "src/stories/avatar/avatar.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "storybook-button",
      "styleUrls": [],
      "styles": [],
      "template": "<ks-storybook-wrapper>\n  <ks-avatar\n    [size]=\"size()\"\n    [imageUrl]=\"imageUrl()\"\n  ></ks-avatar>\n</ks-storybook-wrapper>\n",
      "templateUrl": [],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "name": "size",
          "defaultValue": "100",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 19,
          "required": false
        }
      ],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "imageUrl",
          "defaultValue": "input('assets/placeholder.png')",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 20
        },
        {
          "name": "size",
          "defaultValue": "100",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 19,
          "required": false
        }
      ],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "AvatarComponent",
          "type": "component"
        },
        {
          "name": "WrapperComponent",
          "type": "component"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Component, input } from '@angular/core';\nimport { WrapperComponent } from '../wrapper/wrapper.component';\nimport { AvatarComponent } from '@ngx-ks/avatar';\n\n@Component({\n  selector: 'storybook-button',\n  imports: [AvatarComponent, WrapperComponent],\n  template: `\n    <ks-storybook-wrapper>\n      <ks-avatar\n        [size]=\"size()\"\n        [imageUrl]=\"imageUrl()\"\n      ></ks-avatar>\n    </ks-storybook-wrapper>\n  `,\n  standalone: true\n})\nexport default class AvatarStoryComponent {\n  size = input(100);\n  imageUrl = input('assets/placeholder.png');\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": []
    },
    {
      "name": "ButtonComponent",
      "id": "component-ButtonComponent-5b188d2bdb643eab53abec97f40b0411f84a6a7544a00856d6205443d36e40150e447cc1b3f4e258f5203bb0d43bf6c94a110268c6f73173ceb2a84eed43ad38",
      "file": "src/stories/button/button.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "storybook-button",
      "styleUrls": [],
      "styles": [],
      "template": "<ks-storybook-wrapper>\n  <button\n    ks-button\n    (click)=\"onClick($event)\"\n    [disabled]=\"disabled\"\n  >\n    {{ label }}\n  </button>\n</ks-storybook-wrapper>\n",
      "templateUrl": [],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "name": "disabled",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 26,
          "type": "boolean",
          "decorators": []
        },
        {
          "name": "label",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "\n\nButton contents\n",
          "description": "<p>Button contents</p>\n",
          "line": 25,
          "type": "string",
          "decorators": []
        }
      ],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [
        {
          "name": "onClick",
          "args": [
            {
              "name": "event",
              "type": "MouseEvent",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 31,
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "\n\nOptional click handler\n",
          "description": "<p>Optional click handler</p>\n",
          "jsdoctags": [
            {
              "name": "event",
              "type": "MouseEvent",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "KsButton"
        },
        {
          "name": "WrapperComponent",
          "type": "component"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Component, Input } from '@angular/core';\nimport { WrapperComponent } from '../wrapper/wrapper.component';\nimport { KsButton } from '@ngx-ks/button';\n\n@Component({\n  selector: 'storybook-button',\n  imports: [KsButton, WrapperComponent],\n  template: `\n    <ks-storybook-wrapper>\n      <button\n        ks-button\n        (click)=\"onClick($event)\"\n        [disabled]=\"disabled\"\n      >\n        {{ label }}\n      </button>\n    </ks-storybook-wrapper>\n  `,\n  standalone: true\n})\nexport default class ButtonComponent {\n  /**\n   * Button contents\n   */\n  @Input() label!: string;\n  @Input() disabled?: boolean;\n\n  /**\n   * Optional click handler\n   */\n  onClick(event: MouseEvent): void {\n    console.log('clicked', event);\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": []
    },
    {
      "name": "ButtonsComponent",
      "id": "component-ButtonsComponent-eca161bd7f2d71113831c73e90d829f638ed81e60dd0b0db31e12d096c37c43ab0e3a8da07e7a2af36807a8705b22b5641d980470199bc40571404f34e66ffe7",
      "file": "src/app/features/buttons/buttons.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "ks-buttons",
      "styleUrls": [],
      "styles": [],
      "template": "<button ks-button>Button</button>\n<ks-divider></ks-divider>\n<button ks-button disabled>Disabled</button>\n<ks-divider></ks-divider>\n<ks-icon-button></ks-icon-button>\n<br />\n<ks-icon-button [disabled]=\"true\"></ks-icon-button>\n<br />\n<ks-icon-button icon=\"arrow_forward\"></ks-icon-button>\n<br />\n<ks-icon-button\n  icon=\"favorite\"\n  [size]=\"30\"\n  [color]=\"'red'\"\n></ks-icon-button>\n",
      "templateUrl": [],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "KsButton"
        },
        {
          "name": "KsDividerComponent",
          "type": "component"
        },
        {
          "name": "IconButtonComponent",
          "type": "component"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Component } from '@angular/core';\nimport { KsButton } from '@ngx-ks/button';\nimport { KsDividerComponent } from '@ngx-ks/divider';\nimport { IconButtonComponent } from '@ngx-ks/icon-button';\n\n@Component({\n  selector: 'ks-buttons',\n  standalone: true,\n  imports: [\n    KsButton,\n    KsDividerComponent,\n    IconButtonComponent\n  ],\n  template: `\n    <button ks-button>Button</button>\n    <ks-divider></ks-divider>\n    <button ks-button disabled>Disabled</button>\n    <ks-divider></ks-divider>\n    <ks-icon-button></ks-icon-button>\n    <br />\n    <ks-icon-button [disabled]=\"true\"></ks-icon-button>\n    <br />\n    <ks-icon-button icon=\"arrow_forward\"></ks-icon-button>\n    <br />\n    <ks-icon-button\n      icon=\"favorite\"\n      [size]=\"30\"\n      [color]=\"'red'\"\n    ></ks-icon-button>\n  `\n})\nexport class ButtonsComponent {}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": []
    },
    {
      "name": "CardComponent",
      "id": "component-CardComponent-c6eeb1511bd2e21a5def212940a112ef2dcb1565ae8f507801908c1dce4a41348b3701fd5b4a9f2f2599fe60a4074014f4fbbfc8dfbf4c6aa4401a98cd01b751",
      "file": "src/stories/card/card.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "storybook-card",
      "styleUrls": [],
      "styles": [
        "\n      .card-container {\n        max-width: 400px;\n      }\n    "
      ],
      "template": "<ks-storybook-wrapper>\n  <div class=\"card-container\">\n    <ks-card>\n      <div ksCardHeader *ngIf=\"withHeader\">\n        Card Header\n      </div>\n\n      <div ksCardBody *ngIf=\"withBody\">Card body</div>\n\n      <div ksCardFooter *ngIf=\"withFooter\">\n        Card Footer\n      </div>\n    </ks-card>\n  </div>\n</ks-storybook-wrapper>\n",
      "templateUrl": [],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "name": "withBody",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 37,
          "type": "boolean",
          "decorators": []
        },
        {
          "name": "withFooter",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 38,
          "type": "boolean",
          "decorators": []
        },
        {
          "name": "withHeader",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 36,
          "type": "boolean",
          "decorators": []
        }
      ],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "KsCardComponent",
          "type": "component"
        },
        {
          "name": "WrapperComponent",
          "type": "component"
        },
        {
          "name": "NgIf"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Component, Input } from '@angular/core';\nimport { WrapperComponent } from '../wrapper/wrapper.component';\nimport { KsCardComponent } from '@ngx-ks/card';\nimport { NgIf } from '@angular/common';\n\n@Component({\n  selector: 'storybook-card',\n  imports: [KsCardComponent, WrapperComponent, NgIf],\n  template: `\n    <ks-storybook-wrapper>\n      <div class=\"card-container\">\n        <ks-card>\n          <div ksCardHeader *ngIf=\"withHeader\">\n            Card Header\n          </div>\n\n          <div ksCardBody *ngIf=\"withBody\">Card body</div>\n\n          <div ksCardFooter *ngIf=\"withFooter\">\n            Card Footer\n          </div>\n        </ks-card>\n      </div>\n    </ks-storybook-wrapper>\n  `,\n  standalone: true,\n  styles: [\n    `\n      .card-container {\n        max-width: 400px;\n      }\n    `\n  ]\n})\nexport default class CardComponent {\n  @Input() withHeader = false;\n  @Input() withBody = false;\n  @Input() withFooter = false;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "\n      .card-container {\n        max-width: 400px;\n      }\n    \n",
      "extends": []
    },
    {
      "name": "CheckboxComponent",
      "id": "component-CheckboxComponent-c2f465009bc523ce53080a90adbc15ceed0d93b82240e13f661725ccd1996c4d8f493635ba243b80b2ffa5c430cefe06dc817addb05ef982308a2245a930635c",
      "file": "src/components/checkbox/checkbox.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [
        {
          "name": "{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => CheckboxComponent), multi: true\n}",
          "type": "component"
        }
      ],
      "selector": "ks-checkbox",
      "styleUrls": [],
      "styles": [],
      "template": "<label\n  [ngClass]=\"{ disabled: isDisabled }\"\n  class=\"ks-checkbox\"\n>\n  <input\n    class=\"ks-checkbox-input\"\n    (change)=\"toggleChange($event)\"\n    [(ngModel)]=\"isChecked\"\n    [disabled]=\"isDisabled\"\n    (blur)=\"onTouched($event)\"\n    type=\"checkbox\"\n  />\n  <span class=\"checkmark\"></span>\n  <span class=\"label\">{{ label }}</span>\n</label>\n",
      "templateUrl": [],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "name": "label",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 47,
          "type": "string",
          "decorators": []
        }
      ],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "isChecked",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 48
        },
        {
          "name": "isDisabled",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 49
        },
        {
          "name": "onChange",
          "defaultValue": "() => {...}",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 74,
          "modifierKind": [
            125
          ]
        },
        {
          "name": "onTouched",
          "defaultValue": "() => {...}",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 76,
          "modifierKind": [
            125
          ]
        }
      ],
      "methodsClass": [
        {
          "name": "registerOnChange",
          "args": [
            {
              "name": "fn",
              "type": "any",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 57,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "fn",
              "type": "any",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "registerOnTouched",
          "args": [
            {
              "name": "fn",
              "type": "any",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 61,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "fn",
              "type": "any",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "setDisabledState",
          "args": [
            {
              "name": "isDisabled",
              "type": "boolean",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 69,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "isDisabled",
              "type": "boolean",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "toggleChange",
          "args": [
            {
              "name": "event",
              "type": "Event",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 51,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "event",
              "type": "Event",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "writeValue",
          "args": [
            {
              "name": "value",
              "type": "boolean",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 65,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "value",
              "type": "boolean",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "FormsModule",
          "type": "module"
        },
        {
          "name": "ReactiveFormsModule",
          "type": "module"
        },
        {
          "name": "NgClass"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {\n  Component,\n  forwardRef,\n  Input\n} from '@angular/core';\nimport {\n  ControlValueAccessor,\n  FormsModule,\n  NG_VALUE_ACCESSOR,\n  ReactiveFormsModule\n} from '@angular/forms';\nimport { NgClass } from '@angular/common';\n\n@Component({\n  selector: 'ks-checkbox',\n  standalone: true,\n  imports: [FormsModule, ReactiveFormsModule, NgClass],\n  template: `\n    <label\n      [ngClass]=\"{ disabled: isDisabled }\"\n      class=\"ks-checkbox\"\n    >\n      <input\n        class=\"ks-checkbox-input\"\n        (change)=\"toggleChange($event)\"\n        [(ngModel)]=\"isChecked\"\n        [disabled]=\"isDisabled\"\n        (blur)=\"onTouched($event)\"\n        type=\"checkbox\"\n      />\n      <span class=\"checkmark\"></span>\n      <span class=\"label\">{{ label }}</span>\n    </label>\n  `,\n  styleUrl: './checkbox.component.scss',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => CheckboxComponent),\n      multi: true\n    }\n  ]\n})\nexport class CheckboxComponent\n  implements ControlValueAccessor\n{\n  @Input() label?: string;\n  isChecked: boolean = false;\n  isDisabled: boolean = false;\n\n  toggleChange(event: Event): void {\n    this.isChecked =\n      (event?.target as never)?.['checked'] || false;\n    this.onChange(this.isChecked);\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.onTouched = fn;\n  }\n\n  writeValue(value: boolean): void {\n    this.isChecked = value;\n  }\n\n  setDisabledState(isDisabled: boolean) {\n    this.isDisabled = isDisabled;\n  }\n\n  // Functions to propagate changes and touch events\n  public onChange: any = () => {};\n\n  public onTouched: any = () => {};\n}\n",
      "styleUrl": "./checkbox.component.scss",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": [],
      "implements": [
        "ControlValueAccessor"
      ]
    },
    {
      "name": "CheckboxStoryBookComponent",
      "id": "component-CheckboxStoryBookComponent-28d9d9f0a97c2a245e7dc576617ad08cf2d813bcbf0c6a78ded30d3bd8be3c088495ae3380f691dc0d020bf53d42e78d2f5f2dfe8779b10816d5d2f3bef4fd46",
      "file": "src/stories/checkbox/checkbox.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "storybook-checkbox",
      "styleUrls": [],
      "styles": [],
      "template": "<ks-storybook-wrapper>\n  <ks-checkbox\n    [label]=\"label\"\n    [formControl]=\"$any(cntrl)\"\n  >\n  </ks-checkbox>\n</ks-storybook-wrapper>\n",
      "templateUrl": [],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "name": "disabled",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 38,
          "type": "boolean",
          "decorators": []
        },
        {
          "name": "label",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "\n\nButton contents\n",
          "description": "<p>Button contents</p>\n",
          "line": 36,
          "type": "string",
          "decorators": []
        },
        {
          "name": "value",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 37,
          "type": "boolean",
          "decorators": []
        }
      ],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "cntrl",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "FormControl",
          "optional": true,
          "description": "",
          "line": 31,
          "modifierKind": [
            125
          ]
        }
      ],
      "methodsClass": [
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 42,
          "deprecated": false,
          "deprecationMessage": ""
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "CheckboxComponent",
          "type": "component"
        },
        {
          "name": "WrapperComponent",
          "type": "component"
        },
        {
          "name": "ReactiveFormsModule",
          "type": "module"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import type { OnInit } from '@angular/core';\nimport { Component, Input } from '@angular/core';\nimport { WrapperComponent } from '../wrapper/wrapper.component';\nimport {\n  FormControl,\n  ReactiveFormsModule\n} from '@angular/forms';\nimport { CheckboxComponent } from '@ngx-ks/checkbox';\n\n@Component({\n  selector: 'storybook-checkbox',\n  imports: [\n    CheckboxComponent,\n    WrapperComponent,\n    ReactiveFormsModule\n  ],\n  template: `\n    <ks-storybook-wrapper>\n      <ks-checkbox\n        [label]=\"label\"\n        [formControl]=\"$any(cntrl)\"\n      >\n      </ks-checkbox>\n    </ks-storybook-wrapper>\n  `,\n  standalone: true\n})\nexport default class CheckboxStoryBookComponent\n  implements OnInit\n{\n  public cntrl?: FormControl;\n\n  /**\n   * Button contents\n   */\n  @Input() label!: string;\n  @Input() value!: boolean;\n  @Input() disabled = false;\n\n  constructor() {}\n\n  ngOnInit() {\n    this.cntrl = new FormControl({\n      value: this.value,\n      disabled: this.disabled\n    });\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [],
        "line": 38
      },
      "extends": [],
      "implements": [
        "OnInit"
      ]
    },
    {
      "name": "CommonPagesComponent",
      "id": "component-CommonPagesComponent-26d21aa8268a1e137dfa7168263b8302c8361f1d1e0d4c089016e1d9f5c0e385c9face9123774120b7433a244ec9cd0540da2899ede19be46b1781cf4b58e2e1",
      "file": "src/app/features/common-pages/common-pages.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "ks-common-pages",
      "styleUrls": [],
      "styles": [],
      "templateUrl": [
        "./common-pages.component.html"
      ],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "loginData",
          "defaultValue": "{}",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Partial<LoginData>",
          "optional": false,
          "description": "",
          "line": 24
        }
      ],
      "methodsClass": [
        {
          "name": "loginPageSubmit",
          "args": [
            {
              "name": "data",
              "type": "Partial<LoginData>",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 27,
          "deprecated": false,
          "deprecationMessage": "",
          "decorators": [
            {
              "name": "Cache",
              "stringifiedArguments": "{ttl: 3000}"
            }
          ],
          "modifierKind": [
            170
          ],
          "jsdoctags": [
            {
              "name": "data",
              "type": "Partial<LoginData>",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "LoginPageComponent",
          "type": "component"
        },
        {
          "name": "JsonPipe",
          "type": "pipe"
        },
        {
          "name": "KsDividerComponent",
          "type": "component"
        },
        {
          "name": "PageNotFoundComponent",
          "type": "component"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Component } from '@angular/core';\nimport {\n  LoginData,\n  LoginPageComponent\n} from '@ngx-ks/login-page';\nimport { JsonPipe } from '@angular/common';\nimport { KsDividerComponent } from '@ngx-ks/divider';\nimport { Cache } from '@ngx-ks/decorators/cache';\nimport { PageNotFoundComponent } from '@ngx-ks/page-not-found';\n\n@Component({\n  selector: 'ks-common-pages',\n  standalone: true,\n  imports: [\n    LoginPageComponent,\n    JsonPipe,\n    KsDividerComponent,\n    PageNotFoundComponent\n  ],\n  templateUrl: './common-pages.component.html',\n  styleUrl: './common-pages.component.scss'\n})\nexport class CommonPagesComponent {\n  loginData: Partial<LoginData> = {};\n\n  @Cache({ ttl: 3000 })\n  loginPageSubmit(data: Partial<LoginData>): void {\n    this.loginData = data;\n  }\n}\n",
      "styleUrl": "./common-pages.component.scss",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": [],
      "templateData": "<h4>Login page</h4>\n<ks-login-page (submit)=\"loginPageSubmit($event)\"></ks-login-page>\n<ks-divider></ks-divider>\n{{ loginData | json }}\n\n<ks-divider></ks-divider>\n<h4>Page Not Found - 404</h4>\n<ks-page-not-found></ks-page-not-found>\n"
    },
    {
      "name": "DateRangePickerComponent",
      "id": "component-DateRangePickerComponent-f196da31fb5f627cc0e2abeadfc28d3e2469c43c235daff0679eec9f825adcdb54dffffeb8b4a98e77df68c46064db6f39bc17ce787db8b0f6b52a49a48cbcaf",
      "file": "src/components/date-range-picker/date-range-picker.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "ks-date-range-picker",
      "styleUrls": [
        "./date-range-picker.component.scss"
      ],
      "styles": [],
      "templateUrl": [
        "./date-range-picker.component.html"
      ],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "name": "endDate",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 13,
          "type": "string",
          "decorators": []
        },
        {
          "name": "startDate",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 12,
          "type": "string",
          "decorators": []
        }
      ],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [
        {
          "name": "onEndDateChange",
          "args": [
            {
              "name": "event",
              "type": "Event",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 20,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "event",
              "type": "Event",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "onStartDateChange",
          "args": [
            {
              "name": "event",
              "type": "Event",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 15,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "event",
              "type": "Event",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "FormsModule",
          "type": "module"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Component, Input } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\n@Component({\n  selector: 'ks-date-range-picker',\n  templateUrl: './date-range-picker.component.html',\n  styleUrls: ['./date-range-picker.component.scss'],\n  imports: [FormsModule],\n  standalone: true\n})\nexport class DateRangePickerComponent {\n  @Input() startDate: string = '';\n  @Input() endDate: string = '';\n\n  onStartDateChange(event: Event): void {\n    const input = event.target as HTMLInputElement;\n    this.startDate = input.value;\n  }\n\n  onEndDateChange(event: Event): void {\n    const input = event.target as HTMLInputElement;\n    this.endDate = input.value;\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": "@use '../../core/styles/palette';\n\n.date-range-picker-container {\n  display: flex;\n  justify-content: space-between;\n  gap: 1rem;\n\n  .neumorphic-input {\n    display: flex;\n    flex-direction: column;\n    position: relative;\n\n    label {\n      margin-bottom: 0.5rem;\n      font-size: 0.9rem;\n      color: #6c757d;\n    }\n\n    input {\n      padding: 0.5rem 1rem;\n      border: none;\n      border-radius: 12px;\n      background-color: palette.$background-color;\n      box-shadow: inset 2px 2px 3px palette.$outer-box-shadow,\n      inset -1px -1px 2px palette.$inner-box-shadow;\n      transition: box-shadow 0.3s ease-in-out;\n      outline: none;\n      font-size: 1rem;\n      color: #333;\n\n      &:focus {\n        box-shadow: inset 5px 5px 10px palette.$outer-box-shadow,\n        inset -5px -5px 10px palette.$inner-box-shadow;\n      }\n    }\n  }\n}\n",
          "styleUrl": "./date-range-picker.component.scss"
        }
      ],
      "stylesData": "",
      "extends": [],
      "templateData": "<div class=\"date-range-picker-container\">\n  <div class=\"neumorphic-input\">\n    <label for=\"start-date\">Start Date</label>\n    <input\n      (change)=\"onStartDateChange($event)\"\n      [(ngModel)]=\"startDate\"\n      id=\"start-date\"\n      type=\"date\"\n    />\n  </div>\n\n  <div class=\"neumorphic-input\">\n    <label for=\"end-date\">End Date</label>\n    <input\n      (change)=\"onEndDateChange($event)\"\n      [(ngModel)]=\"endDate\"\n      id=\"end-date\"\n      type=\"date\"\n    />\n  </div>\n</div>\n"
    },
    {
      "name": "DateRangePickerStoryComponent",
      "id": "component-DateRangePickerStoryComponent-ae5821a13c4aa1bf26c2af371ba3803e3749b9f7e2096d94a197e6fe89851b57c6f60c10eb785d2f2d89fc2bf92370fcbc6eaecbd13aaf733821f41363b73f80",
      "file": "src/stories/date-range-picker/date-range-picker.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "storybook-button",
      "styleUrls": [],
      "styles": [],
      "template": "<ks-storybook-wrapper>\n  <ks-date-range-picker></ks-date-range-picker>\n</ks-storybook-wrapper>\n",
      "templateUrl": [],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "WrapperComponent",
          "type": "component"
        },
        {
          "name": "DateRangePickerComponent",
          "type": "component"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Component } from '@angular/core';\nimport { WrapperComponent } from '../wrapper/wrapper.component';\nimport { DateRangePickerComponent } from '@ngx-ks/date-range-picker';\n\n@Component({\n  selector: 'storybook-button',\n  imports: [WrapperComponent, DateRangePickerComponent],\n  template: `\n    <ks-storybook-wrapper>\n      <ks-date-range-picker></ks-date-range-picker>\n    </ks-storybook-wrapper>\n  `,\n  standalone: true\n})\nexport default class DateRangePickerStoryComponent {}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": []
    },
    {
      "name": "DialogComponent",
      "id": "component-DialogComponent-e6d3f5b40992636dc9aa5f3190c9d954c786d34cab6613750b750b8a7fa807cbc5449993b0be48e1f9a66e818a5a24fd57f9165799bf8c8b638831f91bbc30bb",
      "file": "src/components/dialog/dialog.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "ks-dialog",
      "styleUrls": [],
      "styles": [],
      "templateUrl": [
        "./dialog.component.html"
      ],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "name": "isOpen",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 17,
          "type": "boolean",
          "decorators": []
        }
      ],
      "outputsClass": [
        {
          "name": "close",
          "defaultValue": "new EventEmitter()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 18,
          "type": "EventEmitter"
        }
      ],
      "propertiesClass": [],
      "methodsClass": [
        {
          "name": "closeDialog",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 22,
          "deprecated": false,
          "deprecationMessage": ""
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "NgIf"
        },
        {
          "name": "NgClass"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {\n  Component,\n  EventEmitter,\n  Input,\n  Output\n} from '@angular/core';\nimport { NgClass, NgIf } from '@angular/common';\n\n@Component({\n  selector: 'ks-dialog',\n  standalone: true,\n  imports: [NgIf, NgClass],\n  templateUrl: './dialog.component.html',\n  styleUrl: './dialog.component.scss'\n})\nexport class DialogComponent {\n  @Input() isOpen: boolean = false;\n  @Output() close = new EventEmitter();\n\n  constructor() {}\n\n  closeDialog(): void {\n    this.isOpen = false;\n    this.close.emit();\n  }\n}\n",
      "styleUrl": "./dialog.component.scss",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [],
        "line": 18
      },
      "extends": [],
      "templateData": "<div [ngClass]=\"{open: isOpen}\" class=\"ks-dialog\">\n  <div class=\"dialog-content\">\n    <ng-content></ng-content>\n  </div>\n</div>\n<div (click)=\"closeDialog()\" *ngIf=\"isOpen\" class=\"overlay\"></div>\n"
    },
    {
      "name": "DividerComponent",
      "id": "component-DividerComponent-6fde1720bab570b1699650f76ed42043a61c67bc77e0e9d6435227c4aeaa5a11f6952009a14cfb06762aca23ee458dd84dd44c147c3e434824b0f545cb1d9056",
      "file": "src/stories/divider/divider.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "storybook-button",
      "styleUrls": [],
      "styles": [],
      "template": "<ks-storybook-wrapper>\n  <ks-divider></ks-divider>\n</ks-storybook-wrapper>\n",
      "templateUrl": [],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "KsButton"
        },
        {
          "name": "WrapperComponent",
          "type": "component"
        },
        {
          "name": "KsDividerComponent",
          "type": "component"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Component } from '@angular/core';\nimport { WrapperComponent } from '../wrapper/wrapper.component';\nimport { KsButton } from '@ngx-ks/button';\nimport { KsDividerComponent } from '@ngx-ks/divider';\n\n@Component({\n  selector: 'storybook-button',\n  imports: [KsButton, WrapperComponent, KsDividerComponent],\n  template: `\n    <ks-storybook-wrapper>\n      <ks-divider></ks-divider>\n    </ks-storybook-wrapper>\n  `,\n  standalone: true\n})\nexport default class DividerComponent {}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": []
    },
    {
      "name": "Dropdown",
      "id": "component-Dropdown-db59e74a2cf8f0ec0b6138894b57404f07f1c3370c8249e2545be0e5f2dd570517a0d38d930d7e1bba55514e2788ad6c9ec5be6bc3ad4866f8fcf830034cbb54",
      "file": "src/stories/dropdown/Dropdown.stories.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "styleUrls": [],
      "styles": [],
      "template": "<ks-dropdown   [options]=\"['42', '100']\"\n ></ks-dropdown>",
      "templateUrl": [],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "DropdownComponent",
          "type": "component"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import type { Meta, StoryObj } from '@storybook/angular';\nimport { Component } from '@angular/core';\nimport { DropdownComponent } from '@ngx-ks/dropdown';\n\n@Component({\n  standalone: true,\n  imports: [DropdownComponent],\n  template: ` <ks-dropdown\n    [options]=\"['42', '100']\"\n  ></ks-dropdown>`\n})\nclass Dropdown {}\n\n// More on how to set up stories at: https://storybook.js.org/docs/writing-stories\nconst meta: Meta<Dropdown> = {\n  title: 'Example/Dropdown',\n  component: Dropdown,\n  render: (args: Dropdown) => ({\n    props: {\n      ...args\n    }\n  }),\n  argTypes: {}\n};\n\nexport default meta;\ntype Story = StoryObj<Dropdown>;\n\nexport const Default: Story = {\n  args: {}\n};\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": []
    },
    {
      "name": "DropdownComponent",
      "id": "component-DropdownComponent-c31ca62ba43acfac63bc4534b55e7b622c049d6daf04503cbf0969ac87fa1689126de8f1880427fabd5252b1d24910fd0605dcf2e8f795d12e04a787930321c0",
      "file": "src/components/dropdown/dropdown.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "ks-dropdown",
      "styleUrls": [],
      "styles": [],
      "templateUrl": [
        "./dropdown.component.html"
      ],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "name": "options",
          "defaultValue": "[]",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 12,
          "type": "string[]",
          "decorators": []
        }
      ],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "isOpen",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 14
        },
        {
          "name": "selectedOption",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 13
        }
      ],
      "methodsClass": [
        {
          "name": "selectOption",
          "args": [
            {
              "name": "event",
              "type": "Event",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "option",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 22,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "event",
              "type": "Event",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "option",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "toggleDropdown",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 18,
          "deprecated": false,
          "deprecationMessage": ""
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "NgForOf"
        },
        {
          "name": "NgClass"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Component, Input } from '@angular/core';\nimport { NgClass, NgForOf } from '@angular/common';\n\n@Component({\n  selector: 'ks-dropdown',\n  standalone: true,\n  imports: [NgForOf, NgClass],\n  templateUrl: './dropdown.component.html',\n  styleUrl: './dropdown.component.scss'\n})\nexport class DropdownComponent {\n  @Input() options: string[] = [];\n  selectedOption: string = '';\n  isOpen: boolean = false;\n\n  constructor() {}\n\n  toggleDropdown(): void {\n    this.isOpen = !this.isOpen;\n  }\n\n  selectOption(event: Event, option: string): void {\n    event.preventDefault();\n    event.stopPropagation();\n    this.selectedOption = option;\n    this.isOpen = false;\n  }\n}\n",
      "styleUrl": "./dropdown.component.scss",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [],
        "line": 14
      },
      "extends": [],
      "templateData": "<div (click)=\"toggleDropdown()\" [ngClass]=\"{'open': isOpen}\" class=\"ks-dropdown\">\n  <div class=\"selected-item\">{{ selectedOption }}</div>\n  <ul class=\"dropdown-list\">\n    <li (click)=\"selectOption($event, option)\" *ngFor=\"let option of options\">{{ option }}</li>\n  </ul>\n</div>\n"
    },
    {
      "name": "FormFieldComponent",
      "id": "component-FormFieldComponent-bb93ed18980cdc0e9a0919bdf7a146fb02ca293405df1f142679cf66af5cba6f1d77c86b0611d007e86e4e7874f85be670e47a324bc2cf21b45ae09ef260b7f6",
      "file": "src/components/form-field/form-field.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": [
        "ViewEncapsulation.None"
      ],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "ks-form-field",
      "styleUrls": [],
      "styles": [],
      "templateUrl": [
        "./form-field.component.html"
      ],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "contentLabel",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "KsLabel",
          "optional": true,
          "description": "",
          "line": 24,
          "decorators": [
            {
              "name": "ContentChild",
              "stringifiedArguments": "KsLabel"
            }
          ],
          "modifierKind": [
            170
          ]
        },
        {
          "name": "formFieldControl",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "KsFormFieldControl | undefined",
          "optional": false,
          "description": "",
          "line": 21,
          "decorators": [
            {
              "name": "ContentChild",
              "stringifiedArguments": "KsFormFieldControl"
            }
          ],
          "modifierKind": [
            170
          ]
        }
      ],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "CommonModule",
          "type": "module"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {\n  ChangeDetectionStrategy,\n  Component,\n  ContentChild,\n  ViewEncapsulation\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { KsFormFieldControl } from '@ngx-ks/form-field-control';\nimport { KsLabel } from '@ngx-ks/label';\n\n@Component({\n  selector: 'ks-form-field',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './form-field.component.html',\n  styleUrl: './form-field.component.scss',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FormFieldComponent {\n  @ContentChild(KsFormFieldControl) formFieldControl:\n    | KsFormFieldControl\n    | undefined;\n  @ContentChild(KsLabel) contentLabel?: KsLabel;\n}\n",
      "styleUrl": "./form-field.component.scss",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": [],
      "templateData": "<div class=\"ks-form-field-container\">\n  <label class=\"ks-form-field-label\">\n    <ng-content select=\"ks-label, [ksLabel]\"></ng-content>\n    <span *ngIf=\"formFieldControl?.required && contentLabel\" class=\"ks-required-marker\">*</span>\n  </label>\n  <div class=\"filed-container\">\n    <ng-content></ng-content>\n  </div>\n  <div class=\"ks-form-field__error-container\">\n    <ng-content select=\"ks-error, [ksError]\"></ng-content>\n  </div>\n</div>\n"
    },
    {
      "name": "IconButtonComponent",
      "id": "component-IconButtonComponent-4cb3125331ffdac58bbe4e097e8a7dd5e60c2e65a9c7b3d4721c58e1bd193b8a72ae08af3b0d92772e413975995a23300ce886f5bb76915846c1c0b798332b77",
      "file": "src/components/icon-button/icon-button.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "ks-icon-button",
      "styleUrls": [],
      "styles": [],
      "templateUrl": [
        "./icon-button.component.html"
      ],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "name": "color",
          "defaultValue": "'#000'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 14,
          "type": "string",
          "decorators": []
        },
        {
          "name": "disabled",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 15,
          "type": "boolean",
          "decorators": []
        },
        {
          "name": "icon",
          "defaultValue": "'home'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 12,
          "type": "string",
          "decorators": []
        },
        {
          "name": "size",
          "defaultValue": "50",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 13,
          "type": "number",
          "decorators": []
        }
      ],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "MatIcon"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Component, Input } from '@angular/core';\nimport { MatIcon } from '@angular/material/icon';\n\n@Component({\n  selector: 'ks-icon-button',\n  standalone: true,\n  imports: [MatIcon],\n  templateUrl: './icon-button.component.html',\n  styleUrl: './icon-button.component.scss'\n})\nexport class IconButtonComponent {\n  @Input() icon = 'home';\n  @Input() size = 50;\n  @Input() color = '#000';\n  @Input() disabled = false;\n}\n",
      "styleUrl": "./icon-button.component.scss",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": [],
      "templateData": "<button [disabled]=\"disabled\" [style.height.px]=\"size\" [style.width.px]=\"size\" class=\"ks-icon-button\">\n  <mat-icon\n    [fontIcon]=\"icon\"\n    [style.color]=\"color\"\n    [style.fontSize.px]=\"size * 0.6\"\n    [style.height]=\"'unset'\"\n    [style.width]=\"'unset'\">\n  </mat-icon>\n</button>\n"
    },
    {
      "name": "IconButtonComponentStory",
      "id": "component-IconButtonComponentStory-ead88ea741739a5719be97a10e0af2b59442a3af8ef78d0c13fd8e4e0679b5ab0c2611933595b4aa81afd00bc7627dc027b900b6ccb461d024157e3dc917fd7e",
      "file": "src/stories/icon-button/icon-button.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "storybook-icon-button",
      "styleUrls": [],
      "styles": [],
      "template": "<ks-storybook-wrapper>\n  <ks-icon-button\n    [disabled]=\"disabled\"\n    [icon]=\"icon\"\n    [size]=\"size\"\n    [color]=\"color\"\n  ></ks-icon-button>\n</ks-storybook-wrapper>\n",
      "templateUrl": [],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "name": "color",
          "defaultValue": "'#000'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 24,
          "type": "string",
          "decorators": []
        },
        {
          "name": "disabled",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 21,
          "type": "boolean",
          "decorators": []
        },
        {
          "name": "icon",
          "defaultValue": "'home'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 22,
          "type": "string",
          "decorators": []
        },
        {
          "name": "size",
          "defaultValue": "50",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 23,
          "type": "number",
          "decorators": []
        }
      ],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [
        {
          "name": "onClick",
          "args": [
            {
              "name": "event",
              "type": "MouseEvent",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 26,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "event",
              "type": "MouseEvent",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "IconButtonComponent",
          "type": "component"
        },
        {
          "name": "WrapperComponent",
          "type": "component"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Component, Input } from '@angular/core';\nimport { WrapperComponent } from '../wrapper/wrapper.component';\nimport { IconButtonComponent } from '@ngx-ks/icon-button';\n\n@Component({\n  selector: 'storybook-icon-button',\n  imports: [IconButtonComponent, WrapperComponent],\n  template: `\n    <ks-storybook-wrapper>\n      <ks-icon-button\n        [disabled]=\"disabled\"\n        [icon]=\"icon\"\n        [size]=\"size\"\n        [color]=\"color\"\n      ></ks-icon-button>\n    </ks-storybook-wrapper>\n  `,\n  standalone: true\n})\nexport default class IconButtonComponentStory {\n  @Input() disabled = false;\n  @Input() icon = 'home';\n  @Input() size = 50;\n  @Input() color = '#000';\n\n  onClick(event: MouseEvent): void {\n    console.log('clicked', event);\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": []
    },
    {
      "name": "IndicatorsComponent",
      "id": "component-IndicatorsComponent-b6d9084d0fa4dd3f1db21eac73df5052b798802fd9db7c5acdf33fbd00140e7cc4e5cefe7b9383961b3e3535f81b0baf606a9769627359edcb066d808529fcbb",
      "file": "src/app/features/indicators/indicators.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "ks-indicators",
      "styleUrls": [],
      "styles": [],
      "templateUrl": [
        "./indicators.component.html"
      ],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "ProgressBarComponent",
          "type": "component"
        },
        {
          "name": "KsDividerComponent",
          "type": "component"
        },
        {
          "name": "PillComponent",
          "type": "component"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Component } from '@angular/core';\nimport { ProgressBarComponent } from '@ngx-ks/progress-bar';\nimport { KsDividerComponent } from '@ngx-ks/divider';\nimport { PillComponent } from '@ngx-ks/pill';\n\n@Component({\n  selector: 'ks-indicators',\n  standalone: true,\n  imports: [\n    ProgressBarComponent,\n    KsDividerComponent,\n    PillComponent\n  ],\n  templateUrl: './indicators.component.html',\n  styleUrl: './indicators.component.scss'\n})\nexport class IndicatorsComponent {}\n",
      "styleUrl": "./indicators.component.scss",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": [],
      "templateData": "<ks-progress-bar [progress]=\"10\"></ks-progress-bar>\n<ks-progress-bar [progress]=\"50\"></ks-progress-bar>\n<ks-progress-bar [progress]=\"100\"></ks-progress-bar>\n<ks-divider></ks-divider>\n<ks-pill>My Pill</ks-pill>\n"
    },
    {
      "name": "InputComponent",
      "id": "component-InputComponent-feb79982adc3f665052f86b8376690db646f49a51a449d71ec43f3c4de68179226e1eb151bb8ab189ee9dc4c8b6bc0cc2fca7f17b69048839c07ab4acc6d7f2e",
      "file": "src/stories/input/input.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "storybook-input",
      "styleUrls": [],
      "styles": [],
      "template": "<ks-storybook-wrapper>\n  <input\n    ks-input\n    style=\"width: 200px\"\n    placeholder=\"placeholder\"\n    [disabled]=\"disabled\"\n  />\n</ks-storybook-wrapper>\n",
      "templateUrl": [],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "name": "disabled",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 22,
          "type": "boolean",
          "decorators": []
        }
      ],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "CommonModule",
          "type": "module"
        },
        {
          "name": "KsInput"
        },
        {
          "name": "WrapperComponent",
          "type": "component"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component, Input } from '@angular/core';\nimport { WrapperComponent } from '../wrapper/wrapper.component';\nimport { KsInput } from '@ngx-ks/input';\n\n@Component({\n  selector: 'storybook-input',\n  imports: [CommonModule, KsInput, WrapperComponent],\n  template: `\n    <ks-storybook-wrapper>\n      <input\n        ks-input\n        style=\"width: 200px\"\n        placeholder=\"placeholder\"\n        [disabled]=\"disabled\"\n      />\n    </ks-storybook-wrapper>\n  `,\n  standalone: true\n})\nexport default class InputComponent {\n  @Input() disabled?: boolean;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": []
    },
    {
      "name": "InputComponent",
      "id": "component-InputComponent-b11935394b33d6aa18ddc902a0c84a0212a721a362f99f4eb3a830c70937e63ec4c85173d63c09cd536db5f89683abe7976065849ca979fffea497f57428de3b-1",
      "file": "src/stories/unit-input/unit-input.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "storybook-unit-input",
      "styleUrls": [],
      "styles": [],
      "template": "<ks-storybook-wrapper>\n  <ks-form-field>\n    <ks-unit-input></ks-unit-input>\n  </ks-form-field>\n</ks-storybook-wrapper>\n",
      "templateUrl": [],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "name": "disabled",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 25,
          "type": "boolean",
          "decorators": []
        }
      ],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "CommonModule",
          "type": "module"
        },
        {
          "name": "UnitInputComponent",
          "type": "component"
        },
        {
          "name": "WrapperComponent",
          "type": "component"
        },
        {
          "name": "FormFieldComponent",
          "type": "component"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component, Input } from '@angular/core';\nimport { WrapperComponent } from '../wrapper/wrapper.component';\nimport { UnitInputComponent } from '@ngx-ks/unit-input';\nimport { FormFieldComponent } from '@ngx-ks/form-field';\n\n@Component({\n  selector: 'storybook-unit-input',\n  imports: [\n    CommonModule,\n    UnitInputComponent,\n    WrapperComponent,\n    FormFieldComponent\n  ],\n  template: `\n    <ks-storybook-wrapper>\n      <ks-form-field>\n        <ks-unit-input></ks-unit-input>\n      </ks-form-field>\n    </ks-storybook-wrapper>\n  `,\n  standalone: true\n})\nexport default class InputComponent {\n  @Input() disabled?: boolean;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": [],
      "isDuplicate": true,
      "duplicateId": 1,
      "duplicateName": "InputComponent-1"
    },
    {
      "name": "InputsComponent",
      "id": "component-InputsComponent-d17f6bcfd518f39f747cafef648ce8f197f23df67fc02669efb844f5b04ac9c53a97efa434860c8ac207e8cf2988b8cf4dc8ade37ab87e3e9b47254ad231a99d",
      "file": "src/app/features/inputs/inputs.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "ks-inputs",
      "styleUrls": [],
      "styles": [],
      "template": "<ks-form-field>\n  <ks-label>Label Text</ks-label>\n  <input ks-input placeholder=\"input component\" />\n</ks-form-field>\n<ks-form-field>\n  <input\n    ks-input\n    placeholder=\"disabled input\"\n    [disabled]=\"true\"\n  />\n</ks-form-field>\n<ks-form-field>\n  <ks-label>RequiredInput</ks-label>\n  <input\n    ks-input\n    placeholder=\"required input\"\n    [formControl]=\"inputCntrl\"\n  />\n  <ks-error\n    *ngIf=\"\n      inputCntrl.hasError('required') &&\n      inputCntrl.touched\n    \"\n    >Required\n  </ks-error>\n</ks-form-field>\n<ks-divider></ks-divider>\n<ks-form-field>\n  <ks-unit-input></ks-unit-input>\n</ks-form-field>\n<ks-divider></ks-divider>\n<ks-radio-group>\n  <ks-radio-button value=\"option1\"\n    >Option 1\n  </ks-radio-button>\n  <ks-radio-button value=\"option2\"\n    >Option 2\n  </ks-radio-button>\n  <ks-radio-button value=\"option3\"\n    >Option 3\n  </ks-radio-button>\n</ks-radio-group>\n<ks-divider></ks-divider>\n<ks-form-field>\n  <textarea\n    ks-textarea\n    placeholder=\"simple text area\"\n  ></textarea>\n</ks-form-field>\n<ks-form-field>\n  <ks-label>Disabled</ks-label>\n  <textarea\n    ks-textarea\n    placeholder=\"disabled text area\"\n    [disabled]=\"true\"\n  ></textarea>\n</ks-form-field>\n<ks-form-field>\n  <ks-label>RequiredTextarea</ks-label>\n  <textarea\n    ks-textarea\n    placeholder=\"required textarea\"\n    [formControl]=\"textareaCntrl\"\n  ></textarea>\n</ks-form-field>\n<ks-divider></ks-divider>\n<ks-selector\n  [formControl]=\"selectorCntrl\"\n  [options]=\"[\n    { label: 'Option 1', value: 'option1' },\n    { label: 'Option 2', value: 'option2' },\n    { label: 'Option 3', value: 'option3' }\n  ]\"\n>\n</ks-selector>\n<br />\n<br />\n<ks-selector\n  [formControl]=\"disabledSelector\"\n  [options]=\"[\n    { label: 'Option 1', value: 'option1' },\n    { label: 'Option 2', value: 'option2' },\n    { label: 'Option 3', value: 'option3' }\n  ]\"\n>\n</ks-selector>\n<ks-divider></ks-divider>\n<ks-slide-toggle\n  [formControl]=\"slideToggle\"\n></ks-slide-toggle>\n<ks-divider></ks-divider>\n<ks-checkbox\n  label=\"checkbox\"\n  [formControl]=\"checkboxCntrl\"\n></ks-checkbox>\n<ks-checkbox\n  label=\"disabled\"\n  [formControl]=\"checkboxDisabledCntrl\"\n></ks-checkbox>\n<ks-divider></ks-divider>\n<ks-dropdown [options]=\"['42', '100']\"></ks-dropdown>\n<ks-divider></ks-divider>\n<ks-date-range-picker></ks-date-range-picker>\n",
      "templateUrl": [],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "checkboxCntrl",
          "defaultValue": "new FormControl(false)",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 167
        },
        {
          "name": "checkboxDisabledCntrl",
          "defaultValue": "new FormControl({\n    value: true,\n    disabled: true\n  })",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 168
        },
        {
          "name": "disabledSelector",
          "defaultValue": "new FormControl({\n    value: 'option1',\n    disabled: true\n  })",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 162
        },
        {
          "name": "inputCntrl",
          "defaultValue": "new FormControl(null, [Validators.required])",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 154
        },
        {
          "name": "selectorCntrl",
          "defaultValue": "new FormControl({\n    value: 'option1',\n    disabled: false\n  })",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 158
        },
        {
          "name": "slideToggle",
          "defaultValue": "new FormControl(true)",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 166
        },
        {
          "name": "textareaCntrl",
          "defaultValue": "new FormControl(null, [\n    Validators.required\n  ])",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 155
        }
      ],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "KsInput"
        },
        {
          "name": "KsTextArea"
        },
        {
          "name": "KsSelectorComponent",
          "type": "component"
        },
        {
          "name": "KsSelectorComponent",
          "type": "component"
        },
        {
          "name": "ReactiveFormsModule",
          "type": "module"
        },
        {
          "name": "KsSlideToggleComponent",
          "type": "component"
        },
        {
          "name": "KsDividerComponent",
          "type": "component"
        },
        {
          "name": "KsRadioGroupComponent",
          "type": "component"
        },
        {
          "name": "KsRadioButtonComponent",
          "type": "component"
        },
        {
          "name": "FormFieldComponent",
          "type": "component"
        },
        {
          "name": "KsLabel"
        },
        {
          "name": "ErrorDirective",
          "type": "directive"
        },
        {
          "name": "NgIf"
        },
        {
          "name": "CheckboxComponent",
          "type": "component"
        },
        {
          "name": "DropdownComponent",
          "type": "component"
        },
        {
          "name": "UnitInputComponent",
          "type": "component"
        },
        {
          "name": "DateRangePickerComponent",
          "type": "component"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Component } from '@angular/core';\nimport { KsInput } from '@ngx-ks/input';\nimport { KsTextArea } from '@ngx-ks/textarea';\nimport {\n  KsRadioButtonComponent,\n  KsRadioGroupComponent\n} from '@ngx-ks/radio-button';\nimport { KsSelectorComponent } from '@ngx-ks/selector';\nimport {\n  FormControl,\n  ReactiveFormsModule,\n  Validators\n} from '@angular/forms';\nimport { KsSlideToggleComponent } from '@ngx-ks/slide-toggle';\nimport { KsDividerComponent } from '@ngx-ks/divider';\nimport { FormFieldComponent } from '@ngx-ks/form-field';\nimport { KsLabel } from '@ngx-ks/label';\nimport { ErrorDirective } from '@ngx-ks/error';\nimport { NgIf } from '@angular/common';\nimport { CheckboxComponent } from '@ngx-ks/checkbox';\nimport { DropdownComponent } from '@ngx-ks/dropdown';\nimport { UnitInputComponent } from '@ngx-ks/unit-input';\nimport { DateRangePickerComponent } from '@ngx-ks/date-range-picker';\n\n@Component({\n  selector: 'ks-inputs',\n  standalone: true,\n  imports: [\n    KsInput,\n    KsTextArea,\n    KsSelectorComponent,\n    KsSelectorComponent,\n    ReactiveFormsModule,\n    KsSlideToggleComponent,\n    KsDividerComponent,\n    KsRadioGroupComponent,\n    KsRadioButtonComponent,\n    FormFieldComponent,\n    KsLabel,\n    ErrorDirective,\n    NgIf,\n    CheckboxComponent,\n    DropdownComponent,\n    UnitInputComponent,\n    DateRangePickerComponent\n  ],\n  template: `\n    <ks-form-field>\n      <ks-label>Label Text</ks-label>\n      <input ks-input placeholder=\"input component\" />\n    </ks-form-field>\n    <ks-form-field>\n      <input\n        ks-input\n        placeholder=\"disabled input\"\n        [disabled]=\"true\"\n      />\n    </ks-form-field>\n    <ks-form-field>\n      <ks-label>RequiredInput</ks-label>\n      <input\n        ks-input\n        placeholder=\"required input\"\n        [formControl]=\"inputCntrl\"\n      />\n      <ks-error\n        *ngIf=\"\n          inputCntrl.hasError('required') &&\n          inputCntrl.touched\n        \"\n        >Required\n      </ks-error>\n    </ks-form-field>\n    <ks-divider></ks-divider>\n    <ks-form-field>\n      <ks-unit-input></ks-unit-input>\n    </ks-form-field>\n    <ks-divider></ks-divider>\n    <ks-radio-group>\n      <ks-radio-button value=\"option1\"\n        >Option 1\n      </ks-radio-button>\n      <ks-radio-button value=\"option2\"\n        >Option 2\n      </ks-radio-button>\n      <ks-radio-button value=\"option3\"\n        >Option 3\n      </ks-radio-button>\n    </ks-radio-group>\n    <ks-divider></ks-divider>\n    <ks-form-field>\n      <textarea\n        ks-textarea\n        placeholder=\"simple text area\"\n      ></textarea>\n    </ks-form-field>\n    <ks-form-field>\n      <ks-label>Disabled</ks-label>\n      <textarea\n        ks-textarea\n        placeholder=\"disabled text area\"\n        [disabled]=\"true\"\n      ></textarea>\n    </ks-form-field>\n    <ks-form-field>\n      <ks-label>RequiredTextarea</ks-label>\n      <textarea\n        ks-textarea\n        placeholder=\"required textarea\"\n        [formControl]=\"textareaCntrl\"\n      ></textarea>\n    </ks-form-field>\n    <ks-divider></ks-divider>\n    <ks-selector\n      [formControl]=\"selectorCntrl\"\n      [options]=\"[\n        { label: 'Option 1', value: 'option1' },\n        { label: 'Option 2', value: 'option2' },\n        { label: 'Option 3', value: 'option3' }\n      ]\"\n    >\n    </ks-selector>\n    <br />\n    <br />\n    <ks-selector\n      [formControl]=\"disabledSelector\"\n      [options]=\"[\n        { label: 'Option 1', value: 'option1' },\n        { label: 'Option 2', value: 'option2' },\n        { label: 'Option 3', value: 'option3' }\n      ]\"\n    >\n    </ks-selector>\n    <ks-divider></ks-divider>\n    <ks-slide-toggle\n      [formControl]=\"slideToggle\"\n    ></ks-slide-toggle>\n    <ks-divider></ks-divider>\n    <ks-checkbox\n      label=\"checkbox\"\n      [formControl]=\"checkboxCntrl\"\n    ></ks-checkbox>\n    <ks-checkbox\n      label=\"disabled\"\n      [formControl]=\"checkboxDisabledCntrl\"\n    ></ks-checkbox>\n    <ks-divider></ks-divider>\n    <ks-dropdown [options]=\"['42', '100']\"></ks-dropdown>\n    <ks-divider></ks-divider>\n    <ks-date-range-picker></ks-date-range-picker>\n  `\n})\nexport class InputsComponent {\n  inputCntrl = new FormControl(null, [Validators.required]);\n  textareaCntrl = new FormControl(null, [\n    Validators.required\n  ]);\n  selectorCntrl = new FormControl({\n    value: 'option1',\n    disabled: false\n  });\n  disabledSelector = new FormControl({\n    value: 'option1',\n    disabled: true\n  });\n  slideToggle = new FormControl(true);\n  checkboxCntrl = new FormControl(false);\n  checkboxDisabledCntrl = new FormControl({\n    value: true,\n    disabled: true\n  });\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": []
    },
    {
      "name": "KsButton",
      "id": "component-KsButton-8c5b1973d9b525bce8b807ebe8a6c53dc4f96c1646feabe0173cb0496f8a97a126d6478482cce6b86068eed4977b3904b4f7577d2098ede1b815491c76d54d89",
      "file": "src/components/button/button.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": [
        "ViewEncapsulation.None"
      ],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "button[ks-button]",
      "styleUrls": [
        "./button.scss"
      ],
      "styles": [],
      "template": "<ng-content></ng-content>",
      "templateUrl": [],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "CommonModule",
          "type": "module"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  ViewEncapsulation\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'button[ks-button]',\n  standalone: true,\n  imports: [CommonModule],\n  template: '<ng-content></ng-content>',\n  styleUrls: ['./button.scss'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class KsButton {\n  constructor(private el: ElementRef) {\n    const element = el.nativeElement;\n    const classList = (element as HTMLElement).classList;\n    classList.add('ks-button');\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": "@use '../../core/styles/palette';\n\n.ks-button {\n  padding: 15px 30px;\n  border: none;\n  border-radius: 10px;\n  background-color: palette.$background-color;\n  box-shadow: 5px 5px 10px palette.$outer-box-shadow,\n  -5px -5px 10px palette.$inner-box-shadow;\n  transition: box-shadow 0.3s ease-in-out;\n  color: palette.$label-color;\n\n  &:hover {\n    box-shadow: 7px 7px 15px palette.$outer-box-shadow,\n    -7px -7px 15px palette.$inner-box-shadow;\n  }\n\n  &:active {\n    box-shadow: inset 5px 5px 10px palette.$outer-box-shadow,\n    inset -5px -5px 10px palette.$inner-box-shadow;\n  }\n\n  &:disabled {\n    color: palette.$disabled-color;\n    opacity: 0.5;\n    cursor: no-drop;\n    box-shadow: 1px 1px 2px palette.$outer-box-shadow,\n    inset -1px -1px 2px palette.$inner-box-shadow;\n  }\n}\n",
          "styleUrl": "./button.scss"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "el",
            "type": "ElementRef",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 18,
        "jsdoctags": [
          {
            "name": "el",
            "type": "ElementRef",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "extends": []
    },
    {
      "name": "KsCardComponent",
      "id": "component-KsCardComponent-ad9398403d8b237de4ff67fb69f0e7cf2b515c08fd0ebba7eaeb96b58081f83ea5bbb1018978e0688a34839c0f4910960b244a401908a90ad6aa382644a7dd2e",
      "file": "src/components/card/card.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": [
        "ViewEncapsulation.None"
      ],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "ks-card",
      "styleUrls": [],
      "styles": [],
      "templateUrl": [
        "./card.component.html"
      ],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "cardBodyList",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "QueryList<KsCardBodyDirective>",
          "optional": true,
          "description": "",
          "line": 32,
          "decorators": [
            {
              "name": "ContentChildren",
              "stringifiedArguments": "KsCardBodyDirective"
            }
          ],
          "modifierKind": [
            170
          ]
        },
        {
          "name": "cardFooterList",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "QueryList<KsCardFooterDirective>",
          "optional": true,
          "description": "",
          "line": 34,
          "decorators": [
            {
              "name": "ContentChildren",
              "stringifiedArguments": "KsCardFooterDirective"
            }
          ],
          "modifierKind": [
            170
          ]
        },
        {
          "name": "cardHeaderList",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "QueryList<KsCardHeaderDirective>",
          "optional": true,
          "description": "",
          "line": 30,
          "decorators": [
            {
              "name": "ContentChildren",
              "stringifiedArguments": "KsCardHeaderDirective"
            }
          ],
          "modifierKind": [
            170
          ]
        }
      ],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "KsCardBodyDirective",
          "type": "directive"
        },
        {
          "name": "KsCardHeaderDirective",
          "type": "directive"
        },
        {
          "name": "KsCardFooterDirective",
          "type": "directive"
        },
        {
          "name": "NgIf"
        },
        {
          "name": "JsonPipe",
          "type": "pipe"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {\n  ChangeDetectionStrategy,\n  Component,\n  ContentChildren,\n  QueryList,\n  ViewEncapsulation\n} from '@angular/core';\nimport { KsCardBodyDirective } from './card-body.directive';\nimport { KsCardHeaderDirective } from './card-header.directive';\nimport { KsCardFooterDirective } from './card-footer.directive';\nimport { JsonPipe, NgIf } from '@angular/common';\n\n@Component({\n  selector: 'ks-card',\n  standalone: true,\n  imports: [\n    KsCardBodyDirective,\n    KsCardHeaderDirective,\n    KsCardFooterDirective,\n    NgIf,\n    JsonPipe\n  ],\n  templateUrl: './card.component.html',\n  styleUrl: './card.component.scss',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class KsCardComponent {\n  @ContentChildren(KsCardHeaderDirective)\n  cardHeaderList?: QueryList<KsCardHeaderDirective>;\n  @ContentChildren(KsCardBodyDirective)\n  cardBodyList?: QueryList<KsCardBodyDirective>;\n  @ContentChildren(KsCardFooterDirective)\n  cardFooterList?: QueryList<KsCardFooterDirective>;\n}\n",
      "styleUrl": "./card.component.scss",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": [],
      "templateData": "<div class=\"ks-card\">\n  <ng-container *ngIf=\"cardHeaderList?.length\">\n    <div class=\"ks-card-header\">\n      <ng-content select=\"[ksCardHeader]\"></ng-content>\n    </div>\n  </ng-container>\n\n  <ng-container *ngIf=\"cardBodyList?.length\">\n    <div class=\"ks-card-body\">\n      <ng-content select=\"[ksCardBody]\"></ng-content>\n    </div>\n  </ng-container>\n\n  <ng-container *ngIf=\"cardFooterList?.length\">\n    <div class=\"ks-card-footer\">\n      <ng-content select=\"[ksCardFooter]\"></ng-content>\n    </div>\n  </ng-container>\n</div>\n"
    },
    {
      "name": "KsDividerComponent",
      "id": "component-KsDividerComponent-fbdf7279f3c7da969ee6d960a28b1202a6f6ae5254fafaaf97be28ded8e89beed338d60b8246c77e64d6fd8aae12a77b2ee6b3aeaa2c1759a7fdeff64090ca82",
      "file": "src/components/divider/divider.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "ks-divider",
      "styleUrls": [
        "./divider.component.scss"
      ],
      "styles": [],
      "template": "<div class=\"ks-divider\"></div>",
      "templateUrl": [],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "CommonModule",
          "type": "module"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'ks-divider',\n  standalone: true,\n  imports: [CommonModule],\n  template: ` <div class=\"ks-divider\"></div>`,\n  styleUrls: ['./divider.component.scss']\n})\nexport class KsDividerComponent {}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": "@use '../../core/styles/palette';\n\n.ks-divider {\n  height: 2px;\n  box-shadow: inset 1px 1px 1px palette.$outer-box-shadow, inset -1px -1px 1px palette.$inner-box-shadow;\n  border-top-width: 0;\n  margin: 20px 0;\n  border-radius: 2px;\n  background-color: inherit;\n}\n",
          "styleUrl": "./divider.component.scss"
        }
      ],
      "stylesData": "",
      "extends": []
    },
    {
      "name": "KsInput",
      "id": "component-KsInput-abb077df07fdb77d1ce0df71c4a6d0e45bd2bbc2e0a7ddb211b66447f3c4159cb369717018184bdf9f678d25514d7ce2a9c5d93bd5de703799d781197703c21d",
      "file": "src/components/input/input.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": [
        "ViewEncapsulation.None"
      ],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [
        {
          "name": "{ provide: KsFormFieldControl, useExisting: KsInput }"
        }
      ],
      "selector": "input[ks-input]",
      "styleUrls": [
        "./input.scss"
      ],
      "styles": [],
      "template": "<ng-content></ng-content>",
      "templateUrl": [],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "name": "disabled",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 56,
          "type": "boolean",
          "decorators": []
        },
        {
          "name": "required",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 39,
          "type": "boolean",
          "decorators": []
        }
      ],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "_disabled",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "boolean | undefined",
          "optional": false,
          "description": "",
          "line": 53,
          "modifierKind": [
            124
          ]
        },
        {
          "name": "_required",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "boolean | undefined",
          "optional": false,
          "description": "",
          "line": 36,
          "modifierKind": [
            124
          ]
        },
        {
          "name": "ngControl",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "NgControl",
          "optional": false,
          "description": "",
          "line": 29,
          "decorators": [
            {
              "name": "Optional",
              "stringifiedArguments": ""
            },
            {
              "name": "Self",
              "stringifiedArguments": ""
            }
          ],
          "modifierKind": [
            170,
            170,
            125
          ]
        }
      ],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "CommonModule",
          "type": "module"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  Input,\n  Optional,\n  Self,\n  ViewEncapsulation\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { KsFormFieldControl } from '@ngx-ks/form-field-control';\nimport { NgControl, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'input[ks-input]',\n  standalone: true,\n  imports: [CommonModule],\n  template: '<ng-content></ng-content>',\n  styleUrls: [`./input.scss`],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    { provide: KsFormFieldControl, useExisting: KsInput }\n  ]\n})\nexport class KsInput implements KsFormFieldControl {\n  constructor(\n    private el: ElementRef,\n    @Optional() @Self() public ngControl: NgControl\n  ) {\n    const element = el.nativeElement;\n    const classList = (element as HTMLElement).classList;\n    classList.add('ks-input');\n  }\n\n  protected _required: boolean | undefined;\n\n  @Input()\n  get required(): boolean {\n    return (\n      this._required ??\n      this.ngControl?.control?.hasValidator(\n        Validators.required\n      ) ??\n      false\n    );\n  }\n\n  set required(value: boolean) {\n    this._required = value;\n  }\n\n  protected _disabled: boolean | undefined;\n\n  @Input()\n  get disabled(): boolean {\n    return (\n      this._disabled ?? this.ngControl.disabled ?? false\n    );\n  }\n\n  set disabled(value: boolean) {\n    this._disabled = value;\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": "@use '../../core/styles/palette';\n\n.ks-input {\n  width: 100%;\n  padding: 10px;\n  border: none;\n  border-radius: 8px;\n  background-color: palette.$background-color !important;\n  box-shadow: inset 2px 2px 3px palette.$outer-box-shadow,\n  inset -1px -1px 2px palette.$inner-box-shadow;\n  transition: box-shadow 0.3s ease-in-out;\n  font-size: 16px;\n  outline: none;\n\n  &:hover {\n    box-shadow: inset 5px 5px 10px palette.$outer-box-shadow,\n    inset -5px -5px 10px palette.$inner-box-shadow;\n  }\n\n  &:focus {\n    box-shadow: inset 5px 5px 10px palette.$outer-box-shadow,\n    inset -5px -5px 10px palette.$inner-box-shadow;\n  }\n\n  &:disabled {\n    opacity: 0.5;\n    color: palette.$disabled-color;\n    background: linear-gradient(0deg, palette.$disabled-color, palette.$disabled-color), inherit;\n    box-shadow: inset 1px 1px 2px palette.$disabled-color,\n    inset -1px -1px 2px palette.$inner-box-shadow;\n    cursor: no-drop;\n  }\n\n  &.ng-touched.ng-invalid {\n    border: 1px solid palette.$invalid;\n  }\n}\n",
          "styleUrl": "./input.scss"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "el",
            "type": "ElementRef",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "ngControl",
            "type": "NgControl",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 26,
        "jsdoctags": [
          {
            "name": "el",
            "type": "ElementRef",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "ngControl",
            "type": "NgControl",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "extends": [],
      "implements": [
        "KsFormFieldControl"
      ],
      "accessors": {
        "required": {
          "name": "required",
          "setSignature": {
            "name": "required",
            "type": "void",
            "deprecated": false,
            "deprecationMessage": "",
            "args": [
              {
                "name": "value",
                "type": "boolean",
                "deprecated": false,
                "deprecationMessage": ""
              }
            ],
            "returnType": "void",
            "line": 49,
            "jsdoctags": [
              {
                "name": "value",
                "type": "boolean",
                "deprecated": false,
                "deprecationMessage": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          },
          "getSignature": {
            "name": "required",
            "type": "boolean",
            "returnType": "boolean",
            "line": 39
          }
        },
        "disabled": {
          "name": "disabled",
          "setSignature": {
            "name": "disabled",
            "type": "void",
            "deprecated": false,
            "deprecationMessage": "",
            "args": [
              {
                "name": "value",
                "type": "boolean",
                "deprecated": false,
                "deprecationMessage": ""
              }
            ],
            "returnType": "void",
            "line": 62,
            "jsdoctags": [
              {
                "name": "value",
                "type": "boolean",
                "deprecated": false,
                "deprecationMessage": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          },
          "getSignature": {
            "name": "disabled",
            "type": "boolean",
            "returnType": "boolean",
            "line": 56
          }
        }
      }
    },
    {
      "name": "KsRadioButtonComponent",
      "id": "component-KsRadioButtonComponent-5641913476874e14fb1c5f2b221c46eb9591c2a7c8c07f90dad01d05a1dcd9aa551288259c1ebefb855cd13566c4dc81ebf9ee863f98c351ac268427f656fdf7",
      "file": "src/components/radio-button/radio-button/radio-button.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": [
        "ViewEncapsulation.None"
      ],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [
        {
          "name": "{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => KsRadioButtonComponent), multi: true\n}",
          "type": "component"
        }
      ],
      "selector": "ks-radio-button",
      "styleUrls": [],
      "styles": [],
      "template": "<label class=\"ks-radio-label\">\n  <input\n    type=\"radio\"\n    [value]=\"value\"\n    [checked]=\"checked\"\n    (change)=\"choseValue()\"\n    [name]=\"name\"\n  />\n  <span><ng-content></ng-content></span>\n</label>\n",
      "templateUrl": [],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "name": "name",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 42,
          "type": "any",
          "decorators": []
        },
        {
          "name": "value",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 41,
          "type": "any",
          "decorators": []
        }
      ],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "checked",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 43
        },
        {
          "name": "onChange",
          "defaultValue": "() => {...}",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 68,
          "modifierKind": [
            123
          ]
        }
      ],
      "methodsClass": [
        {
          "name": "choseValue",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 63,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "registerOnChange",
          "args": [
            {
              "name": "fn",
              "type": "any",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 51,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "fn",
              "type": "any",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "registerOnTouched",
          "args": [
            {
              "name": "fn",
              "type": "any",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 55,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "fn",
              "type": "any",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "setDisabledState",
          "args": [
            {
              "name": "isDisabled",
              "type": "boolean",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": true,
          "returnType": "void",
          "typeParameters": [],
          "line": 59,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "isDisabled",
              "type": "boolean",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "writeValue",
          "args": [
            {
              "name": "value",
              "type": "any",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 47,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "value",
              "type": "any",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {\n  ChangeDetectionStrategy,\n  Component,\n  forwardRef,\n  Input,\n  ViewEncapsulation\n} from '@angular/core';\nimport {\n  ControlValueAccessor,\n  NG_VALUE_ACCESSOR\n} from '@angular/forms';\n\n@Component({\n  selector: 'ks-radio-button',\n  template: `\n    <label class=\"ks-radio-label\">\n      <input\n        type=\"radio\"\n        [value]=\"value\"\n        [checked]=\"checked\"\n        (change)=\"choseValue()\"\n        [name]=\"name\"\n      />\n      <span><ng-content></ng-content></span>\n    </label>\n  `,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => KsRadioButtonComponent),\n      multi: true\n    }\n  ],\n  standalone: true,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class KsRadioButtonComponent\n  implements ControlValueAccessor\n{\n  @Input() value: any;\n  @Input() name: any;\n  checked: boolean = false;\n\n  constructor() {}\n\n  writeValue(value: any): void {\n    this.checked = this.value === value;\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    // Implement if needed\n  }\n\n  setDisabledState?(isDisabled: boolean): void {\n    // Implement if needed\n  }\n\n  choseValue(): void {\n    this.checked = true;\n    this.onChange(true);\n  }\n\n  private onChange: any = () => {};\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [],
        "line": 43
      },
      "extends": [],
      "implements": [
        "ControlValueAccessor"
      ]
    },
    {
      "name": "KsRadioGroupComponent",
      "id": "component-KsRadioGroupComponent-26939fdef1db3ef18f8cb93a206a47feff99f57b6b1384c26072d4c28cc4dd1a7e00c0766fb6aa6ff962e51139fe798dee015c6101fbed1f22111cb98172bcd8",
      "file": "src/components/radio-button/radio-group/radio-group.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": [
        "ViewEncapsulation.None"
      ],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [
        {
          "name": "{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => KsRadioGroupComponent), multi: true\n}",
          "type": "component"
        }
      ],
      "selector": "ks-radio-group",
      "styleUrls": [
        "./radio-group.component.scss"
      ],
      "styles": [],
      "templateUrl": [
        "./radio-group.component.html"
      ],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "onChange",
          "defaultValue": "() => {...}",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 73,
          "modifierKind": [
            123
          ]
        },
        {
          "name": "onTouched",
          "defaultValue": "() => {...}",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 75,
          "modifierKind": [
            123
          ]
        },
        {
          "name": "radioButtons",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "QueryList<KsRadioButtonComponent>",
          "optional": false,
          "description": "",
          "line": 35,
          "decorators": [
            {
              "name": "ContentChildren",
              "stringifiedArguments": "KsRadioButtonComponent"
            }
          ],
          "modifierKind": [
            170
          ]
        }
      ],
      "methodsClass": [
        {
          "name": "ngAfterContentInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 39,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "onRadioButtonChange",
          "args": [
            {
              "name": "value",
              "type": "any",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 67,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "value",
              "type": "any",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "registerOnChange",
          "args": [
            {
              "name": "fn",
              "type": "any",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 55,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "fn",
              "type": "any",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "registerOnTouched",
          "args": [
            {
              "name": "fn",
              "type": "any",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 59,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "fn",
              "type": "any",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "setDisabledState",
          "args": [
            {
              "name": "isDisabled",
              "type": "boolean",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": true,
          "returnType": "void",
          "typeParameters": [],
          "line": 63,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "isDisabled",
              "type": "boolean",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "writeValue",
          "args": [
            {
              "name": "value",
              "type": "any",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 49,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "value",
              "type": "any",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  Component,\n  ContentChildren,\n  forwardRef,\n  QueryList,\n  ViewEncapsulation\n} from '@angular/core';\nimport {\n  ControlValueAccessor,\n  NG_VALUE_ACCESSOR\n} from '@angular/forms';\nimport { KsRadioButtonComponent } from '../radio-button/radio-button.component';\n\n@Component({\n  selector: 'ks-radio-group',\n  templateUrl: './radio-group.component.html',\n  styleUrls: ['./radio-group.component.scss'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => KsRadioGroupComponent),\n      multi: true\n    }\n  ],\n  standalone: true,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class KsRadioGroupComponent\n  implements ControlValueAccessor, AfterContentInit\n{\n  @ContentChildren(KsRadioButtonComponent)\n  radioButtons!: QueryList<KsRadioButtonComponent>;\n\n  constructor() {}\n\n  ngAfterContentInit(): void {\n    this.radioButtons.forEach((button) => {\n      button.registerOnChange(\n        this.onRadioButtonChange.bind(this)\n      );\n      button.name = 'name';\n    });\n  }\n\n  // ControlValueAccessor methods\n  writeValue(value: any): void {\n    this.radioButtons.forEach((button) => {\n      button.writeValue(value);\n    });\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.onTouched = fn;\n  }\n\n  setDisabledState?(isDisabled: boolean): void {\n    // Implement if needed\n  }\n\n  onRadioButtonChange(value: any): void {\n    this.onChange(value);\n    this.onTouched();\n  }\n\n  // Functions to propagate changes and touch events\n  private onChange: any = () => {};\n\n  private onTouched: any = () => {};\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": "@use '../../../core/styles/palette';\n\n.ks-radio-group {\n  display: flex;\n  flex-direction: column;\n\n  .ks-radio-label {\n    margin-bottom: 10px;\n\n    input[type='radio'] {\n      opacity: 0;\n      width: 0;\n      height: 0;\n\n      &:checked + span {\n        background-color: #2196f3; /* Change color for checked state */\n      }\n\n      &:focus + span {\n        box-shadow: 0 0 0 3px rgba(33, 150, 243, 0.2); /* Example focus style */\n      }\n    }\n\n    span {\n      display: inline-block;\n      padding: 10px;\n      border-radius: 50%;\n      background-color: palette.$background-color;\n      box-shadow: 5px 5px 15px #bebebe,\n      -5px -5px 15px #ffffff;\n      transition: background-color 0.3s ease-in-out;\n      cursor: pointer;\n    }\n  }\n}\n",
          "styleUrl": "./radio-group.component.scss"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [],
        "line": 35
      },
      "extends": [],
      "implements": [
        "ControlValueAccessor",
        "AfterContentInit"
      ],
      "templateData": "<div class=\"ks-radio-group\">\n  <ng-content></ng-content>\n</div>\n"
    },
    {
      "name": "KsSelectorComponent",
      "id": "component-KsSelectorComponent-5f34660f87a8f5f743139443ac4c2f6450cbb88411a72a7d9c39b770465ebfe6ecbc550a55986f2aed80afd3243845f19af8b924ff5f37bef4329135e0edcea4",
      "file": "src/components/selector/selector.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [
        {
          "name": "{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => KsSelectorComponent), multi: true\n}",
          "type": "component"
        }
      ],
      "selector": "ks-selector",
      "styleUrls": [
        "./selector.component.scss"
      ],
      "styles": [],
      "template": "<div class=\"ks-selector-wrapper\">\n  <select\n    (change)=\"optionsSelected()\"\n    [(ngModel)]=\"selectedValue\"\n    [disabled]=\"disabled\"\n    class=\"ks-selector\"\n  >\n    <option\n      *ngFor=\"let option of options\"\n      [value]=\"option.value\"\n    >\n      {{ option.label }}\n    </option>\n  </select>\n</div>\n",
      "templateUrl": [],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "name": "options",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 49,
          "type": "SelectorOptions",
          "decorators": []
        }
      ],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "disabled",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 51
        },
        {
          "name": "onChange",
          "defaultValue": "() => {...}",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 75,
          "modifierKind": [
            123
          ]
        },
        {
          "name": "onTouched",
          "defaultValue": "() => {...}",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 77,
          "modifierKind": [
            123
          ]
        },
        {
          "name": "selectedValue",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 47
        }
      ],
      "methodsClass": [
        {
          "name": "optionsSelected",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 71,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "registerOnChange",
          "args": [
            {
              "name": "fn",
              "type": "any",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 59,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "fn",
              "type": "any",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "registerOnTouched",
          "args": [
            {
              "name": "fn",
              "type": "any",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 63,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "fn",
              "type": "any",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "setDisabledState",
          "args": [
            {
              "name": "isDisabled",
              "type": "boolean",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": true,
          "returnType": "void",
          "typeParameters": [],
          "line": 67,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "isDisabled",
              "type": "boolean",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "writeValue",
          "args": [
            {
              "name": "value",
              "type": "any",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 55,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "value",
              "type": "any",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "FormsModule",
          "type": "module"
        },
        {
          "name": "NgFor"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {\n  Component,\n  forwardRef,\n  Input\n} from '@angular/core';\nimport {\n  ControlValueAccessor,\n  FormsModule,\n  NG_VALUE_ACCESSOR\n} from '@angular/forms';\nimport { SelectorOption, SelectorOptions } from './type';\nimport { NgFor } from '@angular/common';\n\n@Component({\n  selector: 'ks-selector',\n  standalone: true,\n  imports: [FormsModule, NgFor],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => KsSelectorComponent),\n      multi: true\n    }\n  ],\n  template: `\n    <div class=\"ks-selector-wrapper\">\n      <select\n        (change)=\"optionsSelected()\"\n        [(ngModel)]=\"selectedValue\"\n        [disabled]=\"disabled\"\n        class=\"ks-selector\"\n      >\n        <option\n          *ngFor=\"let option of options\"\n          [value]=\"option.value\"\n        >\n          {{ option.label }}\n        </option>\n      </select>\n    </div>\n  `,\n  styleUrls: [`./selector.component.scss`]\n})\nexport class KsSelectorComponent\n  implements ControlValueAccessor\n{\n  selectedValue: SelectorOption['value'];\n\n  @Input() options!: SelectorOptions;\n\n  disabled = false;\n\n  constructor() {}\n\n  writeValue(value: any): void {\n    this.selectedValue = value;\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.onTouched = fn;\n  }\n\n  setDisabledState?(isDisabled: boolean): void {\n    this.disabled = isDisabled ?? false;\n  }\n\n  optionsSelected(): void {\n    this.onChange(this.selectedValue);\n  }\n\n  private onChange: any = () => {};\n\n  private onTouched: any = () => {};\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": "@use '../../core/styles/palette';\n\n.ks-selector-wrapper {\n  display: inline-block;\n}\n\n.ks-selector {\n  padding: 10px;\n  border: none;\n  border-radius: 8px;\n  background-color: palette.$background-color;\n  box-shadow: inset 2px 2px 3px palette.$outer-box-shadow,\n  inset -1px -1px 2px palette.$inner-box-shadow;\n  transition: box-shadow 0.3s ease-in-out;\n  font-size: 16px;\n  outline: none;\n  cursor: pointer;\n\n  &:hover {\n    box-shadow: inset 5px 5px 10px palette.$outer-box-shadow,\n    inset -5px -5px 10px palette.$inner-box-shadow;\n  }\n\n  &:focus {\n    box-shadow: inset 5px 5px 10px palette.$outer-box-shadow,\n    inset -5px -5px 10px palette.$inner-box-shadow;\n  }\n\n  &:disabled {\n    opacity: 0.5;\n    color: palette.$disabled-color;\n    background: linear-gradient(0deg, palette.$disabled-color, palette.$disabled-color), inherit;\n    box-shadow: inset 1px 1px 2px palette.$disabled-color,\n    inset -1px -1px 2px palette.$inner-box-shadow;\n    cursor: no-drop;\n  }\n}\n",
          "styleUrl": "./selector.component.scss"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [],
        "line": 51
      },
      "extends": [],
      "implements": [
        "ControlValueAccessor"
      ]
    },
    {
      "name": "KsSlideToggleComponent",
      "id": "component-KsSlideToggleComponent-5a19648afb084fb3239a1ca9101d87f30decd57ae36f02bc5dafd1414d9883eeb4957d672c4447efdd3302c9137d2e8e4d673d27256e990b85a12fe6ac937915",
      "file": "src/components/slide-toggle/slide-toggle.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [
        {
          "name": "{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => KsSlideToggleComponent), multi: true\n}",
          "type": "component"
        }
      ],
      "selector": "ks-slide-toggle",
      "styleUrls": [],
      "styles": [],
      "templateUrl": [
        "./slide-toggle.component.html"
      ],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "isChecked",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 25
        },
        {
          "name": "onChange",
          "defaultValue": "() => {...}",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 52,
          "modifierKind": [
            123
          ]
        },
        {
          "name": "onTouched",
          "defaultValue": "() => {...}",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 54,
          "modifierKind": [
            123
          ]
        }
      ],
      "methodsClass": [
        {
          "name": "registerOnChange",
          "args": [
            {
              "name": "fn",
              "type": "never",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 33,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "fn",
              "type": "never",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "registerOnTouched",
          "args": [
            {
              "name": "fn",
              "type": "any",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 37,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "fn",
              "type": "any",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "setDisabledState",
          "args": [
            {
              "name": "isDisabled",
              "type": "boolean",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": true,
          "returnType": "void",
          "typeParameters": [],
          "line": 41,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "isDisabled",
              "type": "boolean",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "toggleChange",
          "args": [
            {
              "name": "event",
              "type": "any",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 45,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "event",
              "type": "any",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "writeValue",
          "args": [
            {
              "name": "value",
              "type": "boolean",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 29,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "value",
              "type": "boolean",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "FormsModule",
          "type": "module"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Component, forwardRef } from '@angular/core';\nimport {\n  ControlValueAccessor,\n  FormsModule,\n  NG_VALUE_ACCESSOR\n} from '@angular/forms';\n\n@Component({\n  selector: 'ks-slide-toggle',\n  standalone: true,\n  imports: [FormsModule],\n  templateUrl: './slide-toggle.component.html',\n  styleUrl: './slide-toggle.component.scss',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => KsSlideToggleComponent),\n      multi: true\n    }\n  ]\n})\nexport class KsSlideToggleComponent\n  implements ControlValueAccessor\n{\n  isChecked: boolean = false;\n\n  constructor() {}\n\n  writeValue(value: boolean): void {\n    this.isChecked = value;\n  }\n\n  registerOnChange(fn: never): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.onTouched = fn;\n  }\n\n  setDisabledState?(isDisabled: boolean): void {\n    // Implement if needed\n  }\n\n  toggleChange(event: any): void {\n    const isChecked = event?.target?.checked;\n    this.isChecked = isChecked;\n    this.onChange(isChecked);\n    this.onTouched();\n  }\n\n  private onChange: any = () => {};\n\n  private onTouched: any = () => {};\n}\n",
      "styleUrl": "./slide-toggle.component.scss",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [],
        "line": 25
      },
      "extends": [],
      "implements": [
        "ControlValueAccessor"
      ],
      "templateData": "<label class=\"ks-slide-toggle\">\n  <input (change)=\"toggleChange($event)\" [(ngModel)]=\"isChecked\" type=\"checkbox\" />\n  <span class=\"slider round\"></span>\n</label>\n"
    },
    {
      "name": "KsTextArea",
      "id": "component-KsTextArea-65720cbc23846693ffb79d851cffb86f2c442044f8026dfc67b01c0ac8572cf7defe799da269783e910a13a0ccbdb5215b03a28d9db02294d609146edd73ea7f",
      "file": "src/components/textarea/textarea.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": [
        "ViewEncapsulation.None"
      ],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [
        {
          "name": "{ provide: KsFormFieldControl, useExisting: KsTextArea }"
        }
      ],
      "selector": "textarea[ks-textarea]",
      "styleUrls": [
        "./textarea.component.scss"
      ],
      "styles": [],
      "template": "<ng-content></ng-content>",
      "templateUrl": [],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "name": "disabled",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 56,
          "type": "boolean",
          "decorators": []
        },
        {
          "name": "required",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 39,
          "type": "boolean",
          "decorators": []
        }
      ],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "_disabled",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "boolean | undefined",
          "optional": false,
          "description": "",
          "line": 53,
          "modifierKind": [
            124
          ]
        },
        {
          "name": "_required",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "boolean | undefined",
          "optional": false,
          "description": "",
          "line": 36,
          "modifierKind": [
            124
          ]
        },
        {
          "name": "ngControl",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "NgControl",
          "optional": false,
          "description": "",
          "line": 29,
          "decorators": [
            {
              "name": "Optional",
              "stringifiedArguments": ""
            },
            {
              "name": "Self",
              "stringifiedArguments": ""
            }
          ],
          "modifierKind": [
            170,
            170,
            125
          ]
        }
      ],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "CommonModule",
          "type": "module"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  Input,\n  Optional,\n  Self,\n  ViewEncapsulation\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { KsFormFieldControl } from '@ngx-ks/form-field-control';\nimport { NgControl, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'textarea[ks-textarea]',\n  standalone: true,\n  imports: [CommonModule],\n  template: '<ng-content></ng-content>',\n  styleUrls: ['./textarea.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    { provide: KsFormFieldControl, useExisting: KsTextArea }\n  ]\n})\nexport class KsTextArea implements KsFormFieldControl {\n  constructor(\n    private el: ElementRef,\n    @Optional() @Self() public ngControl: NgControl\n  ) {\n    const element = el.nativeElement;\n    const classList = (element as HTMLElement).classList;\n    classList.add('ks-textarea');\n  }\n\n  protected _required: boolean | undefined;\n\n  @Input()\n  get required(): boolean {\n    return (\n      this._required ??\n      this.ngControl?.control?.hasValidator(\n        Validators.required\n      ) ??\n      false\n    );\n  }\n\n  set required(value: boolean) {\n    this._required = value;\n  }\n\n  protected _disabled: boolean | undefined;\n\n  @Input()\n  get disabled(): boolean {\n    return (\n      this._disabled ?? this.ngControl.disabled ?? false\n    );\n  }\n\n  set disabled(value: boolean) {\n    this._disabled = value;\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": "@use '../../core/styles/palette';\n\n.ks-textarea {\n  width: 300px;\n  height: 150px;\n  padding: 10px;\n  border: none;\n  border-radius: 8px;\n  background-color: palette.$background-color;\n  box-shadow: inset 2px 2px 3px palette.$outer-box-shadow,\n  inset -1px -1px 2px palette.$inner-box-shadow;\n  transition: box-shadow 0.3s ease-in-out;\n  font-size: 16px;\n  outline: none;\n  resize: none;\n\n  &:hover {\n    box-shadow: inset 5px 5px 10px palette.$outer-box-shadow,\n    inset -5px -5px 10px palette.$inner-box-shadow;\n  }\n\n  &:focus {\n    box-shadow: inset 5px 5px 10px palette.$outer-box-shadow,\n    inset -5px -5px 10px palette.$inner-box-shadow;\n  }\n\n  &:disabled {\n    opacity: 0.5;\n    color: palette.$disabled-color;\n    background: linear-gradient(0deg, palette.$disabled-color, palette.$disabled-color), inherit;\n    box-shadow: inset 1px 1px 2px palette.$disabled-color,\n    inset -1px -1px 2px palette.$inner-box-shadow;\n    cursor: no-drop;\n  }\n}\n",
          "styleUrl": "./textarea.component.scss"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "el",
            "type": "ElementRef",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "ngControl",
            "type": "NgControl",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 26,
        "jsdoctags": [
          {
            "name": "el",
            "type": "ElementRef",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "ngControl",
            "type": "NgControl",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "extends": [],
      "implements": [
        "KsFormFieldControl"
      ],
      "accessors": {
        "required": {
          "name": "required",
          "setSignature": {
            "name": "required",
            "type": "void",
            "deprecated": false,
            "deprecationMessage": "",
            "args": [
              {
                "name": "value",
                "type": "boolean",
                "deprecated": false,
                "deprecationMessage": ""
              }
            ],
            "returnType": "void",
            "line": 49,
            "jsdoctags": [
              {
                "name": "value",
                "type": "boolean",
                "deprecated": false,
                "deprecationMessage": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          },
          "getSignature": {
            "name": "required",
            "type": "boolean",
            "returnType": "boolean",
            "line": 39
          }
        },
        "disabled": {
          "name": "disabled",
          "setSignature": {
            "name": "disabled",
            "type": "void",
            "deprecated": false,
            "deprecationMessage": "",
            "args": [
              {
                "name": "value",
                "type": "boolean",
                "deprecated": false,
                "deprecationMessage": ""
              }
            ],
            "returnType": "void",
            "line": 62,
            "jsdoctags": [
              {
                "name": "value",
                "type": "boolean",
                "deprecated": false,
                "deprecationMessage": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          },
          "getSignature": {
            "name": "disabled",
            "type": "boolean",
            "returnType": "boolean",
            "line": 56
          }
        }
      }
    },
    {
      "name": "LayoutComponent",
      "id": "component-LayoutComponent-8891f6df74624e2ce037eca6892ca0164ba95a7cf53f550ca28ccef97b80d7f0bae07c72f70857d8e4c534a858eb696833d21d8fffcabcef1dd288a9a6705b42",
      "file": "src/app/features/layout/layout.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "ks-layout",
      "styleUrls": [],
      "styles": [],
      "templateUrl": [
        "./layout.component.html"
      ],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "isOpenDialog",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 37
        }
      ],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "KsCardComponent",
          "type": "component"
        },
        {
          "name": "KsCardFooterDirective",
          "type": "directive"
        },
        {
          "name": "KsCardHeaderDirective",
          "type": "directive"
        },
        {
          "name": "KsCardBodyDirective",
          "type": "directive"
        },
        {
          "name": "NgIf"
        },
        {
          "name": "KsDividerComponent",
          "type": "component"
        },
        {
          "name": "DialogComponent",
          "type": "component"
        },
        {
          "name": "KsButton"
        },
        {
          "name": "TabsComponent",
          "type": "component"
        },
        {
          "name": "TabComponent",
          "type": "component"
        },
        {
          "name": "AvatarComponent",
          "type": "component"
        },
        {
          "name": "TableComponent",
          "type": "component"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Component } from '@angular/core';\nimport {\n  KsCardBodyDirective,\n  KsCardComponent,\n  KsCardFooterDirective,\n  KsCardHeaderDirective\n} from '@ngx-ks/card';\nimport { NgIf } from '@angular/common';\nimport { KsDividerComponent } from '@ngx-ks/divider';\nimport { DialogComponent } from '@ngx-ks/dialog';\nimport { KsButton } from '@ngx-ks/button';\nimport { TabComponent, TabsComponent } from '@ngx-ks/tabs';\nimport { AvatarComponent } from '@ngx-ks/avatar';\nimport { TableComponent } from '@ngx-ks/table';\n\n@Component({\n  selector: 'ks-layout',\n  standalone: true,\n  imports: [\n    KsCardComponent,\n    KsCardFooterDirective,\n    KsCardHeaderDirective,\n    KsCardBodyDirective,\n    NgIf,\n    KsDividerComponent,\n    DialogComponent,\n    KsButton,\n    TabsComponent,\n    TabComponent,\n    AvatarComponent,\n    TableComponent\n  ],\n  templateUrl: './layout.component.html',\n  styleUrl: './layout.component.scss'\n})\nexport class LayoutComponent {\n  isOpenDialog = false;\n}\n",
      "styleUrl": "./layout.component.scss",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": [],
      "templateData": "<div class=\"card-container\">\n  <ks-card>\n    <div ksCardHeader>Card Header</div>\n\n    <div ksCardBody>Card body</div>\n\n    <div ksCardFooter>Card Footer</div>\n  </ks-card>\n</div>\n<ks-divider></ks-divider>\n<button (click)=\"isOpenDialog = true\" ks-button>Open Dialog</button>\n<ks-dialog (close)=\"isOpenDialog = false\" [isOpen]=\"isOpenDialog\">\n  <h2>Title</h2>\n  <p>Dialog body content</p>\n</ks-dialog>\n<ks-divider></ks-divider>\n<ks-tabs>\n  <ks-tab title=\"Tab 1\">\n    <!-- Tab 1 content goes here -->\n    <p>Content of Tab 1</p>\n  </ks-tab>\n  <ks-tab title=\"Tab 2\">\n    <!-- Tab 2 content goes here -->\n    <p>Content of Tab 2</p>\n  </ks-tab>\n</ks-tabs>\n<ks-divider></ks-divider>\n<div style=\"display: flex; gap: 30px;\">\n  <ks-avatar></ks-avatar>\n  <ks-avatar\n    [imageUrl]=\"'https://img.freepik.com/premium-vector/kawaii-cartoon-bear-art-illustration_839893-112.jpg'\"></ks-avatar>\n  <ks-avatar\n    [imageUrl]=\"'https://img.freepik.com/premium-vector/kawaii-cartoon-bear-art-illustration_839893-112.jpg'\"\n    [size]=\"50\"></ks-avatar>\n</div>\n<ks-divider></ks-divider>\n<ks-table [columns]=\"['name', 'age', 'Occupation']\" [data]=\"[\n  { name: 'John Doe', age: 30, Occupation: 'Engineer', id: '42' },\n  { name: 'Jane Smith', age: 25, Occupation: 'Designer', id: '43' },\n  { name: 'Sam Johnson', age: 40, Occupation: 'Manager', id: '44' }\n]\"></ks-table>\n\n"
    },
    {
      "name": "LoginPageComponent",
      "id": "component-LoginPageComponent-6a9a7c54a3f5a8563d03e2e11d7ee70d1d283ad0d7ce8f862cf07ffea4b10deb06e4ffb3b55be0226a31728a05155ba318ff904f0183b3e0f9257dccd51d3453",
      "file": "src/components/login-page/login-page.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "ks-login-page",
      "styleUrls": [],
      "styles": [],
      "templateUrl": [
        "./login-page.component.html"
      ],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [],
      "outputsClass": [
        {
          "name": "submit",
          "defaultValue": "new EventEmitter<Partial<LoginData>>()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 44,
          "type": "EventEmitter"
        }
      ],
      "propertiesClass": [
        {
          "name": "form",
          "defaultValue": "new FormGroup({\n    username: new FormControl(null, [Validators.required]),\n    password: new FormControl(null, [Validators.required])\n  })",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 46
        }
      ],
      "methodsClass": [
        {
          "name": "onSubmit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 51,
          "deprecated": false,
          "deprecationMessage": ""
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "KsCardComponent",
          "type": "component"
        },
        {
          "name": "KsInput"
        },
        {
          "name": "KsButton"
        },
        {
          "name": "ReactiveFormsModule",
          "type": "module"
        },
        {
          "name": "ErrorDirective",
          "type": "directive"
        },
        {
          "name": "KsLabel"
        },
        {
          "name": "FormFieldComponent",
          "type": "component"
        },
        {
          "name": "KsCardBodyDirective",
          "type": "directive"
        },
        {
          "name": "KsCardFooterDirective",
          "type": "directive"
        },
        {
          "name": "NgIf"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {\n  Component,\n  EventEmitter,\n  Output\n} from '@angular/core';\nimport {\n  KsCardBodyDirective,\n  KsCardComponent,\n  KsCardFooterDirective\n} from '@ngx-ks/card';\nimport { KsInput } from '@ngx-ks/input';\nimport { KsButton } from '@ngx-ks/button';\nimport { LoginData } from './type';\nimport {\n  FormControl,\n  FormGroup,\n  ReactiveFormsModule,\n  Validators\n} from '@angular/forms';\nimport { ErrorDirective } from '@ngx-ks/error';\nimport { FormFieldComponent } from '@ngx-ks/form-field';\nimport { NgIf } from '@angular/common';\nimport { KsLabel } from '@ngx-ks/label';\n\n@Component({\n  selector: 'ks-login-page',\n  standalone: true,\n  imports: [\n    KsCardComponent,\n    KsInput,\n    KsButton,\n    ReactiveFormsModule,\n    ErrorDirective,\n    KsLabel,\n    FormFieldComponent,\n    KsCardBodyDirective,\n    KsCardFooterDirective,\n    NgIf\n  ],\n  templateUrl: './login-page.component.html',\n  styleUrl: './login-page.component.scss'\n})\nexport class LoginPageComponent {\n  @Output() submit = new EventEmitter<Partial<LoginData>>();\n\n  form = new FormGroup({\n    username: new FormControl(null, [Validators.required]),\n    password: new FormControl(null, [Validators.required])\n  });\n\n  onSubmit(): void {\n    if (this.form.valid) {\n      this.submit.emit(this.form.value);\n    }\n  }\n}\n",
      "styleUrl": "./login-page.component.scss",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": [],
      "templateData": "<ks-card>\n  <div ksCardBody>\n    <form [formGroup]=\"form\" class=\"login-page-body\">\n      <ks-form-field>\n        <ks-label>Username</ks-label>\n        <input formControlName=\"username\" ks-input placeholder=\"username\">\n        <ks-error *ngIf=\"form.controls.username.hasError('required') && form.controls.username.touched\">Required\n        </ks-error>\n      </ks-form-field>\n      <ks-form-field>\n        <ks-label>Password</ks-label>\n        <input formControlName=\"password\" ks-input placeholder=\"password\" type=\"password\">\n        @if (form.controls.password.invalid && form.controls.password.touched) {\n          <ks-error>Required</ks-error>\n        }\n      </ks-form-field>\n    </form>\n  </div>\n  <div class=\"login-page-footer\" ksCardFooter>\n    <button (click)=\"onSubmit()\" [disabled]=\"form.invalid\" ks-button type=\"button\">Submit</button>\n  </div>\n</ks-card>\n"
    },
    {
      "name": "PageNotFoundComponent",
      "id": "component-PageNotFoundComponent-dbf41483038c5840a34c6cc2b7324ba4b10af5cf2125684f8092edf5a429caf1d864d7a552f9f952c79557fa23c103607b2f74739657c3beb766a78822a95ada",
      "file": "src/components/page-not-found/page-not-found.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "ks-page-not-found",
      "styleUrls": [],
      "styles": [],
      "templateUrl": [
        "./page-not-found.component.html"
      ],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [
        {
          "name": "goToHome",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 15,
          "deprecated": false,
          "deprecationMessage": ""
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "KsButton"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Component } from '@angular/core';\nimport { KsButton } from '@ngx-ks/button';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'ks-page-not-found',\n  standalone: true,\n  imports: [KsButton],\n  templateUrl: './page-not-found.component.html',\n  styleUrl: './page-not-found.component.scss'\n})\nexport class PageNotFoundComponent {\n  constructor(private router: Router) {}\n\n  goToHome(): void {\n    this.router.navigate(['/']);\n  }\n}\n",
      "styleUrl": "./page-not-found.component.scss",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "router",
            "type": "Router",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 12,
        "jsdoctags": [
          {
            "name": "router",
            "type": "Router",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "extends": [],
      "templateData": "<section class=\"ks-page-not-found\">\n  <div class=\"ks-image-container\">\n    <h1>404</h1>\n  </div>\n  <div class=\"ks-additional-info\">\n    <h3>Look like you're lost</h3>\n    <span>the page you are looking for not available!</span>\n    <button (click)=\"goToHome()\" ks-button>Go to Home</button>\n  </div>\n</section>\n"
    },
    {
      "name": "Pill",
      "id": "component-Pill-8462f627b821db07d00098fcece0f58489b71747c80ced258411c62846dcece2874ae913a6b6c94426fa8842c6eb7188ab1b7897495c3a27b18e19c6442230cd",
      "file": "src/stories/pill/Pill.stories.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "styleUrls": [],
      "styles": [],
      "template": "<ks-pill>Pill</ks-pill>",
      "templateUrl": [],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "PillComponent",
          "type": "component"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import type { Meta, StoryObj } from '@storybook/angular';\nimport { Component } from '@angular/core';\nimport { PillComponent } from '@ngx-ks/pill';\n\n@Component({\n  standalone: true,\n  imports: [PillComponent],\n  template: ` <ks-pill>Pill</ks-pill>`\n})\nclass Pill {}\n\n// More on how to set up stories at: https://storybook.js.org/docs/writing-stories\nconst meta: Meta<Pill> = {\n  title: 'Example/Pill',\n  component: Pill,\n  render: (args: Pill) => ({\n    props: {\n      ...args\n    }\n  }),\n  argTypes: {}\n};\n\nexport default meta;\ntype Story = StoryObj<Pill>;\n\nexport const Default: Story = {\n  args: {}\n};\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": []
    },
    {
      "name": "PillComponent",
      "id": "component-PillComponent-e5dc83d92851c5fdd9b82d76355916e59786fdb363428f617a976b373d235832c3acbef332340fd08b8dc516eb3c5519f50716b4ce21837a0fddad99cdc98856",
      "file": "src/components/pill/pill.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "ks-pill",
      "styleUrls": [],
      "styles": [],
      "templateUrl": [
        "./pill.component.html"
      ],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "NgClass"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Component } from '@angular/core';\nimport { NgClass } from '@angular/common';\n\n@Component({\n  selector: 'ks-pill',\n  standalone: true,\n  imports: [NgClass],\n  templateUrl: './pill.component.html',\n  styleUrl: './pill.component.scss'\n})\nexport class PillComponent {}\n",
      "styleUrl": "./pill.component.scss",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": [],
      "templateData": "<div class=\"ks-pill\">\n  <ng-content></ng-content>\n</div>\n"
    },
    {
      "name": "PipesComponent",
      "id": "component-PipesComponent-1711abdacf75e1dac846bb77d3b85a6f3c6c2aa9b22bff4e69bacafa39c48ac39bb952e07a421207b7039b6ecc52ef3e702defd90d7040aa523878310e9d1b54",
      "file": "src/app/features/pipes/pipes.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "ks-pipes",
      "styleUrls": [],
      "styles": [],
      "templateUrl": [
        "./pipes.component.html"
      ],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "id",
          "defaultValue": "'id' as keyof UniquePipeItem",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 56
        },
        {
          "name": "uniquePipeCollection",
          "defaultValue": "[\n    { id: 1, name: '1' },\n    {\n      id: 1,\n      name: '1'\n    },\n    { id: 2, name: '2' }\n  ] satisfies UniquePipeItem[]",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 48
        },
        {
          "name": "user",
          "defaultValue": "{\n    firstName: '  John ',\n    lastName: '  Doe  '\n  }",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "object",
          "optional": false,
          "description": "",
          "line": 58
        }
      ],
      "methodsClass": [
        {
          "name": "divideTwo",
          "args": [
            {
              "name": "value",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "number",
          "typeParameters": [],
          "line": 63,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "value",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "FormatBytesPipe",
          "type": "pipe"
        },
        {
          "name": "KsDividerComponent",
          "type": "component"
        },
        {
          "name": "MemoPipe",
          "type": "pipe"
        },
        {
          "name": "EllipsisPipe",
          "type": "pipe"
        },
        {
          "name": "DefaultValuePipe",
          "type": "pipe"
        },
        {
          "name": "EnumPropertyPipe",
          "type": "pipe"
        },
        {
          "name": "TruncatePipe",
          "type": "pipe"
        },
        {
          "name": "FirstPipe",
          "type": "pipe"
        },
        {
          "name": "LastPipe",
          "type": "pipe"
        },
        {
          "name": "UniquePipe",
          "type": "pipe"
        },
        {
          "name": "JsonPipe",
          "type": "pipe"
        },
        {
          "name": "JoinPipe",
          "type": "pipe"
        },
        {
          "name": "SplitPipe",
          "type": "pipe"
        },
        {
          "name": "UserNamePipe",
          "type": "pipe"
        },
        {
          "name": "CapitalizePipe",
          "type": "pipe"
        },
        {
          "name": "HighlightPipe",
          "type": "pipe"
        },
        {
          "name": "IdToValuePipe",
          "type": "pipe"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Component } from '@angular/core';\nimport { FormatBytesPipe } from '@ngx-ks/pipes/format-bytes';\nimport { KsDividerComponent } from '@ngx-ks/divider';\nimport { MemoPipe } from '@ngx-ks/pipes/memo';\nimport { EllipsisPipe } from '@ngx-ks/pipes/ellipsis';\nimport { DefaultValuePipe } from '@ngx-ks/pipes/default-value';\nimport { EnumPropertyPipe } from '@ngx-ks/pipes/enum-property';\nimport { TruncatePipe } from '@ngx-ks/pipes/truncate';\nimport { FirstPipe } from '@ngx-ks/pipes/first';\nimport { LastPipe } from '@ngx-ks/pipes/last';\nimport { UniquePipe } from '@ngx-ks/pipes/unique';\nimport { JsonPipe } from '@angular/common';\nimport { JoinPipe } from '@ngx-ks/pipes/join';\nimport { SplitPipe } from '@ngx-ks/pipes/split';\nimport { UserNamePipe } from '@ngx-ks/pipes/user-name';\nimport { CapitalizePipe } from '@ngx-ks/pipes/capitalize';\nimport { HighlightPipe } from '@ngx-ks/pipes/highlight';\nimport { IdToValuePipe } from '@ngx-ks/pipes/idToValue';\n\ntype UniquePipeItem = { id: number; name: string };\n\n@Component({\n  selector: 'ks-pipes',\n  standalone: true,\n  imports: [\n    FormatBytesPipe,\n    KsDividerComponent,\n    MemoPipe,\n    EllipsisPipe,\n    DefaultValuePipe,\n    EnumPropertyPipe,\n    TruncatePipe,\n    FirstPipe,\n    LastPipe,\n    UniquePipe,\n    JsonPipe,\n    JoinPipe,\n    SplitPipe,\n    UserNamePipe,\n    CapitalizePipe,\n    HighlightPipe,\n    IdToValuePipe\n  ],\n  templateUrl: './pipes.component.html',\n  styleUrl: './pipes.component.scss'\n})\nexport class PipesComponent {\n  uniquePipeCollection = [\n    { id: 1, name: '1' },\n    {\n      id: 1,\n      name: '1'\n    },\n    { id: 2, name: '2' }\n  ] satisfies UniquePipeItem[];\n  id = 'id' as keyof UniquePipeItem;\n\n  user = {\n    firstName: '  John ',\n    lastName: '  Doe  '\n  };\n\n  divideTwo(value: number): number {\n    return value / 2;\n  }\n}\n",
      "styleUrl": "./pipes.component.scss",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": [],
      "templateData": "<h3>formatBytes:</h3>\n<div>0 | formatBytes - {{ 0 | formatBytes }}</div>\n<div>100 | formatBytes - {{ 100 | formatBytes }}</div>\n<div>100000 | formatBytes - {{ 100000 | formatBytes }}</div>\n<ks-divider></ks-divider>\n<h3>memo:</h3>\n<div>100 | memo : divideTwo - {{ 100 | memo:divideTwo }}</div>\n<ks-divider></ks-divider>\n<h3>EllipsisPipe:</h3>\n<div>Short text | ellipsis:100 - {{ 'Short text' | ellipsis:100 }}</div>\n<div>Long long long long long long text | ellipsis:10 - {{ 'Long long long long long long text' | ellipsis:10 }}</div>\n<ks-divider></ks-divider>\n<h3>DefaultValuePipe:</h3>\n<div>undefined | defaultValue:100 - {{ undefined | defaultValue:100 }}</div>\n<div>null | defaultValue:42 - {{ null | defaultValue:42 }}</div>\n<div>'' | defaultValue:42 - \"{{ '' | defaultValue:42 }}\"</div>\n<ks-divider></ks-divider>\n<h3>EnumPropertyPipe:</h3>\n<div>A | enumProperty:&#123;A: 'abc', D: '42'&#125; - {{ $any('A') | enumProperty:{ A: 'abc', D: '42' } }}</div>\n<ks-divider></ks-divider>\n<h3>Truncate:</h3>\n<div>long long long long text | truncate:10 - {{ 'long long long long text' | truncate:10 }}</div>\n<ks-divider></ks-divider>\n<h3>First:</h3>\n<div>[1, 2, 3] | first - {{ [1, 2, 3] | first }}</div>\n<ks-divider></ks-divider>\n<h3>Last:</h3>\n<div>[1, 2, 3] | last - {{ [1, 2, 3] | last }}</div>\n<ks-divider></ks-divider>\n<h3>Unique:</h3>\n<div>[1, 2, 3, 1, 3, 4] | unique - {{ [1, 2, 3, 1, 3, 4] | unique }}</div>\n<div>{{ \"[{id: 1, name: '1'}, {id: 1, name: '1'}, {id: 2, name: '2'}]\" }} | unique: 'id' - {{\n    uniquePipeCollection | unique:$any(id) | json\n  }}\n</div>\n<ks-divider></ks-divider>\n<h3>Join:</h3>\n<div>[1, 2, 3, 1, 3, 4] | join - {{ [1, 2, 3, 1, 3, 4] | join }}</div>\n<div>{{ \"['apple', 'banana', 'orange']\" }} | join: ' :: ' - {{\n    ['apple', 'banana', 'orange'] | join: ' :: '\n  }}\n</div>\n<ks-divider></ks-divider>\n<h3>Split:</h3>\n<div>\"hello,world\" | split:',' - {{ \"hello,world\" | split:',' | json }}</div>\n<div>\"hello!&#64;world\" | split:'!&#64;' - {{ \"hello!@world\" | split:'!@' | json }}</div>\n<ks-divider></ks-divider>\n<h3>User Name:</h3>\n<div>{{ user | json }} | userName - {{ user | userName }}</div>\n<ks-divider></ks-divider>\n<h3>Capitalize:</h3>\n<div>{{ '\"hello world\"' }} | capitalize - {{ 'hello world' | capitalize }}</div>\n<ks-divider></ks-divider>\n<h3>Highlight:</h3>\n<div>{{ '\"hello world\"' }} | highlight:\"wor\" -\n  <span [innerHTML]=\"'hello world' | highlight:'wor'\"></span>\n</div>\n<ks-divider></ks-divider>\n<h3>IdToValue:</h3>\n<div>\n  id1 | idToValue:\"&#123; id1: 'value1', id2: 'value2' &#125;\" -\n  {{ $any('id1') | idToValue: { id1: 'value1', id2: 'value2' } }}\n</div>\n"
    },
    {
      "name": "ProgressBarComponent",
      "id": "component-ProgressBarComponent-532718819dbc0ad624676df89a0d1ca72a7f9ad1f3f428b15711e093adf6f94c885630f30320aa05e52e58cc4a6596c3c50e7270e44298b4b558597c58b68c10",
      "file": "src/components/progress-bar/progress-bar.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "ks-progress-bar",
      "styleUrls": [],
      "styles": [
        "\n      @use '../../core/styles/palette';\n\n      .ks-progress-bar {\n        width: 100%;\n        height: 4px;\n        background-color: palette.$background-color;\n        box-shadow:\n          inset 1px 1px 1px palette.$silver,\n          inset -1px -1px 1px palette.$white;\n        border-radius: 10px;\n        overflow: hidden;\n        margin: 5px 0;\n\n        .progress-bar-track {\n          height: 100%;\n          width: 100%;\n          background-color: transparent;\n          position: relative;\n          overflow: hidden;\n        }\n\n        .progress-bar-fill {\n          height: 100%;\n          background-color: palette.$fruitsalad;\n          border-radius: 10px;\n          transition: width 0.3s ease-in-out;\n        }\n      }\n    "
      ],
      "template": "<div class=\"ks-progress-bar\">\n  <div class=\"progress-bar-track\">\n    <div\n      class=\"progress-bar-fill\"\n      [style.width]=\"progress + '%'\"\n    ></div>\n  </div>\n</div>\n",
      "templateUrl": [],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "name": "progress",
          "defaultValue": "0",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 51,
          "type": "number",
          "decorators": []
        }
      ],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'ks-progress-bar',\n  standalone: true,\n  imports: [],\n  template: `\n    <div class=\"ks-progress-bar\">\n      <div class=\"progress-bar-track\">\n        <div\n          class=\"progress-bar-fill\"\n          [style.width]=\"progress + '%'\"\n        ></div>\n      </div>\n    </div>\n  `,\n  styles: [\n    `\n      @use '../../core/styles/palette';\n\n      .ks-progress-bar {\n        width: 100%;\n        height: 4px;\n        background-color: palette.$background-color;\n        box-shadow:\n          inset 1px 1px 1px palette.$silver,\n          inset -1px -1px 1px palette.$white;\n        border-radius: 10px;\n        overflow: hidden;\n        margin: 5px 0;\n\n        .progress-bar-track {\n          height: 100%;\n          width: 100%;\n          background-color: transparent;\n          position: relative;\n          overflow: hidden;\n        }\n\n        .progress-bar-fill {\n          height: 100%;\n          background-color: palette.$fruitsalad;\n          border-radius: 10px;\n          transition: width 0.3s ease-in-out;\n        }\n      }\n    `\n  ]\n})\nexport class ProgressBarComponent {\n  @Input() progress = 0;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "\n      @use '../../core/styles/palette';\n\n      .ks-progress-bar {\n        width: 100%;\n        height: 4px;\n        background-color: palette.$background-color;\n        box-shadow:\n          inset 1px 1px 1px palette.$silver,\n          inset -1px -1px 1px palette.$white;\n        border-radius: 10px;\n        overflow: hidden;\n        margin: 5px 0;\n\n        .progress-bar-track {\n          height: 100%;\n          width: 100%;\n          background-color: transparent;\n          position: relative;\n          overflow: hidden;\n        }\n\n        .progress-bar-fill {\n          height: 100%;\n          background-color: palette.$fruitsalad;\n          border-radius: 10px;\n          transition: width 0.3s ease-in-out;\n        }\n      }\n    \n",
      "extends": []
    },
    {
      "name": "ProgressBarStoryComponent",
      "id": "component-ProgressBarStoryComponent-9c4852374e0b7e7d98d1ac39cc49d17754a59d66efd6b505238b15e1481520ce4ecbe9f6b89676dafadce506f8d4bb6deb58114bf4ed6354bed39c3eed1759a2",
      "file": "src/stories/progress-bar/progress-bar.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "ks-progress-bar-storybook",
      "styleUrls": [],
      "styles": [],
      "template": "<ks-progress-bar\n  [progress]=\"progress\"\n></ks-progress-bar>\n",
      "templateUrl": [],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "name": "progress",
          "defaultValue": "0",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 15,
          "type": "number",
          "decorators": []
        }
      ],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "ProgressBarComponent",
          "type": "component"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Component, Input } from '@angular/core';\nimport { ProgressBarComponent } from '@ngx-ks/progress-bar';\n\n@Component({\n  selector: 'ks-progress-bar-storybook',\n  standalone: true,\n  imports: [ProgressBarComponent],\n  template: `\n    <ks-progress-bar\n      [progress]=\"progress\"\n    ></ks-progress-bar>\n  `\n})\nexport default class ProgressBarStoryComponent {\n  @Input() progress = 0;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": []
    },
    {
      "name": "RadioButtonComponent",
      "id": "component-RadioButtonComponent-c28f101d3c39d9f7c15749261bc4f08604b1f68e63fbb19f8941c7b5aa59805e71c10120349362d8f70d65ec4d3086fa4127d34442448affd2ef0ad2c46001c4",
      "file": "src/stories/radio-button/radio-button.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "storybook-button",
      "styleUrls": [],
      "styles": [],
      "template": "<ks-storybook-wrapper>\n  <ks-radio-group>\n    <ks-radio-button value=\"option1\"\n      >Option 1\n    </ks-radio-button>\n    <ks-radio-button value=\"option2\"\n      >Option 2\n    </ks-radio-button>\n    <ks-radio-button value=\"option3\"\n      >Option 3\n    </ks-radio-button>\n  </ks-radio-group>\n</ks-storybook-wrapper>\n",
      "templateUrl": [],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "WrapperComponent",
          "type": "component"
        },
        {
          "name": "KsRadioGroupComponent",
          "type": "component"
        },
        {
          "name": "KsRadioButtonComponent",
          "type": "component"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Component } from '@angular/core';\nimport { WrapperComponent } from '../wrapper/wrapper.component';\nimport {\n  KsRadioButtonComponent,\n  KsRadioGroupComponent\n} from '@ngx-ks/radio-button';\n\n@Component({\n  selector: 'storybook-button',\n  imports: [\n    WrapperComponent,\n    KsRadioGroupComponent,\n    KsRadioButtonComponent\n  ],\n  template: `\n    <ks-storybook-wrapper>\n      <ks-radio-group>\n        <ks-radio-button value=\"option1\"\n          >Option 1\n        </ks-radio-button>\n        <ks-radio-button value=\"option2\"\n          >Option 2\n        </ks-radio-button>\n        <ks-radio-button value=\"option3\"\n          >Option 3\n        </ks-radio-button>\n      </ks-radio-group>\n    </ks-storybook-wrapper>\n  `,\n  standalone: true\n})\nexport default class RadioButtonComponent {}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": []
    },
    {
      "name": "SelectorComponent",
      "id": "component-SelectorComponent-56aca83f15cb31488b415d3e145865368a8f9ce2d73754e401ca225c962b02a438501c6561adddbedecd75ae3b086b9fdf0a59e481590ea5dcbb6b0c7f46ac47",
      "file": "src/stories/selector/selector.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "storybook-selector",
      "styleUrls": [],
      "styles": [],
      "template": "<ks-storybook-wrapper>\n  <ks-selector\n    [formControl]=\"formCntrl\"\n    [options]=\"[\n      { label: 'Option 1', value: 'option1' },\n      { label: 'Option 2', value: 'option2' },\n      { label: 'Option 3', value: 'option3' }\n    ]\"\n  >\n  </ks-selector>\n</ks-storybook-wrapper>\n",
      "templateUrl": [],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "name": "disabled",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 33,
          "type": "boolean",
          "decorators": []
        }
      ],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "formCntrl",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "FormControl",
          "optional": false,
          "description": "",
          "line": 35
        }
      ],
      "methodsClass": [
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 37,
          "deprecated": false,
          "deprecationMessage": ""
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "WrapperComponent",
          "type": "component"
        },
        {
          "name": "KsSelectorComponent",
          "type": "component"
        },
        {
          "name": "ReactiveFormsModule",
          "type": "module"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import type { OnInit } from '@angular/core';\nimport { Component, Input } from '@angular/core';\nimport { WrapperComponent } from '../wrapper/wrapper.component';\nimport { KsSelectorComponent } from '@ngx-ks/selector';\nimport {\n  FormControl,\n  ReactiveFormsModule\n} from '@angular/forms';\n\n@Component({\n  selector: 'storybook-selector',\n  imports: [\n    WrapperComponent,\n    KsSelectorComponent,\n    ReactiveFormsModule\n  ],\n  template: `\n    <ks-storybook-wrapper>\n      <ks-selector\n        [formControl]=\"formCntrl\"\n        [options]=\"[\n          { label: 'Option 1', value: 'option1' },\n          { label: 'Option 2', value: 'option2' },\n          { label: 'Option 3', value: 'option3' }\n        ]\"\n      >\n      </ks-selector>\n    </ks-storybook-wrapper>\n  `,\n  standalone: true\n})\nexport default class SelectorComponent implements OnInit {\n  @Input() disabled = false;\n\n  formCntrl!: FormControl;\n\n  ngOnInit() {\n    this.formCntrl = new FormControl({\n      value: null,\n      disabled: this.disabled\n    });\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": [],
      "implements": [
        "OnInit"
      ]
    },
    {
      "name": "SlideToggleComponent",
      "id": "component-SlideToggleComponent-2de599a18b4ef9e36d8f53e2b8211f9f259bd8fdd7d83f72c24b5d4d06069ce7a407cf09d7599f71b790871cfe6fc4045cadfdaadab8008bd7c5aa815037ebeb",
      "file": "src/stories/slide-toggle/slide-toggle.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "storybook-button",
      "styleUrls": [],
      "styles": [],
      "template": "<ks-storybook-wrapper>\n  <ks-slide-toggle\n    [formControl]=\"slideToggle\"\n  ></ks-slide-toggle>\n</ks-storybook-wrapper>\n",
      "templateUrl": [],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "slideToggle",
          "defaultValue": "new FormControl(true)",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 26
        }
      ],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "WrapperComponent",
          "type": "component"
        },
        {
          "name": "KsSlideToggleComponent",
          "type": "component"
        },
        {
          "name": "ReactiveFormsModule",
          "type": "module"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Component } from '@angular/core';\nimport { WrapperComponent } from '../wrapper/wrapper.component';\nimport { KsSlideToggleComponent } from '@ngx-ks/slide-toggle';\nimport {\n  FormControl,\n  ReactiveFormsModule\n} from '@angular/forms';\n\n@Component({\n  selector: 'storybook-button',\n  imports: [\n    WrapperComponent,\n    KsSlideToggleComponent,\n    ReactiveFormsModule\n  ],\n  template: `\n    <ks-storybook-wrapper>\n      <ks-slide-toggle\n        [formControl]=\"slideToggle\"\n      ></ks-slide-toggle>\n    </ks-storybook-wrapper>\n  `,\n  standalone: true\n})\nexport default class SlideToggleComponent {\n  slideToggle = new FormControl(true);\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": []
    },
    {
      "name": "TabComponent",
      "id": "component-TabComponent-f0824a45723b758cb867bd57f3e42484358ea86cf167742648e8f732ed8277f6c21f05f102ee45accad58628f69d545851ebc3d24754dccc4f6fed7d2fd94b95",
      "file": "src/components/tabs/tab/tab.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "ks-tab",
      "styleUrls": [],
      "styles": [],
      "templateUrl": [
        "./tab.component.html"
      ],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "name": "title",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 11,
          "type": "string",
          "decorators": []
        }
      ],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "active",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 12,
          "modifierKind": [
            125
          ]
        }
      ],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "NgIf"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Component, Input } from '@angular/core';\nimport { NgIf } from '@angular/common';\n\n@Component({\n  selector: 'ks-tab',\n  standalone: true,\n  imports: [NgIf],\n  templateUrl: './tab.component.html'\n})\nexport class TabComponent {\n  @Input() title: string = '';\n  public active = false;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": [],
      "templateData": "<ng-container *ngIf=\"active\">\n  <ng-content></ng-content>\n</ng-container>\n"
    },
    {
      "name": "TableComponent",
      "id": "component-TableComponent-2a08dc5ec7eb77744881577b6db5122e99dacc63c583efa6912378aa405dafac6f39f8018ff841af7c8c467d69ec4fa6e7322dd1bc7666aeb5f15e7a561e61b2",
      "file": "src/components/table/table.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "ks-table",
      "styleUrls": [],
      "styles": [],
      "templateUrl": [
        "./table.component.html"
      ],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "name": "columns",
          "defaultValue": "[]",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 17,
          "type": "string[]",
          "decorators": []
        },
        {
          "name": "data",
          "defaultValue": "[]",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 18,
          "type": "T[]",
          "decorators": []
        }
      ],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "CommonModule",
          "type": "module"
        },
        {
          "name": "NgFor"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Component, Input } from '@angular/core';\nimport { CommonModule, NgFor } from '@angular/common';\n\n@Component({\n  selector: 'ks-table',\n  standalone: true,\n  imports: [CommonModule, NgFor],\n  templateUrl: './table.component.html',\n  styleUrl: './table.component.scss'\n})\nexport class TableComponent<\n  T extends { id: string | number } & Record<\n    string,\n    string | number\n  >\n> {\n  @Input() columns: string[] = [];\n  @Input() data: T[] = [];\n}\n",
      "styleUrl": "./table.component.scss",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": [],
      "templateData": "<div class=\"table-container\">\n  <table class=\"neumorphic-table\">\n    <thead>\n    <tr>\n      @for (column of columns; track $index) {\n        <th>{{ column }}</th>\n      }\n    </tr>\n    </thead>\n    <tbody>\n      @for (row of data; track $index) {\n        <tr>\n          @for (column of columns; track $index) {\n            <td>{{ row[column] }}</td>\n          }\n        </tr>\n      }\n    </tbody>\n  </table>\n</div>\n"
    },
    {
      "name": "TableStoryComponent",
      "id": "component-TableStoryComponent-08deca38b1a76fece5d7ac65502e8303c9d448df794eabe5acf8e490ac36dd57d3ee1b34c938dd3d1fd727acacb1b2e480562e9eba003fcfbfa135b932a0dea2",
      "file": "src/stories/table/table.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "storybook-button",
      "styleUrls": [],
      "styles": [],
      "template": "<ks-storybook-wrapper>\n  <ks-table\n    [columns]=\"['name', 'age', 'Occupation']\"\n    [data]=\"[\n      {\n        name: 'John Doe',\n        age: 30,\n        Occupation: 'Engineer',\n        id: '42'\n      },\n      {\n        name: 'Jane Smith',\n        age: 25,\n        Occupation: 'Designer',\n        id: '43'\n      },\n      {\n        name: 'Sam Johnson',\n        age: 40,\n        Occupation: 'Manager',\n        id: '44'\n      }\n    ]\"\n  ></ks-table>\n</ks-storybook-wrapper>\n",
      "templateUrl": [],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "TableComponent",
          "type": "component"
        },
        {
          "name": "WrapperComponent",
          "type": "component"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Component } from '@angular/core';\nimport { WrapperComponent } from '../wrapper/wrapper.component';\nimport { TableComponent } from '@ngx-ks/table';\n\n@Component({\n  selector: 'storybook-button',\n  imports: [TableComponent, WrapperComponent],\n  template: `\n    <ks-storybook-wrapper>\n      <ks-table\n        [columns]=\"['name', 'age', 'Occupation']\"\n        [data]=\"[\n          {\n            name: 'John Doe',\n            age: 30,\n            Occupation: 'Engineer',\n            id: '42'\n          },\n          {\n            name: 'Jane Smith',\n            age: 25,\n            Occupation: 'Designer',\n            id: '43'\n          },\n          {\n            name: 'Sam Johnson',\n            age: 40,\n            Occupation: 'Manager',\n            id: '44'\n          }\n        ]\"\n      ></ks-table>\n    </ks-storybook-wrapper>\n  `,\n  standalone: true\n})\nexport default class TableStoryComponent {}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": []
    },
    {
      "name": "Tabs",
      "id": "component-Tabs-dd66d6e852cdd1a7103c7fb40a72e10664920962396f93040ea406cacec15b0023c1493c5415a9ab0dc3a9a6baaa090d925a7911a7ba121ae831cea17dbbf030",
      "file": "src/stories/tabs/Tabs.stories.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "styleUrls": [],
      "styles": [],
      "template": "<ks-tabs>   <ks-tab title=\"Tab 1\">\n     <!-- Tab 1 content goes here -->\n     <p>Content of Tab 1</p>\n   </ks-tab>\n   <ks-tab title=\"Tab 2\">\n     <!-- Tab 2 content goes here -->\n     <p>Content of Tab 2</p>\n   </ks-tab>\n </ks-tabs>",
      "templateUrl": [],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "TabComponent",
          "type": "component"
        },
        {
          "name": "TabsComponent",
          "type": "component"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import type { Meta, StoryObj } from '@storybook/angular';\nimport { Component } from '@angular/core';\nimport { TabComponent, TabsComponent } from '@ngx-ks/tabs';\n\n@Component({\n  standalone: true,\n  imports: [TabComponent, TabsComponent],\n  template: ` <ks-tabs>\n    <ks-tab title=\"Tab 1\">\n      <!-- Tab 1 content goes here -->\n      <p>Content of Tab 1</p>\n    </ks-tab>\n    <ks-tab title=\"Tab 2\">\n      <!-- Tab 2 content goes here -->\n      <p>Content of Tab 2</p>\n    </ks-tab>\n  </ks-tabs>`\n})\nclass Tabs {}\n\n// More on how to set up stories at: https://storybook.js.org/docs/writing-stories\nconst meta: Meta<Tabs> = {\n  title: 'Example/Tabs',\n  component: Tabs,\n  render: (args: Tabs) => ({\n    props: {\n      ...args\n    }\n  }),\n  argTypes: {}\n};\n\nexport default meta;\ntype Story = StoryObj<Tabs>;\n\nexport const Default: Story = {\n  args: {}\n};\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": []
    },
    {
      "name": "TabsComponent",
      "id": "component-TabsComponent-bc5c96a08d98cecd5038df0d904109b9ca6a448a3ddafd9735562fb7838a427014e2e0796887883964b231ae72598880585e907792fafe5b8f5439a9fc757e62",
      "file": "src/components/tabs/tabs/tabs.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "ks-tabs",
      "styleUrls": [],
      "styles": [],
      "templateUrl": [
        "./tabs.component.html"
      ],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "selectedTabIndex",
          "defaultValue": "0",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 33
        },
        {
          "name": "tabs",
          "defaultValue": "undefined!",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "QueryList<TabComponent>",
          "optional": false,
          "description": "",
          "line": 32,
          "decorators": [
            {
              "name": "ContentChildren",
              "stringifiedArguments": "TabComponent, {descendants: true}"
            }
          ],
          "modifierKind": [
            170,
            125
          ]
        }
      ],
      "methodsClass": [
        {
          "name": "ngAfterContentInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 46,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "selectTab",
          "args": [
            {
              "name": "index",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 37,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "index",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "TabComponent",
          "type": "component"
        },
        {
          "name": "NgForOf"
        },
        {
          "name": "NgTemplateOutlet"
        },
        {
          "name": "NgIf"
        },
        {
          "name": "JsonPipe",
          "type": "pipe"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {\n  AfterContentInit,\n  Component,\n  ContentChildren,\n  QueryList\n} from '@angular/core';\nimport { TabComponent } from '../tab/tab.component';\nimport {\n  JsonPipe,\n  NgForOf,\n  NgIf,\n  NgTemplateOutlet\n} from '@angular/common';\n\n@Component({\n  selector: 'ks-tabs',\n  standalone: true,\n  imports: [\n    TabComponent,\n    NgForOf,\n    NgTemplateOutlet,\n    NgIf,\n    JsonPipe\n  ],\n  templateUrl: './tabs.component.html',\n  styleUrl: './tabs.component.scss'\n})\nexport class TabsComponent implements AfterContentInit {\n  @ContentChildren(TabComponent, {\n    descendants: true\n  })\n  public tabs: QueryList<TabComponent> = undefined!;\n  selectedTabIndex: number = 0;\n\n  constructor() {}\n\n  selectTab(index: number): void {\n    this.selectedTabIndex = index;\n    if (this.tabs) {\n      this.tabs.forEach((tab, i) => {\n        tab.active = i === index;\n      });\n    }\n  }\n\n  ngAfterContentInit() {\n    this.selectTab(this.selectedTabIndex);\n  }\n}\n",
      "styleUrl": "./tabs.component.scss",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [],
        "line": 33
      },
      "extends": [],
      "implements": [
        "AfterContentInit"
      ],
      "templateData": "<div class=\"ks-tabs\">\n  <div class=\"tab-header\">\n    @for (tab of tabs; track tab.title; let i = $index) {\n      <div (click)=\"selectTab(i)\" [class.active]=\"selectedTabIndex === i\"\n           class=\"tab\">\n        {{ tab.title }}\n      </div>\n    }\n  </div>\n  <div class=\"tab-content\">\n    <ng-content></ng-content>\n  </div>\n</div>\n"
    },
    {
      "name": "TextareaComponent",
      "id": "component-TextareaComponent-ac886ccae2c27c8e1e9f53975e76a2585ca61fb15c12b5a40e588b7105a870fa2bf758149304796ccd0d8513c62dbd95b563aecf75ab15dc5045f65bfb33992b",
      "file": "src/stories/textarea/textarea.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "storybook-button",
      "styleUrls": [],
      "styles": [],
      "template": "<ks-storybook-wrapper>\n  <textarea\n    ks-textarea\n    placeholder=\"simple text area\"\n    [disabled]=\"disabled\"\n  ></textarea>\n</ks-storybook-wrapper>\n",
      "templateUrl": [],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "name": "disabled",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 20,
          "type": "boolean",
          "decorators": []
        }
      ],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [
        {
          "name": "WrapperComponent",
          "type": "component"
        },
        {
          "name": "KsTextArea"
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Component, Input } from '@angular/core';\nimport { WrapperComponent } from '../wrapper/wrapper.component';\nimport { KsTextArea } from '@ngx-ks/textarea';\n\n@Component({\n  selector: 'storybook-button',\n  imports: [WrapperComponent, KsTextArea],\n  template: `\n    <ks-storybook-wrapper>\n      <textarea\n        ks-textarea\n        placeholder=\"simple text area\"\n        [disabled]=\"disabled\"\n      ></textarea>\n    </ks-storybook-wrapper>\n  `,\n  standalone: true\n})\nexport default class TextareaComponent {\n  @Input() disabled = false;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": []
    },
    {
      "name": "UnitInputComponent",
      "id": "component-UnitInputComponent-a62435f81ce0ac2d9916617c8a472580e99f8e89e77e995f02c20a1135e4929ea6f675d54c4375775b9d8b1faa04dc2248834f3e7cc9f7a01f5654dde8399836",
      "file": "src/components/unit-input/unit-input.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "ks-unit-input",
      "styleUrls": [],
      "styles": [],
      "templateUrl": [
        "./unit-input.component.html"
      ],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "name": "value",
          "defaultValue": "0",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 16,
          "type": "number",
          "decorators": []
        }
      ],
      "outputsClass": [
        {
          "name": "valueChange",
          "defaultValue": "new EventEmitter<number>()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 17,
          "type": "EventEmitter"
        }
      ],
      "propertiesClass": [],
      "methodsClass": [
        {
          "name": "decrement",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 24,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "increment",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 19,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "onInput",
          "args": [
            {
              "name": "event",
              "type": "Event",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 31,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "event",
              "type": "Event",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {\n  Component,\n  EventEmitter,\n  Input,\n  Output\n} from '@angular/core';\n\n@Component({\n  selector: 'ks-unit-input',\n  standalone: true,\n  imports: [],\n  templateUrl: './unit-input.component.html',\n  styleUrl: './unit-input.component.scss'\n})\nexport class UnitInputComponent {\n  @Input() value: number = 0;\n  @Output() valueChange = new EventEmitter<number>();\n\n  increment(): void {\n    this.value++;\n    this.valueChange.emit(this.value);\n  }\n\n  decrement(): void {\n    if (this.value > 0) {\n      this.value--;\n      this.valueChange.emit(this.value);\n    }\n  }\n\n  onInput(event: Event): void {\n    const input = event.target as HTMLInputElement;\n    this.value = +input.value;\n    this.valueChange.emit(this.value);\n  }\n}\n",
      "styleUrl": "./unit-input.component.scss",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": [],
      "templateData": "<div class=\"ks-unit-input\">\n  <button (click)=\"decrement()\" class=\"ks-button\" id=\"decrement-button\">-</button>\n  <input (input)=\"onInput($event)\" [value]=\"value\" type=\"number\" />\n  <button (click)=\"increment()\" class=\"ks-button\" id=\"increment-button\">+</button>\n</div>\n"
    },
    {
      "name": "WrapperComponent",
      "id": "component-WrapperComponent-565197db16a2dd6618e1d691d5ebc2c176f0798f2c781a8af3216c86a5c41e28175f34f70b7b0e7571761056e3f751f4e406b057040b97be5a7b4a9f5c268198",
      "file": "src/stories/wrapper/wrapper.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "ks-storybook-wrapper",
      "styleUrls": [],
      "styles": [],
      "template": "<div class=\"storybook-wrapper\"><ng-content></ng-content></div>",
      "templateUrl": [],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": true,
      "imports": [],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'ks-storybook-wrapper',\n  standalone: true,\n  imports: [],\n  template:\n    '<div class=\"storybook-wrapper\"><ng-content></ng-content></div>',\n  styleUrl: './wrapper.component.scss'\n})\nexport class WrapperComponent {}\n",
      "styleUrl": "./wrapper.component.scss",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": []
    }
  ],
  "modules": [],
  "miscellaneous": {
    "variables": [
      {
        "name": "ALERTS_CONFIG",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/components/alert/constants.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "new InjectionToken<AlertConfig>('Alerts configuration')"
      },
      {
        "name": "appConfig",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/app.config.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "ApplicationConfig",
        "defaultValue": "{\n  providers: [\n    provideRouter(routes),\n    { provide: ALERTS_CONFIG, useValue: { timeout: 1000 } },\n    provideExperimentalZonelessChangeDetection(),\n    provideAnimationsAsync()\n  ]\n}"
      },
      {
        "name": "Default",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/stories/avatar/Avatar.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    imageUrl: 'assets/placeholder.png' as never,\n    size: 100 as never\n  }\n}"
      },
      {
        "name": "Default",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/stories/button/Button.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    label: 'Button'\n  }\n}"
      },
      {
        "name": "Default",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/stories/card/Card.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    withHeader: true,\n    withFooter: true,\n    withBody: true\n  }\n}"
      },
      {
        "name": "Default",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/stories/checkbox/Checkbox.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    label: 'label checkbox'\n  }\n}"
      },
      {
        "name": "Default",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/stories/date-range-picker/DateRangePicker.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {}\n}"
      },
      {
        "name": "Default",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/stories/divider/Divider.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {}\n}"
      },
      {
        "name": "Default",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/stories/dropdown/Dropdown.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {}\n}"
      },
      {
        "name": "Default",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/stories/icon-button/IconButton.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {}\n}"
      },
      {
        "name": "Default",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/stories/input/Input.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {}\n}"
      },
      {
        "name": "Default",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/stories/pill/Pill.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {}\n}"
      },
      {
        "name": "Default",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/stories/progress-bar/ProgressBar.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    progress: 50\n  }\n}"
      },
      {
        "name": "Default",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/stories/radio-button/RadioButton.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {}\n}"
      },
      {
        "name": "Default",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/stories/selector/Selector.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {}\n}"
      },
      {
        "name": "Default",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/stories/slide-toggle/SlideToggle.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {}\n}"
      },
      {
        "name": "Default",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/stories/table/Table.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {}\n}"
      },
      {
        "name": "Default",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/stories/tabs/Tabs.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {}\n}"
      },
      {
        "name": "Default",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/stories/textarea/Textarea.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {}\n}"
      },
      {
        "name": "Default",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/stories/unit-input/UnitInput.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {}\n}"
      },
      {
        "name": "DEFAULT_ALERTS_CONFIG",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/components/alert/constants.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "object",
        "defaultValue": "{\n  timeout: 3000\n}"
      },
      {
        "name": "Disabled",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/stories/button/Button.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    label: 'Button',\n    disabled: true\n  }\n}"
      },
      {
        "name": "Disabled",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/stories/checkbox/Checkbox.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    label: 'disabled checkbox',\n    disabled: true,\n    value: false\n  }\n}"
      },
      {
        "name": "Disabled",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/stories/icon-button/IconButton.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    disabled: true\n  }\n}"
      },
      {
        "name": "Disabled",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/stories/input/Input.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    disabled: true\n  }\n}"
      },
      {
        "name": "Disabled",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/stories/selector/Selector.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    disabled: true\n  }\n}"
      },
      {
        "name": "Disabled",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/stories/textarea/Textarea.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    disabled: true\n  }\n}"
      },
      {
        "name": "generateID",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/components/alert/utils.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "(): string => {\n  return (\n    new Date().getTime().toString(36) +\n    Math.random().toString(36).substr(2, 2)\n  );\n}"
      },
      {
        "name": "k",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/pipes/format-bytes/format-bytes.pipe.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "number",
        "defaultValue": "1024"
      },
      {
        "name": "meta",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/stories/avatar/Avatar.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Meta<AvatarStoryComponent>",
        "defaultValue": "{\n  title: 'Example/Avatar',\n  component: AvatarStoryComponent,\n  render: (args: AvatarStoryComponent) => ({\n    props: {\n      ...args\n    }\n  }),\n  argTypes: {}\n}"
      },
      {
        "name": "meta",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/stories/button/Button.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Meta<Button>",
        "defaultValue": "{\n  title: 'Example/Button',\n  component: Button,\n  render: (args: Button) => ({\n    props: {\n      ...args\n    }\n  }),\n  argTypes: {}\n}"
      },
      {
        "name": "meta",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/stories/card/Card.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Meta<CardComponent>",
        "defaultValue": "{\n  title: 'Example/Card',\n  component: CardComponent,\n  render: (args: CardComponent) => ({\n    props: {\n      ...args\n    }\n  }),\n  argTypes: {}\n}"
      },
      {
        "name": "meta",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/stories/checkbox/Checkbox.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Meta<CheckboxStoryBookComponent>",
        "defaultValue": "{\n  title: 'Example/Checkbox',\n  component: CheckboxStoryBookComponent,\n  render: (args: CheckboxStoryBookComponent) => ({\n    props: {\n      ...args\n    }\n  }),\n  argTypes: {}\n}"
      },
      {
        "name": "meta",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/stories/date-range-picker/DateRangePicker.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Meta<DateRangePickerStoryComponent>",
        "defaultValue": "{\n  title: 'Example/DateRangePicker',\n  component: DateRangePickerStoryComponent,\n  render: (args: DateRangePickerStoryComponent) => ({\n    props: {\n      ...args\n    }\n  }),\n  argTypes: {}\n}"
      },
      {
        "name": "meta",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/stories/divider/Divider.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Meta<Divider>",
        "defaultValue": "{\n  title: 'Example/Divider',\n  component: Divider,\n  render: (args: Divider) => ({\n    props: {\n      ...args\n    }\n  }),\n  argTypes: {}\n}"
      },
      {
        "name": "meta",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/stories/dropdown/Dropdown.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Meta<Dropdown>",
        "defaultValue": "{\n  title: 'Example/Dropdown',\n  component: Dropdown,\n  render: (args: Dropdown) => ({\n    props: {\n      ...args\n    }\n  }),\n  argTypes: {}\n}"
      },
      {
        "name": "meta",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/stories/icon-button/IconButton.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Meta<Button>",
        "defaultValue": "{\n  title: 'Example/Icon Button',\n  component: Button,\n  render: (args: Button) => ({\n    props: {\n      ...args\n    }\n  }),\n  argTypes: {}\n}"
      },
      {
        "name": "meta",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/stories/input/Input.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Meta<Input>",
        "defaultValue": "{\n  title: 'Example/Input',\n  component: Input,\n  render: (args: Input) => ({\n    props: {\n      ...args\n    }\n  }),\n  argTypes: {}\n}"
      },
      {
        "name": "meta",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/stories/pill/Pill.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Meta<Pill>",
        "defaultValue": "{\n  title: 'Example/Pill',\n  component: Pill,\n  render: (args: Pill) => ({\n    props: {\n      ...args\n    }\n  }),\n  argTypes: {}\n}"
      },
      {
        "name": "meta",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/stories/progress-bar/ProgressBar.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Meta<ProgressBar>",
        "defaultValue": "{\n  title: 'Example/ProgressBar',\n  component: ProgressBar,\n  render: (args: ProgressBar) => ({\n    props: {\n      ...args\n    }\n  }),\n  argTypes: {}\n}"
      },
      {
        "name": "meta",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/stories/radio-button/RadioButton.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Meta<RadioButtonComponent>",
        "defaultValue": "{\n  title: 'Example/RadioButton',\n  component: RadioButtonComponent,\n  render: (args: RadioButtonComponent) => ({\n    props: {\n      ...args\n    }\n  }),\n  argTypes: {}\n}"
      },
      {
        "name": "meta",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/stories/selector/Selector.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Meta<SelectorComponent>",
        "defaultValue": "{\n  title: 'Example/Selector',\n  component: SelectorComponent,\n  render: (args: SelectorComponent) => ({\n    props: {\n      ...args\n    }\n  }),\n  argTypes: {}\n}"
      },
      {
        "name": "meta",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/stories/slide-toggle/SlideToggle.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Meta<SlideToggleComponent>",
        "defaultValue": "{\n  title: 'Example/SlideToggle',\n  component: SlideToggleComponent,\n  render: (args: SlideToggleComponent) => ({\n    props: {\n      ...args\n    }\n  }),\n  argTypes: {}\n}"
      },
      {
        "name": "meta",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/stories/table/Table.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Meta<TableStoryComponent>",
        "defaultValue": "{\n  title: 'Example/Table',\n  component: TableStoryComponent,\n  render: (args: TableStoryComponent) => ({\n    props: {\n      ...args\n    }\n  }),\n  argTypes: {}\n}"
      },
      {
        "name": "meta",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/stories/tabs/Tabs.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Meta<Tabs>",
        "defaultValue": "{\n  title: 'Example/Tabs',\n  component: Tabs,\n  render: (args: Tabs) => ({\n    props: {\n      ...args\n    }\n  }),\n  argTypes: {}\n}"
      },
      {
        "name": "meta",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/stories/textarea/Textarea.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Meta<TextareaComponent>",
        "defaultValue": "{\n  title: 'Example/Textarea',\n  component: TextareaComponent,\n  render: (args: TextareaComponent) => ({\n    props: {\n      ...args\n    }\n  }),\n  argTypes: {}\n}"
      },
      {
        "name": "meta",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/stories/unit-input/UnitInput.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Meta<Input>",
        "defaultValue": "{\n  title: 'Example/Unit Input',\n  component: Input,\n  render: (args: Input) => ({\n    props: {\n      ...args\n    }\n  }),\n  argTypes: {}\n}"
      },
      {
        "name": "preview",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": ".storybook/preview.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Preview",
        "defaultValue": "{\n  parameters: {\n    actions: { argTypesRegex: '^on[A-Z].*' },\n    controls: {\n      matchers: {\n        color: /(background|color)$/i,\n        date: /Date$/i\n      }\n    }\n  }\n}"
      },
      {
        "name": "sizes",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/pipes/format-bytes/format-bytes.pipe.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "[]",
        "defaultValue": "['b', 'Kb', 'Mb', 'Gb', 'Tb']"
      },
      {
        "name": "WithoutFooter",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/stories/card/Card.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    withHeader: true,\n    withFooter: false,\n    withBody: true\n  }\n}"
      },
      {
        "name": "WithoutHeader",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/stories/card/Card.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    withHeader: false,\n    withFooter: true,\n    withBody: true\n  }\n}"
      }
    ],
    "functions": [
      {
        "name": "Cache",
        "file": "src/decorators/cache/cache.ts",
        "ctype": "miscellaneous",
        "subtype": "function",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "<p>This decorator assumes that the function being decorated returns an Observable\nand that the same arguments will produce the same result within the specified TTL</p>\n",
        "args": [
          {
            "name": "options",
            "type": "CacheOptions",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "jsdoctags": [
          {
            "name": "options",
            "type": "CacheOptions",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      }
    ],
    "typealiases": [
      {
        "name": "Alert",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "literal type",
        "file": "src/components/alert/types.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 187
      },
      {
        "name": "AlertConfig",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "literal type",
        "file": "src/components/alert/types.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 187
      },
      {
        "name": "Alerts",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "Array<Alert>",
        "file": "src/components/alert/types.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 183
      },
      {
        "name": "AlertType",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "\"warning\" | \"success\" | \"info\"",
        "file": "src/components/alert/types.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 192
      },
      {
        "name": "CamelCase",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "",
        "file": "src/types/types.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 200
      },
      {
        "name": "CamelCaseArray",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "",
        "file": "src/types/types.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 194
      },
      {
        "name": "CamelCaseString",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "",
        "file": "src/types/types.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 194
      },
      {
        "name": "LoginData",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "literal type",
        "file": "src/components/login-page/type.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 187
      },
      {
        "name": "SelectorOption",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "literal type",
        "file": "src/components/selector/type.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 187
      },
      {
        "name": "SelectorOptions",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "Array<SelectorOption>",
        "file": "src/components/selector/type.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 183
      },
      {
        "name": "SnakeCase",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "",
        "file": "src/types/types.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 200
      },
      {
        "name": "SnakeCaseString",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "",
        "file": "src/types/types.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 194
      },
      {
        "name": "Story",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "StoryObj<AvatarStoryComponent>",
        "file": "src/stories/avatar/Avatar.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 183
      },
      {
        "name": "Story",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "StoryObj<Button>",
        "file": "src/stories/button/Button.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 183
      },
      {
        "name": "Story",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "StoryObj<CardComponent>",
        "file": "src/stories/card/Card.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 183
      },
      {
        "name": "Story",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "StoryObj<CheckboxStoryBookComponent>",
        "file": "src/stories/checkbox/Checkbox.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 183
      },
      {
        "name": "Story",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "StoryObj<DateRangePickerStoryComponent>",
        "file": "src/stories/date-range-picker/DateRangePicker.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 183
      },
      {
        "name": "Story",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "StoryObj<Divider>",
        "file": "src/stories/divider/Divider.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 183
      },
      {
        "name": "Story",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "StoryObj<Dropdown>",
        "file": "src/stories/dropdown/Dropdown.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 183
      },
      {
        "name": "Story",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "StoryObj<Button>",
        "file": "src/stories/icon-button/IconButton.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 183
      },
      {
        "name": "Story",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "StoryObj<Input>",
        "file": "src/stories/input/Input.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 183
      },
      {
        "name": "Story",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "StoryObj<Pill>",
        "file": "src/stories/pill/Pill.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 183
      },
      {
        "name": "Story",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "StoryObj<ProgressBar>",
        "file": "src/stories/progress-bar/ProgressBar.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 183
      },
      {
        "name": "Story",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "StoryObj<RadioButtonComponent>",
        "file": "src/stories/radio-button/RadioButton.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 183
      },
      {
        "name": "Story",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "StoryObj<SelectorComponent>",
        "file": "src/stories/selector/Selector.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 183
      },
      {
        "name": "Story",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "StoryObj<SlideToggleComponent>",
        "file": "src/stories/slide-toggle/SlideToggle.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 183
      },
      {
        "name": "Story",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "StoryObj<TableStoryComponent>",
        "file": "src/stories/table/Table.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 183
      },
      {
        "name": "Story",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "StoryObj<Tabs>",
        "file": "src/stories/tabs/Tabs.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 183
      },
      {
        "name": "Story",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "StoryObj<TextareaComponent>",
        "file": "src/stories/textarea/Textarea.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 183
      },
      {
        "name": "Story",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "StoryObj<Input>",
        "file": "src/stories/unit-input/UnitInput.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 183
      },
      {
        "name": "UniquePipeItem",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "literal type",
        "file": "src/app/features/pipes/pipes.component.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 187
      }
    ],
    "enumerations": [],
    "groupedVariables": {
      "src/components/alert/constants.ts": [
        {
          "name": "ALERTS_CONFIG",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/components/alert/constants.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "new InjectionToken<AlertConfig>('Alerts configuration')"
        },
        {
          "name": "DEFAULT_ALERTS_CONFIG",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/components/alert/constants.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "object",
          "defaultValue": "{\n  timeout: 3000\n}"
        }
      ],
      "src/app/app.config.ts": [
        {
          "name": "appConfig",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/app.config.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "ApplicationConfig",
          "defaultValue": "{\n  providers: [\n    provideRouter(routes),\n    { provide: ALERTS_CONFIG, useValue: { timeout: 1000 } },\n    provideExperimentalZonelessChangeDetection(),\n    provideAnimationsAsync()\n  ]\n}"
        }
      ],
      "src/stories/avatar/Avatar.stories.ts": [
        {
          "name": "Default",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/stories/avatar/Avatar.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    imageUrl: 'assets/placeholder.png' as never,\n    size: 100 as never\n  }\n}"
        },
        {
          "name": "meta",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/stories/avatar/Avatar.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Meta<AvatarStoryComponent>",
          "defaultValue": "{\n  title: 'Example/Avatar',\n  component: AvatarStoryComponent,\n  render: (args: AvatarStoryComponent) => ({\n    props: {\n      ...args\n    }\n  }),\n  argTypes: {}\n}"
        }
      ],
      "src/stories/button/Button.stories.ts": [
        {
          "name": "Default",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/stories/button/Button.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    label: 'Button'\n  }\n}"
        },
        {
          "name": "Disabled",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/stories/button/Button.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    label: 'Button',\n    disabled: true\n  }\n}"
        },
        {
          "name": "meta",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/stories/button/Button.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Meta<Button>",
          "defaultValue": "{\n  title: 'Example/Button',\n  component: Button,\n  render: (args: Button) => ({\n    props: {\n      ...args\n    }\n  }),\n  argTypes: {}\n}"
        }
      ],
      "src/stories/card/Card.stories.ts": [
        {
          "name": "Default",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/stories/card/Card.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    withHeader: true,\n    withFooter: true,\n    withBody: true\n  }\n}"
        },
        {
          "name": "meta",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/stories/card/Card.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Meta<CardComponent>",
          "defaultValue": "{\n  title: 'Example/Card',\n  component: CardComponent,\n  render: (args: CardComponent) => ({\n    props: {\n      ...args\n    }\n  }),\n  argTypes: {}\n}"
        },
        {
          "name": "WithoutFooter",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/stories/card/Card.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    withHeader: true,\n    withFooter: false,\n    withBody: true\n  }\n}"
        },
        {
          "name": "WithoutHeader",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/stories/card/Card.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    withHeader: false,\n    withFooter: true,\n    withBody: true\n  }\n}"
        }
      ],
      "src/stories/checkbox/Checkbox.stories.ts": [
        {
          "name": "Default",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/stories/checkbox/Checkbox.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    label: 'label checkbox'\n  }\n}"
        },
        {
          "name": "Disabled",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/stories/checkbox/Checkbox.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    label: 'disabled checkbox',\n    disabled: true,\n    value: false\n  }\n}"
        },
        {
          "name": "meta",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/stories/checkbox/Checkbox.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Meta<CheckboxStoryBookComponent>",
          "defaultValue": "{\n  title: 'Example/Checkbox',\n  component: CheckboxStoryBookComponent,\n  render: (args: CheckboxStoryBookComponent) => ({\n    props: {\n      ...args\n    }\n  }),\n  argTypes: {}\n}"
        }
      ],
      "src/stories/date-range-picker/DateRangePicker.stories.ts": [
        {
          "name": "Default",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/stories/date-range-picker/DateRangePicker.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {}\n}"
        },
        {
          "name": "meta",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/stories/date-range-picker/DateRangePicker.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Meta<DateRangePickerStoryComponent>",
          "defaultValue": "{\n  title: 'Example/DateRangePicker',\n  component: DateRangePickerStoryComponent,\n  render: (args: DateRangePickerStoryComponent) => ({\n    props: {\n      ...args\n    }\n  }),\n  argTypes: {}\n}"
        }
      ],
      "src/stories/divider/Divider.stories.ts": [
        {
          "name": "Default",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/stories/divider/Divider.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {}\n}"
        },
        {
          "name": "meta",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/stories/divider/Divider.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Meta<Divider>",
          "defaultValue": "{\n  title: 'Example/Divider',\n  component: Divider,\n  render: (args: Divider) => ({\n    props: {\n      ...args\n    }\n  }),\n  argTypes: {}\n}"
        }
      ],
      "src/stories/dropdown/Dropdown.stories.ts": [
        {
          "name": "Default",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/stories/dropdown/Dropdown.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {}\n}"
        },
        {
          "name": "meta",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/stories/dropdown/Dropdown.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Meta<Dropdown>",
          "defaultValue": "{\n  title: 'Example/Dropdown',\n  component: Dropdown,\n  render: (args: Dropdown) => ({\n    props: {\n      ...args\n    }\n  }),\n  argTypes: {}\n}"
        }
      ],
      "src/stories/icon-button/IconButton.stories.ts": [
        {
          "name": "Default",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/stories/icon-button/IconButton.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {}\n}"
        },
        {
          "name": "Disabled",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/stories/icon-button/IconButton.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    disabled: true\n  }\n}"
        },
        {
          "name": "meta",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/stories/icon-button/IconButton.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Meta<Button>",
          "defaultValue": "{\n  title: 'Example/Icon Button',\n  component: Button,\n  render: (args: Button) => ({\n    props: {\n      ...args\n    }\n  }),\n  argTypes: {}\n}"
        }
      ],
      "src/stories/input/Input.stories.ts": [
        {
          "name": "Default",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/stories/input/Input.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {}\n}"
        },
        {
          "name": "Disabled",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/stories/input/Input.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    disabled: true\n  }\n}"
        },
        {
          "name": "meta",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/stories/input/Input.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Meta<Input>",
          "defaultValue": "{\n  title: 'Example/Input',\n  component: Input,\n  render: (args: Input) => ({\n    props: {\n      ...args\n    }\n  }),\n  argTypes: {}\n}"
        }
      ],
      "src/stories/pill/Pill.stories.ts": [
        {
          "name": "Default",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/stories/pill/Pill.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {}\n}"
        },
        {
          "name": "meta",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/stories/pill/Pill.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Meta<Pill>",
          "defaultValue": "{\n  title: 'Example/Pill',\n  component: Pill,\n  render: (args: Pill) => ({\n    props: {\n      ...args\n    }\n  }),\n  argTypes: {}\n}"
        }
      ],
      "src/stories/progress-bar/ProgressBar.stories.ts": [
        {
          "name": "Default",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/stories/progress-bar/ProgressBar.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    progress: 50\n  }\n}"
        },
        {
          "name": "meta",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/stories/progress-bar/ProgressBar.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Meta<ProgressBar>",
          "defaultValue": "{\n  title: 'Example/ProgressBar',\n  component: ProgressBar,\n  render: (args: ProgressBar) => ({\n    props: {\n      ...args\n    }\n  }),\n  argTypes: {}\n}"
        }
      ],
      "src/stories/radio-button/RadioButton.stories.ts": [
        {
          "name": "Default",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/stories/radio-button/RadioButton.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {}\n}"
        },
        {
          "name": "meta",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/stories/radio-button/RadioButton.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Meta<RadioButtonComponent>",
          "defaultValue": "{\n  title: 'Example/RadioButton',\n  component: RadioButtonComponent,\n  render: (args: RadioButtonComponent) => ({\n    props: {\n      ...args\n    }\n  }),\n  argTypes: {}\n}"
        }
      ],
      "src/stories/selector/Selector.stories.ts": [
        {
          "name": "Default",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/stories/selector/Selector.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {}\n}"
        },
        {
          "name": "Disabled",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/stories/selector/Selector.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    disabled: true\n  }\n}"
        },
        {
          "name": "meta",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/stories/selector/Selector.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Meta<SelectorComponent>",
          "defaultValue": "{\n  title: 'Example/Selector',\n  component: SelectorComponent,\n  render: (args: SelectorComponent) => ({\n    props: {\n      ...args\n    }\n  }),\n  argTypes: {}\n}"
        }
      ],
      "src/stories/slide-toggle/SlideToggle.stories.ts": [
        {
          "name": "Default",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/stories/slide-toggle/SlideToggle.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {}\n}"
        },
        {
          "name": "meta",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/stories/slide-toggle/SlideToggle.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Meta<SlideToggleComponent>",
          "defaultValue": "{\n  title: 'Example/SlideToggle',\n  component: SlideToggleComponent,\n  render: (args: SlideToggleComponent) => ({\n    props: {\n      ...args\n    }\n  }),\n  argTypes: {}\n}"
        }
      ],
      "src/stories/table/Table.stories.ts": [
        {
          "name": "Default",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/stories/table/Table.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {}\n}"
        },
        {
          "name": "meta",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/stories/table/Table.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Meta<TableStoryComponent>",
          "defaultValue": "{\n  title: 'Example/Table',\n  component: TableStoryComponent,\n  render: (args: TableStoryComponent) => ({\n    props: {\n      ...args\n    }\n  }),\n  argTypes: {}\n}"
        }
      ],
      "src/stories/tabs/Tabs.stories.ts": [
        {
          "name": "Default",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/stories/tabs/Tabs.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {}\n}"
        },
        {
          "name": "meta",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/stories/tabs/Tabs.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Meta<Tabs>",
          "defaultValue": "{\n  title: 'Example/Tabs',\n  component: Tabs,\n  render: (args: Tabs) => ({\n    props: {\n      ...args\n    }\n  }),\n  argTypes: {}\n}"
        }
      ],
      "src/stories/textarea/Textarea.stories.ts": [
        {
          "name": "Default",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/stories/textarea/Textarea.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {}\n}"
        },
        {
          "name": "Disabled",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/stories/textarea/Textarea.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    disabled: true\n  }\n}"
        },
        {
          "name": "meta",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/stories/textarea/Textarea.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Meta<TextareaComponent>",
          "defaultValue": "{\n  title: 'Example/Textarea',\n  component: TextareaComponent,\n  render: (args: TextareaComponent) => ({\n    props: {\n      ...args\n    }\n  }),\n  argTypes: {}\n}"
        }
      ],
      "src/stories/unit-input/UnitInput.stories.ts": [
        {
          "name": "Default",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/stories/unit-input/UnitInput.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {}\n}"
        },
        {
          "name": "meta",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/stories/unit-input/UnitInput.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Meta<Input>",
          "defaultValue": "{\n  title: 'Example/Unit Input',\n  component: Input,\n  render: (args: Input) => ({\n    props: {\n      ...args\n    }\n  }),\n  argTypes: {}\n}"
        }
      ],
      "src/components/alert/utils.ts": [
        {
          "name": "generateID",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/components/alert/utils.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "(): string => {\n  return (\n    new Date().getTime().toString(36) +\n    Math.random().toString(36).substr(2, 2)\n  );\n}"
        }
      ],
      "src/pipes/format-bytes/format-bytes.pipe.ts": [
        {
          "name": "k",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/pipes/format-bytes/format-bytes.pipe.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "defaultValue": "1024"
        },
        {
          "name": "sizes",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/pipes/format-bytes/format-bytes.pipe.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "[]",
          "defaultValue": "['b', 'Kb', 'Mb', 'Gb', 'Tb']"
        }
      ],
      ".storybook/preview.ts": [
        {
          "name": "preview",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": ".storybook/preview.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Preview",
          "defaultValue": "{\n  parameters: {\n    actions: { argTypesRegex: '^on[A-Z].*' },\n    controls: {\n      matchers: {\n        color: /(background|color)$/i,\n        date: /Date$/i\n      }\n    }\n  }\n}"
        }
      ]
    },
    "groupedFunctions": {
      "src/decorators/cache/cache.ts": [
        {
          "name": "Cache",
          "file": "src/decorators/cache/cache.ts",
          "ctype": "miscellaneous",
          "subtype": "function",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "<p>This decorator assumes that the function being decorated returns an Observable\nand that the same arguments will produce the same result within the specified TTL</p>\n",
          "args": [
            {
              "name": "options",
              "type": "CacheOptions",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "jsdoctags": [
            {
              "name": "options",
              "type": "CacheOptions",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ]
    },
    "groupedEnumerations": {},
    "groupedTypeAliases": {
      "src/components/alert/types.ts": [
        {
          "name": "Alert",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "literal type",
          "file": "src/components/alert/types.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 187
        },
        {
          "name": "AlertConfig",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "literal type",
          "file": "src/components/alert/types.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 187
        },
        {
          "name": "Alerts",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "Array<Alert>",
          "file": "src/components/alert/types.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 183
        },
        {
          "name": "AlertType",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "\"warning\" | \"success\" | \"info\"",
          "file": "src/components/alert/types.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 192
        }
      ],
      "src/types/types.ts": [
        {
          "name": "CamelCase",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "",
          "file": "src/types/types.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 200
        },
        {
          "name": "CamelCaseArray",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "",
          "file": "src/types/types.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 194
        },
        {
          "name": "CamelCaseString",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "",
          "file": "src/types/types.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 194
        },
        {
          "name": "SnakeCase",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "",
          "file": "src/types/types.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 200
        },
        {
          "name": "SnakeCaseString",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "",
          "file": "src/types/types.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 194
        }
      ],
      "src/components/login-page/type.ts": [
        {
          "name": "LoginData",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "literal type",
          "file": "src/components/login-page/type.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 187
        }
      ],
      "src/components/selector/type.ts": [
        {
          "name": "SelectorOption",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "literal type",
          "file": "src/components/selector/type.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 187
        },
        {
          "name": "SelectorOptions",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "Array<SelectorOption>",
          "file": "src/components/selector/type.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 183
        }
      ],
      "src/stories/avatar/Avatar.stories.ts": [
        {
          "name": "Story",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "StoryObj<AvatarStoryComponent>",
          "file": "src/stories/avatar/Avatar.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 183
        }
      ],
      "src/stories/button/Button.stories.ts": [
        {
          "name": "Story",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "StoryObj<Button>",
          "file": "src/stories/button/Button.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 183
        }
      ],
      "src/stories/card/Card.stories.ts": [
        {
          "name": "Story",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "StoryObj<CardComponent>",
          "file": "src/stories/card/Card.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 183
        }
      ],
      "src/stories/checkbox/Checkbox.stories.ts": [
        {
          "name": "Story",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "StoryObj<CheckboxStoryBookComponent>",
          "file": "src/stories/checkbox/Checkbox.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 183
        }
      ],
      "src/stories/date-range-picker/DateRangePicker.stories.ts": [
        {
          "name": "Story",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "StoryObj<DateRangePickerStoryComponent>",
          "file": "src/stories/date-range-picker/DateRangePicker.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 183
        }
      ],
      "src/stories/divider/Divider.stories.ts": [
        {
          "name": "Story",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "StoryObj<Divider>",
          "file": "src/stories/divider/Divider.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 183
        }
      ],
      "src/stories/dropdown/Dropdown.stories.ts": [
        {
          "name": "Story",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "StoryObj<Dropdown>",
          "file": "src/stories/dropdown/Dropdown.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 183
        }
      ],
      "src/stories/icon-button/IconButton.stories.ts": [
        {
          "name": "Story",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "StoryObj<Button>",
          "file": "src/stories/icon-button/IconButton.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 183
        }
      ],
      "src/stories/input/Input.stories.ts": [
        {
          "name": "Story",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "StoryObj<Input>",
          "file": "src/stories/input/Input.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 183
        }
      ],
      "src/stories/pill/Pill.stories.ts": [
        {
          "name": "Story",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "StoryObj<Pill>",
          "file": "src/stories/pill/Pill.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 183
        }
      ],
      "src/stories/progress-bar/ProgressBar.stories.ts": [
        {
          "name": "Story",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "StoryObj<ProgressBar>",
          "file": "src/stories/progress-bar/ProgressBar.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 183
        }
      ],
      "src/stories/radio-button/RadioButton.stories.ts": [
        {
          "name": "Story",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "StoryObj<RadioButtonComponent>",
          "file": "src/stories/radio-button/RadioButton.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 183
        }
      ],
      "src/stories/selector/Selector.stories.ts": [
        {
          "name": "Story",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "StoryObj<SelectorComponent>",
          "file": "src/stories/selector/Selector.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 183
        }
      ],
      "src/stories/slide-toggle/SlideToggle.stories.ts": [
        {
          "name": "Story",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "StoryObj<SlideToggleComponent>",
          "file": "src/stories/slide-toggle/SlideToggle.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 183
        }
      ],
      "src/stories/table/Table.stories.ts": [
        {
          "name": "Story",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "StoryObj<TableStoryComponent>",
          "file": "src/stories/table/Table.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 183
        }
      ],
      "src/stories/tabs/Tabs.stories.ts": [
        {
          "name": "Story",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "StoryObj<Tabs>",
          "file": "src/stories/tabs/Tabs.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 183
        }
      ],
      "src/stories/textarea/Textarea.stories.ts": [
        {
          "name": "Story",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "StoryObj<TextareaComponent>",
          "file": "src/stories/textarea/Textarea.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 183
        }
      ],
      "src/stories/unit-input/UnitInput.stories.ts": [
        {
          "name": "Story",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "StoryObj<Input>",
          "file": "src/stories/unit-input/UnitInput.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 183
        }
      ],
      "src/app/features/pipes/pipes.component.ts": [
        {
          "name": "UniquePipeItem",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "literal type",
          "file": "src/app/features/pipes/pipes.component.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 187
        }
      ]
    }
  },
  "routes": [],
  "coverage": {
    "count": 1,
    "status": "low",
    "files": [
      {
        "filePath": ".storybook/preview.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "preview",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/app.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "AppComponent",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/app.config.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "appConfig",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/features/alerts/alerts.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "AlertsComponent",
        "coveragePercent": 0,
        "coverageCount": "0/4",
        "status": "low"
      },
      {
        "filePath": "src/app/features/buttons/buttons.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "ButtonsComponent",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/features/common-pages/common-pages.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "CommonPagesComponent",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "src/app/features/indicators/indicators.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "IndicatorsComponent",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/features/inputs/inputs.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "InputsComponent",
        "coveragePercent": 0,
        "coverageCount": "0/8",
        "status": "low"
      },
      {
        "filePath": "src/app/features/layout/layout.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "LayoutComponent",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/app/features/pipes/pipes.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "PipesComponent",
        "coveragePercent": 0,
        "coverageCount": "0/5",
        "status": "low"
      },
      {
        "filePath": "src/components/alert/alert.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "AlertComponent",
        "coveragePercent": 0,
        "coverageCount": "0/5",
        "status": "low"
      },
      {
        "filePath": "src/components/alert/alert.service.ts",
        "type": "injectable",
        "linktype": "injectable",
        "name": "AlertService",
        "coveragePercent": 0,
        "coverageCount": "0/10",
        "status": "low"
      },
      {
        "filePath": "src/components/alert/constants.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "ALERTS_CONFIG",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/components/alert/constants.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "DEFAULT_ALERTS_CONFIG",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/components/alert/utils.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "generateID",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/components/avatar/avatar.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "AvatarComponent",
        "coveragePercent": 0,
        "coverageCount": "0/4",
        "status": "low"
      },
      {
        "filePath": "src/components/button/button.ts",
        "type": "component",
        "linktype": "component",
        "name": "KsButton",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/components/card/card-body.directive.ts",
        "type": "directive",
        "linktype": "directive",
        "name": "KsCardBodyDirective",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/components/card/card-footer.directive.ts",
        "type": "directive",
        "linktype": "directive",
        "name": "KsCardFooterDirective",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/components/card/card-header.directive.ts",
        "type": "directive",
        "linktype": "directive",
        "name": "KsCardHeaderDirective",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/components/card/card.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "KsCardComponent",
        "coveragePercent": 0,
        "coverageCount": "0/4",
        "status": "low"
      },
      {
        "filePath": "src/components/checkbox/checkbox.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "CheckboxComponent",
        "coveragePercent": 0,
        "coverageCount": "0/11",
        "status": "low"
      },
      {
        "filePath": "src/components/date-range-picker/date-range-picker.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "DateRangePickerComponent",
        "coveragePercent": 0,
        "coverageCount": "0/5",
        "status": "low"
      },
      {
        "filePath": "src/components/dialog/dialog.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "DialogComponent",
        "coveragePercent": 0,
        "coverageCount": "0/5",
        "status": "low"
      },
      {
        "filePath": "src/components/divider/divider.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "KsDividerComponent",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/components/dropdown/dropdown.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "DropdownComponent",
        "coveragePercent": 0,
        "coverageCount": "0/7",
        "status": "low"
      },
      {
        "filePath": "src/components/form-field/form-field.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "FormFieldComponent",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "src/components/icon-button/icon-button.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "IconButtonComponent",
        "coveragePercent": 0,
        "coverageCount": "0/5",
        "status": "low"
      },
      {
        "filePath": "src/components/input/input.ts",
        "type": "component",
        "linktype": "component",
        "name": "KsInput",
        "coveragePercent": 0,
        "coverageCount": "0/7",
        "status": "low"
      },
      {
        "filePath": "src/components/login-page/login-page.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "LoginPageComponent",
        "coveragePercent": 0,
        "coverageCount": "0/4",
        "status": "low"
      },
      {
        "filePath": "src/components/page-not-found/page-not-found.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "PageNotFoundComponent",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "src/components/pill/pill.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "PillComponent",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/components/progress-bar/progress-bar.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "ProgressBarComponent",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/components/radio-button/radio-button/radio-button.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "KsRadioButtonComponent",
        "coveragePercent": 0,
        "coverageCount": "0/11",
        "status": "low"
      },
      {
        "filePath": "src/components/radio-button/radio-group/radio-group.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "KsRadioGroupComponent",
        "coveragePercent": 0,
        "coverageCount": "0/11",
        "status": "low"
      },
      {
        "filePath": "src/components/selector/selector.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "KsSelectorComponent",
        "coveragePercent": 0,
        "coverageCount": "0/12",
        "status": "low"
      },
      {
        "filePath": "src/components/slide-toggle/slide-toggle.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "KsSlideToggleComponent",
        "coveragePercent": 0,
        "coverageCount": "0/10",
        "status": "low"
      },
      {
        "filePath": "src/components/table/table.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "TableComponent",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "src/components/tabs/tab/tab.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "TabComponent",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "src/components/tabs/tabs/tabs.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "TabsComponent",
        "coveragePercent": 0,
        "coverageCount": "0/6",
        "status": "low"
      },
      {
        "filePath": "src/components/textarea/textarea.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "KsTextArea",
        "coveragePercent": 0,
        "coverageCount": "0/7",
        "status": "low"
      },
      {
        "filePath": "src/components/unit-input/unit-input.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "UnitInputComponent",
        "coveragePercent": 0,
        "coverageCount": "0/6",
        "status": "low"
      },
      {
        "filePath": "src/decorators/cache/cache.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "CacheOptions",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/decorators/cache/cache.ts",
        "type": "function",
        "linktype": "miscellaneous",
        "linksubtype": "function",
        "name": "Cache",
        "coveragePercent": 100,
        "coverageCount": "1/1",
        "status": "very-good"
      },
      {
        "filePath": "src/directives/error/error.directive.ts",
        "type": "directive",
        "linktype": "directive",
        "name": "ErrorDirective",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/directives/form-field-control/form-field-control.directive.ts",
        "type": "directive",
        "linktype": "directive",
        "name": "KsFormFieldControl",
        "coveragePercent": 0,
        "coverageCount": "0/4",
        "status": "low"
      },
      {
        "filePath": "src/directives/label/label.directive.ts",
        "type": "directive",
        "linktype": "directive",
        "name": "KsLabel",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/pipes/IdToValue/id-to-value.pipe.ts",
        "type": "pipe",
        "linktype": "pipe",
        "name": "IdToValuePipe",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/pipes/capitalize/capitalize.pipe.ts",
        "type": "pipe",
        "linktype": "pipe",
        "name": "CapitalizePipe",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/pipes/default-value/default-value.pipe.ts",
        "type": "pipe",
        "linktype": "pipe",
        "name": "DefaultValuePipe",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/pipes/ellipsis/ellipsis.pipe.ts",
        "type": "pipe",
        "linktype": "pipe",
        "name": "EllipsisPipe",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/pipes/enum-property/enum-property.pipe.ts",
        "type": "pipe",
        "linktype": "pipe",
        "name": "EnumPropertyPipe",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/pipes/first/first.pipe.ts",
        "type": "pipe",
        "linktype": "pipe",
        "name": "FirstPipe",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/pipes/format-bytes/format-bytes.pipe.ts",
        "type": "pipe",
        "linktype": "pipe",
        "name": "FormatBytesPipe",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/pipes/format-bytes/format-bytes.pipe.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "k",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/pipes/format-bytes/format-bytes.pipe.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "sizes",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/pipes/highlight/highlight.pipe.ts",
        "type": "pipe",
        "linktype": "pipe",
        "name": "HighlightPipe",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/pipes/join/join.pipe.ts",
        "type": "pipe",
        "linktype": "pipe",
        "name": "JoinPipe",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/pipes/last/last.pipe.ts",
        "type": "pipe",
        "linktype": "pipe",
        "name": "LastPipe",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/pipes/memo/memo.pipe.ts",
        "type": "pipe",
        "linktype": "pipe",
        "name": "MemoPipe",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/pipes/split/split.pipe.ts",
        "type": "pipe",
        "linktype": "pipe",
        "name": "SplitPipe",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/pipes/truncate/truncate.pipe.ts",
        "type": "pipe",
        "linktype": "pipe",
        "name": "TruncatePipe",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/pipes/unique/unique.pipe.ts",
        "type": "pipe",
        "linktype": "pipe",
        "name": "UniquePipe",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/pipes/user-name/user-name.pipe.ts",
        "type": "pipe",
        "linktype": "pipe",
        "name": "UserNamePipe",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/stories/avatar/Avatar.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Default",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/stories/avatar/Avatar.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "meta",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/stories/avatar/avatar.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "AvatarStoryComponent",
        "coveragePercent": 0,
        "coverageCount": "0/4",
        "status": "low"
      },
      {
        "filePath": "src/stories/button/Button.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Default",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/stories/button/Button.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Disabled",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/stories/button/Button.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "meta",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/stories/button/button.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "ButtonComponent",
        "coveragePercent": 50,
        "coverageCount": "2/4",
        "status": "medium"
      },
      {
        "filePath": "src/stories/card/Card.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Default",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/stories/card/Card.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "meta",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/stories/card/Card.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "WithoutFooter",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/stories/card/Card.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "WithoutHeader",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/stories/card/card.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "CardComponent",
        "coveragePercent": 0,
        "coverageCount": "0/4",
        "status": "low"
      },
      {
        "filePath": "src/stories/checkbox/Checkbox.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Default",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/stories/checkbox/Checkbox.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Disabled",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/stories/checkbox/Checkbox.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "meta",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/stories/checkbox/checkbox.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "CheckboxStoryBookComponent",
        "coveragePercent": 14,
        "coverageCount": "1/7",
        "status": "low"
      },
      {
        "filePath": "src/stories/date-range-picker/DateRangePicker.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Default",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/stories/date-range-picker/DateRangePicker.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "meta",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/stories/date-range-picker/date-range-picker.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "DateRangePickerStoryComponent",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/stories/divider/Divider.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Default",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/stories/divider/Divider.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "meta",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/stories/divider/divider.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "DividerComponent",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/stories/dropdown/Dropdown.stories.ts",
        "type": "component",
        "linktype": "component",
        "name": "Dropdown",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/stories/dropdown/Dropdown.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Default",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/stories/dropdown/Dropdown.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "meta",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/stories/icon-button/IconButton.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Default",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/stories/icon-button/IconButton.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Disabled",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/stories/icon-button/IconButton.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "meta",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/stories/icon-button/icon-button.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "IconButtonComponentStory",
        "coveragePercent": 0,
        "coverageCount": "0/6",
        "status": "low"
      },
      {
        "filePath": "src/stories/input/Input.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Default",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/stories/input/Input.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Disabled",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/stories/input/Input.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "meta",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/stories/input/input.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "InputComponent",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/stories/pill/Pill.stories.ts",
        "type": "component",
        "linktype": "component",
        "name": "Pill",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/stories/pill/Pill.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Default",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/stories/pill/Pill.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "meta",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/stories/progress-bar/ProgressBar.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Default",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/stories/progress-bar/ProgressBar.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "meta",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/stories/progress-bar/progress-bar.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "ProgressBarStoryComponent",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/stories/radio-button/RadioButton.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Default",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/stories/radio-button/RadioButton.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "meta",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/stories/radio-button/radio-button.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "RadioButtonComponent",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/stories/selector/Selector.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Default",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/stories/selector/Selector.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Disabled",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/stories/selector/Selector.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "meta",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/stories/selector/selector.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "SelectorComponent",
        "coveragePercent": 0,
        "coverageCount": "0/4",
        "status": "low"
      },
      {
        "filePath": "src/stories/slide-toggle/SlideToggle.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Default",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/stories/slide-toggle/SlideToggle.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "meta",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/stories/slide-toggle/slide-toggle.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "SlideToggleComponent",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/stories/table/Table.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Default",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/stories/table/Table.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "meta",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/stories/table/table.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "TableStoryComponent",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/stories/tabs/Tabs.stories.ts",
        "type": "component",
        "linktype": "component",
        "name": "Tabs",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/stories/tabs/Tabs.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Default",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/stories/tabs/Tabs.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "meta",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/stories/textarea/Textarea.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Default",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/stories/textarea/Textarea.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Disabled",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/stories/textarea/Textarea.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "meta",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/stories/textarea/textarea.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "TextareaComponent",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/stories/unit-input/UnitInput.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Default",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/stories/unit-input/UnitInput.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "meta",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/stories/unit-input/unit-input.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "InputComponent",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/stories/wrapper/wrapper.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "WrapperComponent",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      }
    ]
  }
}
